<Activity mc:Ignorable="sap sap2010" x:Class="Process_Transaction_2" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="clr-namespace:Pop_Ups;assembly=Pop Ups" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Diagnostics;assembly=System" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:sn="clr-namespace:System.Net;assembly=System" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:su="clr-namespace:SharePoint.UiPathTeam_Sharepoint_Activities;assembly=SharePoint" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:us="clr-namespace:UiPathTeam.SharePoint;assembly=UiPathTeam.SharePoint" xmlns:usa="clr-namespace:UiPathTeam.SharePoint.Activities;assembly=UiPathTeam.SharePoint.Activities" xmlns:usal="clr-namespace:UiPathTeam.SharePoint.Activities.Libraries;assembly=UiPathTeam.SharePoint.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(scg:List(snm:MailMessage))" />
    <x:Property Name="io_arrExitPoint" Type="InOutArgument(s:Int32[])" />
    <x:Property Name="io_swProcessingTimer" Type="InOutArgument(sd:Stopwatch)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="io_Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_arrCaseID" Type="InOutArgument(s:String[])" />
    <x:Property Name="io_dtDogInformation" Type="InOutArgument(sd1:DataTable)" />
    <x:Property Name="in_strSharepointLockFilePath" Type="InOutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>998,947</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Process_Transaction_2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="42">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>Pop_Ups</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>System.Net</x:String>
      <x:String>SharePoint.UiPathTeam_Sharepoint_Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>Microsoft.SharePoint.Client</x:String>
      <x:String>UiPathTeam.SharePoint.Activities.Libraries</x:String>
      <x:String>UiPathTeam.SharePoint.Activities</x:String>
      <x:String>UiPathTeam.SharePoint</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="40">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>Pop Ups</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>SharePoint</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client.Runtime</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " sap:VirtualizedContainerService.HintSize="634,712" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="s:Exception" Name="exeException" />
      <Variable x:TypeArguments="x:String" Name="strDDILogSharepointFilepath" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,127.5</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID13</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID13">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,127.5</av:Point>
          <av:Size x:Key="ShapeSize">200,52</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,179.5 300,229.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[in_TransactionItem]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="snm:MailMessage">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="item" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Get Text from Email" sap:VirtualizedContainerService.HintSize="803,14502" sap2010:WorkflowViewState.IdRef="Sequence_73">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strEmailBody" />
                <Variable x:TypeArguments="x:String" Name="strTitle" />
                <Variable x:TypeArguments="x:String" Name="strDog2MicroChipped" />
                <Variable x:TypeArguments="x:String" Name="strDog1MicroChipped" />
                <Variable x:TypeArguments="x:String" Name="strDog3MicroChipped" />
                <Variable x:TypeArguments="x:String" Name="strDog1MicroChipNumber" />
                <Variable x:TypeArguments="x:String" Name="strDog2MicroChipNumber" />
                <Variable x:TypeArguments="x:String" Name="strEmailID" />
                <Variable x:TypeArguments="x:String" Name="strFirstName" />
                <Variable x:TypeArguments="x:String" Name="strLastName" />
                <Variable x:TypeArguments="x:String" Name="strAddressLine1" />
                <Variable x:TypeArguments="x:String" Name="strAddressLine2" />
                <Variable x:TypeArguments="x:String" Name="strPostCode" />
                <Variable x:TypeArguments="x:String" Name="strCounty" />
                <Variable x:TypeArguments="x:String" Name="strTown" />
                <Variable x:TypeArguments="x:String" Name="strOwnerDoB" />
                <Variable x:TypeArguments="x:String" Name="strOwnerPhoneNumber" />
                <Variable x:TypeArguments="x:String" Name="strOwnerEmailAddress" />
                <Variable x:TypeArguments="x:String" Name="strDog1Name" />
                <Variable x:TypeArguments="x:String" Name="strDog1DoB" />
                <Variable x:TypeArguments="x:String" Name="strDog1Colour" />
                <Variable x:TypeArguments="x:String" Name="strDog1Gender" />
                <Variable x:TypeArguments="x:String" Name="strDog1Neutered" />
                <Variable x:TypeArguments="x:String" Name="strDog2Name" />
                <Variable x:TypeArguments="x:String" Name="strDog2DoB" />
                <Variable x:TypeArguments="x:String" Name="strDog2Colour" />
                <Variable x:TypeArguments="x:String" Name="strDog2Gender" />
                <Variable x:TypeArguments="x:String" Name="strDog2Neutered" />
                <Variable x:TypeArguments="x:String" Name="strDog3MicroChipNumber" />
                <Variable x:TypeArguments="x:String" Name="strDog3Name" />
                <Variable x:TypeArguments="x:String" Name="strDog3DoB" />
                <Variable x:TypeArguments="x:String" Name="strDog3Colour" />
                <Variable x:TypeArguments="x:String" Name="strDog3Gender" />
                <Variable x:TypeArguments="x:String" Name="strDog3Neutered" />
                <Variable x:TypeArguments="x:Int32" Name="intEmailID" />
                <Variable x:TypeArguments="x:String" Name="strDataAsTable" />
                <Variable x:TypeArguments="x:String" Name="strButtonSelected" />
                <Variable x:TypeArguments="sd1:DataTable" Name="dtCurrentEmail" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="761,60" sap2010:WorkflowViewState.IdRef="Assign_68">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strEmailBody]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[item.Body]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:MoveOutlookMessage Account="[io_Config(&quot;AccountName&quot;).ToString]" DisplayName="Move Email to &quot;In Progress&quot;" sap:VirtualizedContainerService.HintSize="761,87" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_1" MailFolder="[io_Config(&quot;InProgress&quot;).ToString]" MailMessage="[item]" />
              <If Condition="[CBool(io_Config(&quot;boolPausePoint1&quot;))]" sap:VirtualizedContainerService.HintSize="761,250" sap2010:WorkflowViewState.IdRef="If_11">
                <If.Then>
                  <ui:BuildDataTable DataTable="[dtCurrentEmail]" DisplayName="Build Dangerous Dog Data Table" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;EmailRef&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Title&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;FirstName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;LastName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;AddressLine1&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;_x0020_AddressLine2&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;TownOrCity&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;County&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;PostCode&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DateOfBirth&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;PhoneNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;EmailAddress&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DogsName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DogDOB&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DogColour&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DogGender&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Neutered&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Microchipped&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;MicrochipNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                </If.Then>
              </If>
              <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Email ID" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="761,139" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2">
                <ui:GetRobotAsset.Value>
                  <OutArgument x:TypeArguments="x:String">[strEmailID]</OutArgument>
                </ui:GetRobotAsset.Value>
              </ui:GetRobotAsset>
              <Sequence DisplayName="Get Owner Information" sap:VirtualizedContainerService.HintSize="761,68" sap2010:WorkflowViewState.IdRef="Sequence_46">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Get Name" sap:VirtualizedContainerService.HintSize="376,949" sap2010:WorkflowViewState.IdRef="Sequence_40">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieLastName" />
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieFirstName" />
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerTitle" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="Title:\s*([A-Za-z]+)" DisplayName="Get Owners Title" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_30" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Title:\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Title:\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieOwnerTitle]" />
                  <ui:Matches BuilderPattern="First name:\s*([A-Za-z]+)" DisplayName="Get Owners First Name" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_31" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;First name:\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="First name:\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieFirstName]" />
                  <ui:Matches BuilderPattern="Last name:\s*([A-Za-z]+)" DisplayName="Get Owners Last Name" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_32" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Last name:\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Last name:\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieLastName]" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_69">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strTitle]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieOwnerTitle(0).value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_70">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strTitle]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strTitle.Replace("Title: ","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_71">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strFirstName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieFirstName(0).Value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_72">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strFirstName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strFirstName.Replace("First name: ","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_73">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strLastName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieLastName(0).Value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_74">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strLastName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strLastName.Replace("Last name: ","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence DisplayName="Get Owner Address" sap:VirtualizedContainerService.HintSize="376,68" sap2010:WorkflowViewState.IdRef="Sequence_42">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerPostCode" />
                    <Variable x:TypeArguments="x:String" Name="strOwnerAdress" />
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerAddress" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="\b\d{1,5}[^a-zA-Z]*\b(?:[a-zA-Z0-9\s,]+)\b[0-9A-Z]{2,4}\s[0-9][A-Z]{2}\b" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_33" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;\\b\\d{1,5}[^a-zA-Z]*\\b(?:[a-zA-Z0-9\\s,]+)\\b[0-9A-Z]{2,4}\\s[0-9][A-Z]{2}\\b&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="\b\d{1,5}[^a-zA-Z]*\b(?:[a-zA-Z0-9\s,]+)\b[0-9A-Z]{2,4}\s[0-9][A-Z]{2}\b" RegexOption="IgnoreCase, Compiled" Result="[ieOwnerAddress]" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_75">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strOwnerAdress]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieOwnerAddress(0).Value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:Matches BuilderPattern="[A-Z]{1,2}[0-9R][0-9A-Z]? [0-9][ABD-HJLNP-UW-Z]{2}" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_34" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;[A-Z]{1,2}[0-9R][0-9A-Z]? [0-9][ABD-HJLNP-UW-Z]{2}&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="[A-Z]{1,2}[0-9R][0-9A-Z]? [0-9][ABD-HJLNP-UW-Z]{2}" RegexOption="IgnoreCase, Compiled" Result="[ieOwnerPostCode]" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_76">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strPostCode]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieOwnerPostCode(0).Value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_77">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strOwnerAdress]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strOwnerAdress.Replace(strPostCode,"")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Sequence sap:VirtualizedContainerService.HintSize="334,452" sap2010:WorkflowViewState.IdRef="Sequence_41">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_78">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strAddressLine1]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[strOwnerAdress.Split(","c)(0)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_79">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strTown]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[strOwnerAdress.Split(","c)(1)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_80">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strCounty]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[strOwnerAdress.Split(","c)(2)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_81">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strAddressLine2]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="WriteLine_33" Text="[strAddressLine1]" />
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="WriteLine_34" Text="[strTown]" />
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="WriteLine_35" Text="[strCounty]" />
                </Sequence>
                <Sequence DisplayName="Get Owner DoB" sap:VirtualizedContainerService.HintSize="376,68" sap2010:WorkflowViewState.IdRef="Sequence_43">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerDoB" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="\b(?:0[1-9]|[12][0-9]|3[01])[\/\-](0[1-9]|1[0-2])[\/\-]\d{4}\b" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_35" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;\\b(?:0[1-9]|[12][0-9]|3[01])[\\\/\\-](0[1-9]|1[0-2])[\\\/\\-]\\d{4}\\b&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="\b(?:0[1-9]|[12][0-9]|3[01])[\/\-](0[1-9]|1[0-2])[\/\-]\d{4}\b" RegexOption="IgnoreCase, Compiled" Result="[ieOwnerDoB]" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_82">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strOwnerDoB]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieOwnerDoB(0).value]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence DisplayName="Get Owner Phone Number" sap:VirtualizedContainerService.HintSize="376,68" sap2010:WorkflowViewState.IdRef="Sequence_44">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerPhoneNumber" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="\b(?:(?:\+44|0)[1-9]\d{1,4}|\(?(?:(?:0\d{10})|(?:\d{5}\s\d{4})|(?:0\d{3}\s\d{3})|(?:0\d{2}\s\d{4}\s\d{4})|(?:0\d{4}\s\d{2}\s\d{4}))\)?)[\s\d]*\d{5,9}\b" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_36" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;\\b(?:(?:\\+44|0)[1-9]\\d{1,4}|\\(?(?:(?:0\\d{10})|(?:\\d{5}\\s\\d{4})|(?:0\\d{3}\\s\\d{3})|(?:0\\d{2}\\s\\d{4}\\s\\d{4})|(?:0\\d{4}\\s\\d{2}\\s\\d{4}))\\)?)[\\s\\d]*\\d{5,9}\\b&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="\b(?:(?:\+44|0)[1-9]\d{1,4}|\(?(?:(?:0\d{10})|(?:\d{5}\s\d{4})|(?:0\d{3}\s\d{3})|(?:0\d{2}\s\d{4}\s\d{4})|(?:0\d{4}\s\d{2}\s\d{4}))\)?)[\s\d]*\d{5,9}\b" RegexOption="IgnoreCase, Compiled" Result="[ieOwnerPhoneNumber]" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_83">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strOwnerPhoneNumber]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieOwnerPhoneNumber(0).value]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence DisplayName="Get Owner Email Address" sap:VirtualizedContainerService.HintSize="376,68" sap2010:WorkflowViewState.IdRef="Sequence_45">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerEmailAddress" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}\b" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_37" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\b&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}\b" RegexOption="IgnoreCase, Compiled" Result="[ieOwnerEmailAddress]" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_84">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strOwnerEmailAddress]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieOwnerEmailAddress(0).value]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </Sequence>
              <Sequence DisplayName="Get Dog 1 information" sap:VirtualizedContainerService.HintSize="761,1997" sap2010:WorkflowViewState.IdRef="Sequence_54">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Get Dog Name" sap:VirtualizedContainerService.HintSize="683,68" sap2010:WorkflowViewState.IdRef="Sequence_47">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1Name" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="What’s your dog’s name\?\s*([A-Za-z]+)" DisplayName="Get Dog Name" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_38" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s your dog’s name\\?\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s your dog’s name\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog1Name]" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_85">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog1Name]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieDog1Name(0).value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_133">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog1Name]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog1Name.Replace(Environment.NewLine, String.Empty)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_86">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog1Name]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog1Name.Replace("What’s your dog’s name?","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence DisplayName="Get Dog DoB" sap:VirtualizedContainerService.HintSize="683,68" sap2010:WorkflowViewState.IdRef="Sequence_48">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1DoB" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="What’s your dog’s date of birth\?\s*(\d{2}/\d{2}/\d{4})" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_39" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s your dog’s date of birth\\?\\s*(\\d{2}\/\\d{2}\/\\d{4})&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s your dog’s date of birth\?\s*(\d{2}/\d{2}/\d{4})" RegexOption="IgnoreCase, Compiled" Result="[ieDog1DoB]" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_87">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog1DoB]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieDog1DoB(0).value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_134">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog1DoB]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog1DoB.Replace(Environment.NewLine, String.Empty)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_88">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog1DoB]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog1DoB.Replace("What’s your dog’s date of birth?","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence DisplayName="Get Dog Colour" sap:VirtualizedContainerService.HintSize="683,68" sap2010:WorkflowViewState.IdRef="Sequence_49">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1Colour" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="What colour is your dog\?\s*([A-Za-z\s/]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_40" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What colour is your dog\\?\\s*([A-Za-z\\s\/]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What colour is your dog\?\s*([A-Za-z\s/]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog1Colour]" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_89">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog1Colour]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieDog1Colour(0).value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_135">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog1Colour]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog1Colour.Replace(Environment.NewLine, String.Empty)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_90">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog1Colour]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog1Colour.Replace("What colour is your dog?","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence DisplayName="Get Dog Gender" sap:VirtualizedContainerService.HintSize="683,68" sap2010:WorkflowViewState.IdRef="Sequence_50">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1Gender" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="What gender is your dog\?\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_41" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What gender is your dog\\?\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What gender is your dog\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog1Gender]" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_91">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog1Gender]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieDog1Gender(0).value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_136">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog1Gender]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog1Gender.Replace(Environment.NewLine, String.Empty)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_92">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog1Gender]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog1Gender.Replace("What gender is your dog?","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence DisplayName="Get whether Dog is Neutered" sap:VirtualizedContainerService.HintSize="683,68" sap2010:WorkflowViewState.IdRef="Sequence_51">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1Neutered" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="Is your dog neutered\?\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_42" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Is your dog neutered\\?\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Is your dog neutered\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog1Neutered]" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_93">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog1Neutered]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieDog1Neutered(0).value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_137">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog1Neutered]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog1Neutered.Replace(Environment.NewLine, String.Empty)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_94">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog1Neutered]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog1Neutered.Replace("Is your dog neutered?","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence DisplayName="Get Whether Dog Is Microchipped" sap:VirtualizedContainerService.HintSize="683,68" sap2010:WorkflowViewState.IdRef="Sequence_52">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1MicroChipped" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="Is your dog microchipped\?\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_43" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Is your dog microchipped\\?\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Is your dog microchipped\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog1MicroChipped]" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_95">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog1MicroChipped]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieDog1MicroChipped(0).value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_138">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog1MicroChipped]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog1MicroChipped.Replace(Environment.NewLine, String.Empty)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_96">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog1MicroChipped]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog1MicroChipped.Replace("Is your dog microchipped?","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <If Condition="[strDog1MicroChipped.ToLower.Contains(&quot;yes&quot;)]" sap:VirtualizedContainerService.HintSize="683,611" sap2010:WorkflowViewState.IdRef="If_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Get Dog 1 Microchip Number" sap:VirtualizedContainerService.HintSize="376,451" sap2010:WorkflowViewState.IdRef="Sequence_53">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1MicrochipNumber" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="What’s the microchip number\?\s*(\d+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_44" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s the microchip number\\?\\s*(\\d+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s the microchip number\?\s*(\d+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog1MicrochipNumber]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_97">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1MicroChipNumber]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog1MicrochipNumber(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_139">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1MicroChipNumber]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog1MicroChipNumber.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_98">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1MicroChipNumber]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog1MicroChipNumber.Replace("What’s the microchip number?","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_99">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strDog1MicroChipNumber]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">N/A</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strtitle,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog1Name,strDog1DoB,strDog1Colour,strDog1Gender,strDog1Neutered,strDog1MicroChipped,strDog1MicroChipNumber}]" DataTable="[io_dtDogInformation]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="683,188" sap2010:WorkflowViewState.IdRef="AddDataRow_7" />
                <If Condition="[CBool(io_Config(&quot;boolPausePoint1&quot;))]" sap:VirtualizedContainerService.HintSize="683,378" sap2010:WorkflowViewState.IdRef="If_13">
                  <If.Then>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strtitle,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog1Name,strDog1DoB,strDog1Colour,strDog1Gender,strDog1Neutered,strDog1MicroChipped,strDog1MicroChipNumber}]" DataTable="[dtCurrentEmail]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_8" />
                  </If.Then>
                </If>
              </Sequence>
              <If Condition="[strEmailBody.ToLower.Contains(&quot;dog 2&quot;)]" DisplayName="If the Owner has a second dog" sap:VirtualizedContainerService.HintSize="761,4485" sap2010:WorkflowViewState.IdRef="If_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Get Dog 2 information" sap:VirtualizedContainerService.HintSize="725,4295" sap2010:WorkflowViewState.IdRef="Sequence_62">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Get Dog 2 Name" sap:VirtualizedContainerService.HintSize="683,451" sap2010:WorkflowViewState.IdRef="Sequence_55">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2Name" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="What’s your dog’s name\?\s*\([Dd]og 2\)\s*([A-Za-z]+)" DisplayName="Get Dog Name" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_45" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s your dog’s name\\?\\s*\\([Dd]og 2\\)\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s your dog’s name\?\s*\([Dd]og 2\)\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog2Name]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_100">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2Name]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog2Name(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_140">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2Name]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog2Name.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_101">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2Name]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog2Name.Replace("What’s your dog’s name? (dog 2)","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Get Dog DoB" sap:VirtualizedContainerService.HintSize="683,451" sap2010:WorkflowViewState.IdRef="Sequence_56">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2DoB" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="What’s your dog’s date of birth\?\s*\([Dd]og 2\)\s*(\d{2}/\d{2}/\d{4})" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_46" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s your dog’s date of birth\\?\\s*\\([Dd]og 2\\)\\s*(\\d{2}\/\\d{2}\/\\d{4})&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s your dog’s date of birth\?\s*\([Dd]og 2\)\s*(\d{2}/\d{2}/\d{4})" RegexOption="IgnoreCase, Compiled" Result="[ieDog2DoB]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_102">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2DoB]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog2DoB(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_141">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2DoB]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog2DoB.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_103">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2DoB]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog2DoB.Replace("What’s your dog’s date of birth? (dog 2)","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Get Dog Colour" sap:VirtualizedContainerService.HintSize="683,451" sap2010:WorkflowViewState.IdRef="Sequence_57">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2Colour" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="What colour is your dog\?\s*\([Dd]og 2\)\s*([A-Za-z\s/]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_47" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What colour is your dog\\?\\s*\\([Dd]og 2\\)\\s*([A-Za-z\\s\/]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What colour is your dog\?\s*\([Dd]og 2\)\s*([A-Za-z\s/]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog2Colour]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_104">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2Colour]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog2Colour(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_142">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2Colour]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog2Colour.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_105">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2Colour]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog2Colour.Replace("What colour is your dog? (dog 2)","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Get Dog Gender" sap:VirtualizedContainerService.HintSize="683,451" sap2010:WorkflowViewState.IdRef="Sequence_58">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2Gender" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="What gender is your dog\?\s*\([Dd]og 2\)\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_48" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What gender is your dog\\?\\s*\\([Dd]og 2\\)\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What gender is your dog\?\s*\([Dd]og 2\)\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog2Gender]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_106">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2Gender]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog2Gender(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_143">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2Gender]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog2Gender.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_107">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2Gender]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog2Gender.Replace("What gender is your dog? (dog 2)","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Get whether Dog is Neutered" sap:VirtualizedContainerService.HintSize="683,451" sap2010:WorkflowViewState.IdRef="Sequence_59">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2Neutered" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="Is your dog neutered\?\s*\([Dd]og 2\)\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_49" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Is your dog neutered\\?\\s*\\([Dd]og 2\\)\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Is your dog neutered\?\s*\([Dd]og 2\)\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog2Neutered]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_108">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2Neutered]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog2Neutered(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_144">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2Neutered]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog2Neutered.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_109">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2Neutered]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog2Neutered.Replace("Is your dog neutered? (dog 2)","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Get Whether Dog Is Microchipped" sap:VirtualizedContainerService.HintSize="683,451" sap2010:WorkflowViewState.IdRef="Sequence_60">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2MicroChipped" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="Is your dog microchipped\?\s*\([Dd]og 2\)\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_50" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Is your dog microchipped\\?\\s*\\([Dd]og 2\\)\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Is your dog microchipped\?\s*\([Dd]og 2\)\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog2MicroChipped]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_110">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2MicroChipped]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog2MicroChipped(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_145">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2MicroChipped]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog2MicroChipped.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_111">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2MicroChipped]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog2MicroChipped.Replace("Is your dog microchipped? (dog 2)","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <If Condition="[strDog2MicroChipped.ToLower.Contains(&quot;yes&quot;)]" DisplayName="If the Dog is Microchiped" sap:VirtualizedContainerService.HintSize="683,611" sap2010:WorkflowViewState.IdRef="If_14">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Get Dog 2 Microchip Number" sap:VirtualizedContainerService.HintSize="376,451" sap2010:WorkflowViewState.IdRef="Sequence_61">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2MicrochipNumber" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches BuilderPattern="What’s the microchip number\?\s*\([Dd]og 2\)\s*(\d+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_51" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s the microchip number\\?\\s*\\([Dd]og 2\\)\\s*(\\d+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s the microchip number\?\s*\([Dd]og 2\)\s*(\d+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog2MicrochipNumber]" />
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_112">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2MicroChipNumber]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[ieDog2MicrochipNumber(0).value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_146">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2MicroChipNumber]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog2MicroChipNumber.Replace(Environment.NewLine, String.Empty)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_113">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2MicroChipNumber]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog2MicroChipNumber.Replace("What’s the microchip number? (dog 2)","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_114">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog2MicroChipNumber]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">N/A</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strtitle,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog2Name,strDog2DoB,strDog2Colour,strDog2Gender,strDog2Neutered,strDog2MicroChipped,strDog2MicroChipNumber}]" DataTable="[io_dtDogInformation]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="683,188" sap2010:WorkflowViewState.IdRef="AddDataRow_9" />
                    <If Condition="[CBool(io_Config(&quot;boolPausePoint1&quot;))]" sap:VirtualizedContainerService.HintSize="683,378" sap2010:WorkflowViewState.IdRef="If_15">
                      <If.Then>
                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strtitle,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog1Name,strDog1DoB,strDog1Colour,strDog1Gender,strDog1Neutered,strDog1MicroChipped,strDog1MicroChipNumber}]" DataTable="[dtCurrentEmail]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_10" />
                      </If.Then>
                    </If>
                  </Sequence>
                </If.Then>
              </If>
              <If Condition="[strEmailBody.ToLower.Contains(&quot;dog 3&quot;)]" DisplayName="If the Owner has a third" sap:VirtualizedContainerService.HintSize="761,4485" sap2010:WorkflowViewState.IdRef="If_19">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Get Dog 3 information" sap:VirtualizedContainerService.HintSize="725,4295" sap2010:WorkflowViewState.IdRef="Sequence_70">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Get Dog Name" sap:VirtualizedContainerService.HintSize="683,451" sap2010:WorkflowViewState.IdRef="Sequence_63">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3Name" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="What’s your dog’s name\?\s*\([Dd]og 3\)\s*([A-Za-z]+)" DisplayName="Get Dog Name" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_52" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s your dog’s name\\?\\s*\\([Dd]og 3\\)\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s your dog’s name\?\s*\([Dd]og 3\)\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog3Name]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_115">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog3Name]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog3Name(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_147">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog3Name]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog3Name.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_116">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog3Name]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog3Name.Replace("What’s your dog’s name? (dog 3)","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Get Dog DoB" sap:VirtualizedContainerService.HintSize="683,451" sap2010:WorkflowViewState.IdRef="Sequence_64">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3DoB" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="What’s your dog’s date of birth\?\s*\([Dd]og 3\)\s*(\d{2}/\d{2}/\d{4})" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_53" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s your dog’s date of birth\\?\\s*\\([Dd]og 3\\)\\s*(\\d{2}\/\\d{2}\/\\d{4})&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s your dog’s date of birth\?\s*\([Dd]og 3\)\s*(\d{2}/\d{2}/\d{4})" RegexOption="IgnoreCase, Compiled" Result="[ieDog3DoB]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_117">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog3DoB]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog3DoB(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_148">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog3DoB]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog3DoB.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_118">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog3DoB]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog3DoB.Replace("What’s your dog’s date of birth? (dog 3)","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Get Dog Colour" sap:VirtualizedContainerService.HintSize="683,451" sap2010:WorkflowViewState.IdRef="Sequence_65">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3Colour" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="What colour is your dog\?\s*\([Dd]og 3\)\s*([A-Za-z\s/]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_54" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What colour is your dog\\?\\s*\\([Dd]og 3\\)\\s*([A-Za-z\\s\/]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What colour is your dog\?\s*\([Dd]og 3\)\s*([A-Za-z\s/]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog3Colour]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_119">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog3Colour]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog3Colour(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_149">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog3Colour]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog3Colour.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_120">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog3Colour]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog3Colour.Replace("What colour is your dog? (dog 3)","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Get Dog Gender" sap:VirtualizedContainerService.HintSize="683,451" sap2010:WorkflowViewState.IdRef="Sequence_66">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3Gender" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="What gender is your dog\?\s*\([Dd]og 3\)\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_55" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What gender is your dog\\?\\s*\\([Dd]og 3\\)\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What gender is your dog\?\s*\([Dd]og 3\)\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog3Gender]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_121">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog3Gender]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog3Gender(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_150">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog3Gender]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog3Gender.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_122">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog3Gender]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog3Gender.Replace("What gender is your dog? (dog 3)","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Get whether Dog is Neutered" sap:VirtualizedContainerService.HintSize="683,451" sap2010:WorkflowViewState.IdRef="Sequence_67">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3Neutered" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="Is your dog neutered\?\s*\([Dd]og 3\)\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_56" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Is your dog neutered\\?\\s*\\([Dd]og 3\\)\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Is your dog neutered\?\s*\([Dd]og 3\)\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog3Neutered]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_123">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog3Neutered]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog3Neutered(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_151">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog3Neutered]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog3Neutered.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_124">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog3Neutered]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog3Neutered.Replace("Is your dog neutered? (dog 3)","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Get Whether Dog Is Microchipped" sap:VirtualizedContainerService.HintSize="683,451" sap2010:WorkflowViewState.IdRef="Sequence_68">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3MicroChipped" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="Is your dog microchipped\?\s*\([Dd]og 3\)\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_57" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Is your dog microchipped\\?\\s*\\([Dd]og 3\\)\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Is your dog microchipped\?\s*\([Dd]og 3\)\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog3MicroChipped]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_125">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog3MicroChipped]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog3MicroChipped(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_152">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog3MicroChipped]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog3MicroChipped.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_126">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog3MicroChipped]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog3MicroChipped.Replace("Is your dog microchipped? (dog 3)","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <If Condition="[strDog3MicroChipped.ToLower.Contains(&quot;yes&quot;)]" sap:VirtualizedContainerService.HintSize="683,611" sap2010:WorkflowViewState.IdRef="If_17">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Get Dog 3 Microchip number" sap:VirtualizedContainerService.HintSize="376,451" sap2010:WorkflowViewState.IdRef="Sequence_69">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3MicrochipNumber" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches BuilderPattern="What’s the microchip number\?\s*\([Dd]og 3\)\s*(\d+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_58" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s the microchip number\\?\\s*\\([Dd]og 3\\)\\s*(\\d+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s the microchip number\?\s*\([Dd]og 3\)\s*(\d+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog3MicrochipNumber]" />
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_127">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3MicroChipNumber]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[ieDog3MicrochipNumber(0).value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_153">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3MicroChipNumber]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog3MicroChipNumber.Replace(Environment.NewLine, String.Empty)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_128">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3MicroChipNumber]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog3MicroChipNumber.Replace("What’s the microchip number? (dog 3)","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_129">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3MicroChipNumber]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">N/A</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strtitle,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog3Name,strDog3DoB,strDog3Colour,strDog3Gender,strDog3Neutered,strDog3MicroChipped,strDog3MicroChipNumber}]" DataTable="[io_dtDogInformation]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="683,188" sap2010:WorkflowViewState.IdRef="AddDataRow_11" />
                    <If Condition="[CBool(io_Config(&quot;boolPausePoint1&quot;))]" sap:VirtualizedContainerService.HintSize="683,378" sap2010:WorkflowViewState.IdRef="If_18">
                      <If.Then>
                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strtitle,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog1Name,strDog1DoB,strDog1Colour,strDog1Gender,strDog1Neutered,strDog1MicroChipped,strDog1MicroChipNumber}]" DataTable="[dtCurrentEmail]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_12" />
                      </If.Then>
                    </If>
                  </Sequence>
                </If.Then>
              </If>
              <If Condition="[CBool(io_Config(&quot;boolPausePoint1&quot;))]" sap:VirtualizedContainerService.HintSize="761,2018" sap2010:WorkflowViewState.IdRef="If_20">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Build_HTML_Table_Test" sap:VirtualizedContainerService.HintSize="549,1828" sap2010:WorkflowViewState.IdRef="Sequence_72">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="sd1:DataTable" Name="dtTableResults" />
                      <Variable x:TypeArguments="x:String" Name="HTMLHeader" />
                      <Variable x:TypeArguments="x:String" Name="HTMLFooter" />
                      <Variable x:TypeArguments="x:String" Name="MiddleHTML" />
                      <Variable x:TypeArguments="x:String" Name="HTMLContent" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="507,162" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[HTMLHeader]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;style&gt;table, th, td {  border:1px solid black;}&lt;/style&gt;&lt;body&gt;&lt;table style=""width:100%""&gt;  &lt;tr&gt;    &lt;th&gt;Email ID&lt;/th&gt;    &lt;th&gt;Title&lt;/th&gt;    &lt;th&gt;FirstName&lt;/th&gt;    &lt;th&gt;LastName&lt;/th&gt;    &lt;th&gt;AddressLine1&lt;/th&gt;    &lt;th&gt;AddressLine2&lt;/th&gt;    &lt;th&gt;TownOrCity&lt;/th&gt;    &lt;th&gt;County&lt;/th&gt;    &lt;th&gt;PostCode&lt;/th&gt;    &lt;th&gt;DateOfBirth&lt;/th&gt;    &lt;th&gt;PhoneNumber&lt;/th&gt;    &lt;th&gt;EmailAddress&lt;/th&gt;    &lt;th&gt;DogsName&lt;/th&gt;    &lt;th&gt;DogDOB&lt;/th&gt;    &lt;th&gt;DogColour&lt;/th&gt;    &lt;th&gt;DogGender&lt;/th&gt;    &lt;th&gt;Neutered&lt;/th&gt;    &lt;th&gt;Microchipped&lt;/th&gt;    &lt;th&gt;MicrochipNumber&lt;/th&gt;"]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[HTMLFooter]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[MiddleHTML]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtCurrentEmail]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="507,902" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd1:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd1:DataRow" Name="CurrentRow" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="473,781" sap2010:WorkflowViewState.IdRef="Sequence_71">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="RowVal1" />
                              <Variable x:TypeArguments="x:String" Name="RowVal2" />
                              <Variable x:TypeArguments="x:String" Name="RowVal3" />
                              <Variable x:TypeArguments="x:String" Name="RowVal4" />
                              <Variable x:TypeArguments="x:String" Name="RowVal5" />
                              <Variable x:TypeArguments="x:String" Name="RowVal6" />
                              <Variable x:TypeArguments="x:String" Name="RowVal7" />
                              <Variable x:TypeArguments="x:String" Name="RowVal8" />
                              <Variable x:TypeArguments="x:String" Name="RowVal9" />
                              <Variable x:TypeArguments="x:String" Name="RowVal10" />
                              <Variable x:TypeArguments="x:String" Name="RowVal11" />
                              <Variable x:TypeArguments="x:String" Name="RowVal12" />
                              <Variable x:TypeArguments="x:String" Name="RowVal13" />
                              <Variable x:TypeArguments="x:String" Name="RowVal14" />
                              <Variable x:TypeArguments="x:String" Name="RowVal15" />
                              <Variable x:TypeArguments="x:String" Name="RowVal16" />
                              <Variable x:TypeArguments="x:String" Name="RowVal17" />
                              <Variable x:TypeArguments="x:String" Name="RowVal18" />
                              <Variable x:TypeArguments="x:String" Name="RowVal19" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="431,689" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="32">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal1]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(0).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal2]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(1).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal3]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(2).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal4]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(3).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal5]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(4).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_33">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal6]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(5).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_34">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal7]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(6).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_35">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal8]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(7).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_36">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal9]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(8).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_37">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal10]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(9).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_38">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal11]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(10).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_39">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal12]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(11).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_40">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal13]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(12).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_41">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal14]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(13).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_42">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal15]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(14).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_43">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal16]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(15).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_44">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal17]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(16).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_45">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal18]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(17).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_46">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[RowVal19]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[CurrentRow(18).ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_47">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[MiddleHTML]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String" xml:space="preserve">["  &lt;tr&gt;&lt;td&gt;"+RowVal1+"&lt;/td&gt;&lt;td&gt;"+RowVal2+"&lt;/td&gt;&lt;td&gt;"+RowVal3+"&lt;/td&gt;&lt;td&gt;"+Rowval4+"&lt;/td&gt;&lt;td&gt;"+RowVal5+"&lt;/td&gt;&lt;td&gt;"+RowVal6+"&lt;/td&gt;&lt;td&gt;"+RowVal7+"&lt;/td&gt;&lt;td&gt;"+RowVal8+"&lt;/td&gt;&lt;td&gt;"+RowVal9+"&lt;/td&gt;&lt;td&gt;"+RowVal10+"&lt;/td&gt;&lt;td&gt;"+RowVal11+"&lt;/td&gt;&lt;td&gt;"+RowVal12+"&lt;/td&gt;&lt;td&gt;"+RowVal13+"&lt;/td&gt;&lt;td&gt;"+RowVal14+"&lt;/td&gt;&lt;td&gt;"+RowVal15+"&lt;/td&gt;&lt;td&gt;"+RowVal16+"&lt;/td&gt;&lt;td&gt;"+RowVal17+"&lt;/td&gt;&lt;td&gt;"+RowVal18+"&lt;/td&gt;&lt;td&gt;"+RowVal19+"&lt;/td&gt; &lt;/tr&gt;" +MiddleHTML]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                            </ui:MultipleAssign>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                    </ui:ForEachRow>
                    <Assign sap:VirtualizedContainerService.HintSize="507,60" sap2010:WorkflowViewState.IdRef="Assign_130">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strDataAsTable]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[HTMLHeader+MiddleHTML+HTMLFooter]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="507,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Stop">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                      </InvokeMethod.TargetObject>
                    </InvokeMethod>
                    <p:Generic_PopUp OUT_ProcessType="{x:Null}" DisplayName="Generic PopUp" sap:VirtualizedContainerService.HintSize="507,22" IN_CSS_filepath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\YesNo.css&quot;]" IN_ErrorMessage="Please check the information has been pulled correctly" IN_PopupMessage="[&quot;&lt;h1&gt;Please Check Data&lt;/h1&gt;Below is the data which was pulled from the email. Please check that it is all correct.&quot; + strDataAsTable]" IN_PopupTitle="Department for Environment, Food and Rural Affairs" IN_WidthHeight="[{1200,550}]" sap2010:WorkflowViewState.IdRef="Generic_PopUp_3" OUT_strButtonSelected="[strButtonSelected]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </p:Generic_PopUp>
                    <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="507,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Start">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                      </InvokeMethod.TargetObject>
                    </InvokeMethod>
                    <ui:ClearDataTable DataTable="[dtCurrentEmail]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="507,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_2" />
                  </Sequence>
                </If.Then>
              </If>
              <Assign sap:VirtualizedContainerService.HintSize="761,60" sap2010:WorkflowViewState.IdRef="Assign_131">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[intEmailID]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[CInt(strEmailID)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="761,60" sap2010:WorkflowViewState.IdRef="Assign_132">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[intEmailID]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[intEmailID + 1]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:SetAsset TimeoutMS="{x:Null}" AssetName="Email ID" DisplayName="Set Asset" sap:VirtualizedContainerService.HintSize="761,134" sap2010:WorkflowViewState.IdRef="SetAsset_2" Value="[intEmailID.ToString]" />
              <ui:MoveOutlookMessage Account="[io_Config(&quot;AccountName&quot;).ToString]" DisplayName="Move Email to &quot;Completed&quot;" sap:VirtualizedContainerService.HintSize="761,87" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_2" MailFolder="[io_Config(&quot;Completed&quot;).ToString]" MailMessage="[item]" />
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,229.5</av:Point>
              <av:Size x:Key="ShapeSize">200,52</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">300,281.5 300,331.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InterruptibleDoWhile Condition="[exeException isNot Nothing]" DisplayName="Check Out Master Log - Do While" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
            <ui:InterruptibleDoWhile.Body>
              <Sequence DisplayName="Check Out Master Log or Present User Assistance Form" sap:VirtualizedContainerService.HintSize="480,888" sap2010:WorkflowViewState.IdRef="Sequence_80">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Reset Exception" sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="Assign_154">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:Exception">[exeException]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                  </Assign.Value>
                </Assign>
                <TryCatch DisplayName="Try Check Out Master Log" sap:VirtualizedContainerService.HintSize="438,696" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                  <TryCatch.Try>
                    <Sequence DisplayName="Handle Stopwatch &amp; Check Out File" sap:VirtualizedContainerService.HintSize="280.5,464" sap2010:WorkflowViewState.IdRef="Sequence_77">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <InvokeMethod DisplayName="Stop Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="Stop">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                        </InvokeMethod.TargetObject>
                      </InvokeMethod>
                      <su:Check_Out_Sharepoint_File DisplayName="Check Out Sharepoint File" sap:VirtualizedContainerService.HintSize="238.5,22" sap2010:WorkflowViewState.IdRef="Check_Out_Sharepoint_File_3" in_intNumRetries="12" in_strAssetName="Logs Checked Out" in_strSharepointFilePath="[strDDILogSharepointFilepath]" in_strSharepointLockFilePath="[in_strSharepointLockFilePath]" in_strSharepointURL="[io_Config(&quot;Sharepoint URL&quot;).ToString]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <su:Check_Out_Sharepoint_File.in_credADCredentials>
                          <InArgument x:TypeArguments="sn:NetworkCredential" />
                        </su:Check_Out_Sharepoint_File.in_credADCredentials>
                      </su:Check_Out_Sharepoint_File>
                      <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="Start">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                        </InvokeMethod.TargetObject>
                      </InvokeMethod>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Capture Exception" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_78">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign Exception" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_155">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:Exception">[exeException]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                  <TryCatch.Finally>
                    <If Condition="[exeException isNot Nothing]" DisplayName="Encountered Exception?" sap:VirtualizedContainerService.HintSize="484,481" sap2010:WorkflowViewState.IdRef="If_21">
                      <If.Then>
                        <TryCatch DisplayName="Request User Intervention" sap:VirtualizedContainerService.HintSize="438,292" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                          <TryCatch.Try>
                            <p:Generic_PopUp OUT_ProcessType="{x:Null}" OUT_strButtonSelected="{x:Null}" DisplayName="User Assistance Form" sap:VirtualizedContainerService.HintSize="200,22" IN_CSS_filepath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\InitialisationException.css&quot;]" IN_ErrorMessage="File checkout loop aborted by user" IN_PopupMessage="[&quot;&lt;h1&gt;User assistance required&lt;/h1&gt;&lt;P&gt; I've encountered a problem checking out the file: '&quot;+strDDILogSharepointFilepath+&quot;'&lt;/P&gt;&lt;P&gt; Exception message: &quot;+exeException.Message+&quot;&lt;/P&gt;&lt;P&gt;Please attempt to manually rectify the issue and click Continue for the robot to retry.&lt;/P&gt;&lt;BR&gt;&quot;]" IN_PopupTitle="Department for Environment, Food and Rural Affairs" IN_WidthHeight="[{500,500}]" sap2010:WorkflowViewState.IdRef="Generic_PopUp_4" />
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Assign ShouldStop &amp; Rethrow" sap:VirtualizedContainerService.HintSize="304,213" sap2010:WorkflowViewState.IdRef="Sequence_79">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assign ShouldStop" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_156">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Object">[io_Config("ShouldStop")]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Object">[True]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Rethrow sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </If.Then>
                    </If>
                  </TryCatch.Finally>
                </TryCatch>
              </Sequence>
            </ui:InterruptibleDoWhile.Body>
          </ui:InterruptibleDoWhile>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID12">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">200,331.5</av:Point>
                  <av:Size x:Key="ShapeSize">200,68</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Populate Index" sap:VirtualizedContainerService.HintSize="955,1044" sap2010:WorkflowViewState.IdRef="Sequence_84">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[CBool(io_Config(&quot;boolPausePoint2&quot;))]" DisplayName="Pause Point 2 Enabled?" sap:VirtualizedContainerService.HintSize="913,952" sap2010:WorkflowViewState.IdRef="If_22">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Populate Master Log - Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,792" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" WorkbookPath="[io_Config(&quot;DDI Log Path&quot;).ToString]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Populate Master Log" sap:VirtualizedContainerService.HintSize="376,683" sap2010:WorkflowViewState.IdRef="Sequence_82">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelAppendRange DataTable="[io_dtDogInformation]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_5" SheetName="Example Spreadsheet" />
                            <Sequence DisplayName="Present Pause Point" sap:VirtualizedContainerService.HintSize="334,464" sap2010:WorkflowViewState.IdRef="Sequence_81">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <InvokeMethod DisplayName="Stop Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_9" MethodName="Stop">
                                <InvokeMethod.TargetObject>
                                  <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                                </InvokeMethod.TargetObject>
                              </InvokeMethod>
                              <p:Generic_PopUp OUT_ProcessType="{x:Null}" OUT_strButtonSelected="{x:Null}" DisplayName="Pause Point 2" sap:VirtualizedContainerService.HintSize="238.5,22" IN_CSS_filepath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\PausePoint.css&quot;]" IN_ErrorMessage="The stop button was pressed" IN_PopupMessage="&lt;h1&gt;Please Check Index Data&lt;/h1&gt;&lt;br&gt;Please check the data in the excel log to make sure it is all correct.&lt;br&gt;&lt;br&gt;" IN_PopupTitle="Pause Point 2" IN_WidthHeight="[{500,300}]" sap2010:WorkflowViewState.IdRef="Generic_PopUp_5" />
                              <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_10" MethodName="Start">
                                <InvokeMethod.TargetObject>
                                  <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                                </InvokeMethod.TargetObject>
                              </InvokeMethod>
                            </Sequence>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                    </ui:ExcelApplicationScope>
                  </If.Then>
                  <If.Else>
                    <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Populate Master Log - Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,288" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[io_Config(&quot;DDI Log Path&quot;).ToString]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Populate Master Log" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_83">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelAppendRange DataTable="[io_dtDogInformation]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_6" SheetName="Example Spreadsheet" />
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                    </ui:ExcelApplicationScope>
                  </If.Else>
                </If>
              </Sequence>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">0,474</av:Point>
          <av:Size x:Key="ShapeSize">200,52</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">100,526 100,569</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" WorkbookPath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Dangerous Dogs Data Items.xlsx">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_74">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelAppendRange DataTable="[io_dtDogInformation]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_2" SheetName="Example Spreadsheet" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">0,569</av:Point>
              <av:Size x:Key="ShapeSize">200,22</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <su:Check_In_Sharepoint_File in_strAssetName="{x:Null}" in_strSharepointFilePath="{x:Null}" in_strSharepointLockFilePath="{x:Null}" DisplayName="Check In Sharepoint File" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Check_In_Sharepoint_File_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <su:Check_In_Sharepoint_File.in_credADCredentials>
              <InArgument x:TypeArguments="sn:NetworkCredential" />
            </su:Check_In_Sharepoint_File.in_credADCredentials>
            <su:Check_In_Sharepoint_File.in_strSharepointURL>
              <InArgument x:TypeArguments="x:String" />
            </su:Check_In_Sharepoint_File.in_strSharepointURL>
          </su:Check_In_Sharepoint_File>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">10,24</av:Point>
          <av:Size x:Key="ShapeSize">200,52</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <usa:SharepointApplicationScope AzureApplicationID="{x:Null}" ClientContext="{x:Null}" ClientId="{x:Null}" ClientSecret="{x:Null}" LoginTimeout="{x:Null}" Password="{x:Null}" SecurePassword="{x:Null}" UserName="{x:Null}" AzureAppPermissions="None" DisplayName="Sharepoint application scope" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="SharepointApplicationScope_1" PlatformType="Online" QueryGrouping="False" ResetCredentials="True" SharePointInstanceType="WebLogin" URL="[in_strSharepointURL]">
        <usa:SharepointApplicationScope.Body>
          <ActivityAction x:TypeArguments="us:SharePointContextInfo">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="us:SharePointContextInfo" Name="SharePointContextInfoTag" />
            </ActivityAction.Argument>
            <Flowchart sap:VirtualizedContainerService.HintSize="634,1188.5" sap2010:WorkflowViewState.IdRef="Flowchart_2">
              <Flowchart.Variables>
                <Variable x:TypeArguments="x:String" Name="in_strSharepointLockFilePath" />
                <Variable x:TypeArguments="x:Boolean" Name="boolLockExists" />
                <Variable x:TypeArguments="x:String" Name="strLockedFilePath" />
              </Flowchart.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
                  <av:Size x:Key="ShapeSize">60,75</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,127.5</av:PointCollection>
                  <x:Double x:Key="Height">1152.5</x:Double>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Flowchart.StartNode>
                <x:Reference>__ReferenceID9</x:Reference>
              </Flowchart.StartNode>
              <FlowStep x:Name="__ReferenceID9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">200,127.5</av:Point>
                    <av:Size x:Key="ShapeSize">200,52</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">300,179.5 300,229.5</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:FileExistsX DisplayName="Local Sharepoint Lock File Exists?" Exists="[boolLockExists]" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="FileExistsX_1" Path="[in_strSharepointLockFilePath]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:FileExistsX>
                <FlowStep.Next>
                  <FlowDecision x:Name="__ReferenceID1" Condition="[boolLockExists]" DisplayName="Lock File Exists?" sap:VirtualizedContainerService.HintSize="89.5,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <av:Point x:Key="ShapeLocation">255.25,229.5</av:Point>
                        <av:Size x:Key="ShapeSize">89.5,87</av:Size>
                        <av:PointCollection x:Key="TrueConnector">255.25,273 205.25,273</av:PointCollection>
                        <av:PointCollection x:Key="FalseConnector">344.75,273 458.5,273 458.5,651.716 295.25,651.716 295.25,671</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <FlowDecision.True>
                      <FlowStep x:Name="__ReferenceID2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">5.25,247</av:Point>
                            <av:Size x:Key="ShapeSize">200,52</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">105.25,299 105.25,349</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ReadTextFile Content="[strLockedFilePath]" DisplayName="Read Text File" FileName="[in_strSharepointLockFilePath]" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ReadTextFile>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID3">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">5.25,349</av:Point>
                                <av:Size x:Key="ShapeSize">200,68</av:Size>
                                <av:PointCollection x:Key="ConnectorLocation">105.25,417 105.25,467</av:PointCollection>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Remove Locked File From Asset" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_76">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[in_strAssetName]" DisplayName="Retrieve Checked Out List" sap:VirtualizedContainerService.HintSize="431,139" sap2010:WorkflowViewState.IdRef="GetRobotAsset_3">
                                <ui:GetRobotAsset.Value>
                                  <OutArgument x:TypeArguments="x:String">[strFileList]</OutArgument>
                                </ui:GetRobotAsset.Value>
                              </ui:GetRobotAsset>
                              <ui:MultipleAssign DisplayName="Convert Asset to List" sap:VirtualizedContainerService.HintSize="431,131" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                                <ui:MultipleAssign.AssignOperations>
                                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_48">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="s:String[]">[arrFileList]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="s:String[]">[strFileList.Split(","c)]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_49">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="scg:List(x:String)">[listFileList]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="scg:List(x:String)">[arrFileList.ToList]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                  </scg:List>
                                </ui:MultipleAssign.AssignOperations>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:MultipleAssign>
                              <RemoveFromCollection x:TypeArguments="x:String" Collection="[listFileList]" DisplayName="Remove File from List" sap:VirtualizedContainerService.HintSize="431,22" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_1" Item="[strLockedFilePath]" />
                              <ui:SetAsset TimeoutMS="{x:Null}" AssetName="[in_strAssetName]" DisplayName="Set Checked Out List" sap:VirtualizedContainerService.HintSize="431,134" sap2010:WorkflowViewState.IdRef="SetAsset_3" Value="[IF(listFileList.Count = 0, &quot;None&quot;, String.Join(&quot;,&quot;, listFileList))]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:SetAsset>
                            </Sequence>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID4">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <av:Point x:Key="ShapeLocation">5.25,467</av:Point>
                                    <av:Size x:Key="ShapeSize">200,52</av:Size>
                                    <av:PointCollection x:Key="ConnectorLocation">105.25,519 105.25,569</av:PointCollection>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:DeleteFileX DisplayName="Delete Sharepoint Lock File" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[in_strSharepointLockFilePath]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:DeleteFileX>
                                <FlowStep.Next>
                                  <FlowStep x:Name="__ReferenceID5">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <av:Point x:Key="ShapeLocation">5.25,569</av:Point>
                                        <av:Size x:Key="ShapeSize">200,52</av:Size>
                                        <av:PointCollection x:Key="ConnectorLocation">105.25,621 105.25,651 295.25,651 295.25,671</av:PointCollection>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <usal:CheckInFile AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Check In Locked File" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="CheckInFile_1" RelativeUrl="[strLockedFilePath]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </usal:CheckInFile>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID0">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <av:Point x:Key="ShapeLocation">195.25,671</av:Point>
                                            <av:Size x:Key="ShapeSize">200,52</av:Size>
                                            <av:PointCollection x:Key="ConnectorLocation">295.25,723 295.25,773</av:PointCollection>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Log Filename" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Checking Out File: &quot;+in_strSharepointFilePath]" />
                                        <FlowStep.Next>
                                          <FlowStep x:Name="__ReferenceID6">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <av:Point x:Key="ShapeLocation">195.25,773</av:Point>
                                                <av:Size x:Key="ShapeSize">200,52</av:Size>
                                                <av:PointCollection x:Key="ConnectorLocation">295.25,825 295.25,875</av:PointCollection>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[in_strAssetName]" DisplayName="Retrieve Checked Out List" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="GetRobotAsset_4">
                                              <ui:GetRobotAsset.Value>
                                                <OutArgument x:TypeArguments="x:String">[strFileList]</OutArgument>
                                              </ui:GetRobotAsset.Value>
                                            </ui:GetRobotAsset>
                                            <FlowStep.Next>
                                              <FlowStep x:Name="__ReferenceID7">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <av:Point x:Key="ShapeLocation">195.25,875</av:Point>
                                                    <av:Size x:Key="ShapeSize">200,52</av:Size>
                                                    <av:PointCollection x:Key="ConnectorLocation">295.25,927 295.25,977</av:PointCollection>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:MultipleAssign DisplayName="Convert Asset to List" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                                                  <ui:MultipleAssign.AssignOperations>
                                                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_50">
                                                        <ui:AssignOperation.To>
                                                          <OutArgument x:TypeArguments="s:String[]">[arrFileList]</OutArgument>
                                                        </ui:AssignOperation.To>
                                                        <ui:AssignOperation.Value>
                                                          <InArgument x:TypeArguments="s:String[]">[strFileList.Split(","c)]</InArgument>
                                                        </ui:AssignOperation.Value>
                                                      </ui:AssignOperation>
                                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_51">
                                                        <ui:AssignOperation.To>
                                                          <OutArgument x:TypeArguments="scg:List(x:String)">[listFileList]</OutArgument>
                                                        </ui:AssignOperation.To>
                                                        <ui:AssignOperation.Value>
                                                          <InArgument x:TypeArguments="scg:List(x:String)">[arrFileList.ToList]</InArgument>
                                                        </ui:AssignOperation.Value>
                                                      </ui:AssignOperation>
                                                    </scg:List>
                                                  </ui:MultipleAssign.AssignOperations>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:MultipleAssign>
                                                <FlowStep.Next>
                                                  <FlowDecision x:Name="__ReferenceID8" Condition="[NOT(listFileList.Contains(in_strSharepointFilePath))]" DisplayName="File Available?" sap:VirtualizedContainerService.HintSize="81.5,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        <av:Point x:Key="ShapeLocation">254.5,977</av:Point>
                                                        <av:Size x:Key="ShapeSize">81.5,87</av:Size>
                                                        <av:PointCollection x:Key="TrueConnector">309,1109 170,1109 170,1241</av:PointCollection>
                                                        <av:PointCollection x:Key="FalseConnector">390.5,1109 550,1109 550,1236.5</av:PointCollection>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </FlowDecision>
                                                </FlowStep.Next>
                                              </FlowStep>
                                            </FlowStep.Next>
                                          </FlowStep>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.True>
                    <FlowDecision.False>
                      <x:Reference>__ReferenceID0</x:Reference>
                    </FlowDecision.False>
                  </FlowDecision>
                </FlowStep.Next>
              </FlowStep>
              <x:Reference>__ReferenceID1</x:Reference>
              <x:Reference>__ReferenceID2</x:Reference>
              <x:Reference>__ReferenceID3</x:Reference>
              <x:Reference>__ReferenceID4</x:Reference>
              <x:Reference>__ReferenceID5</x:Reference>
              <x:Reference>__ReferenceID0</x:Reference>
              <x:Reference>__ReferenceID6</x:Reference>
              <x:Reference>__ReferenceID7</x:Reference>
              <x:Reference>__ReferenceID8</x:Reference>
            </Flowchart>
          </ActivityAction>
        </usa:SharepointApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </usa:SharepointApplicationScope>
    </FlowStep>
    <x:Reference>__ReferenceID10</x:Reference>
    <x:Reference>__ReferenceID11</x:Reference>
    <x:Reference>__ReferenceID12</x:Reference>
  </Flowchart>
</Activity>