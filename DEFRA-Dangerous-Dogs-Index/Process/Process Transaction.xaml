<Activity mc:Ignorable="sap sap2010" x:Class="Process_Transaction_2" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:p="clr-namespace:Pop_Ups;assembly=Pop Ups" xmlns:p1="http://schemas.uipath.com/workflow/activities/word" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Diagnostics;assembly=System" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:sn="clr-namespace:System.Net;assembly=System" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:su="clr-namespace:SharePoint.UiPathTeam_Sharepoint_Activities;assembly=SharePoint" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:us="clr-namespace:UiPathTeam.SharePoint;assembly=UiPathTeam.SharePoint" xmlns:usa="clr-namespace:UiPathTeam.SharePoint.Activities;assembly=UiPathTeam.SharePoint.Activities" xmlns:usal="clr-namespace:UiPathTeam.SharePoint.Activities.Libraries;assembly=UiPathTeam.SharePoint.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_arrExitPoint" Type="InOutArgument(s:Int32[])" />
    <x:Property Name="io_swProcessingTimer" Type="InOutArgument(sd:Stopwatch)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="io_Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_arrCaseID" Type="InOutArgument(s:String[])" />
    <x:Property Name="in_strSharepointLockFilePath" Type="InOutArgument(x:String)" />
    <x:Property Name="in_TransactionNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="in_dateCaseStartTime" Type="InArgument(s:DateTime)" />
    <x:Property Name="in_arrCaseID" Type="InArgument(s:String[])" />
    <x:Property Name="in_strWorkLogFilepath" Type="InArgument(x:String)" />
    <x:Property Name="in_strSQLFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_strFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="io_dtDogInformationPass" Type="InOutArgument(sd1:DataTable)" />
    <x:Property Name="io_dtDogInformationHardFail" Type="InOutArgument(sd1:DataTable)" />
    <x:Property Name="io_dtDogInformationSoftFail" Type="InOutArgument(sd1:DataTable)" />
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(snm:MailMessage)" />
    <x:Property Name="out_intNoOfDogs" Type="OutArgument(x:Int32)" />
    <x:Property Name="in_dtSwearWords" Type="InArgument(sd1:DataTable)" />
    <x:Property Name="out_strApplicationStatus" Type="InArgument(x:String)" />
    <x:Property Name="in_TimeStamp" Type="InArgument(x:String)" />
  </x:Members>
  <this:Process_Transaction_2.in_dateCaseStartTime>
    <InArgument x:TypeArguments="s:DateTime" />
  </this:Process_Transaction_2.in_dateCaseStartTime>
  <this:Process_Transaction_2.in_strWorkLogFilepath>
    <InArgument x:TypeArguments="x:String" />
  </this:Process_Transaction_2.in_strWorkLogFilepath>
  <this:Process_Transaction_2.in_strSQLFilePath>
    <InArgument x:TypeArguments="x:String" />
  </this:Process_Transaction_2.in_strSQLFilePath>
  <this:Process_Transaction_2.out_strApplicationStatus>
    <InArgument x:TypeArguments="x:String" />
  </this:Process_Transaction_2.out_strApplicationStatus>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1108,1032.5</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Process_Transaction_2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="116">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>Pop_Ups</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>System.Net</x:String>
      <x:String>SharePoint.UiPathTeam_Sharepoint_Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>Microsoft.SharePoint.Client</x:String>
      <x:String>UiPathTeam.SharePoint.Activities.Libraries</x:String>
      <x:String>UiPathTeam.SharePoint.Activities</x:String>
      <x:String>UiPathTeam.SharePoint</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>Logging</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Word.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>SharePoint.UI</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="110">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>Pop Ups</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>SharePoint</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client.Runtime</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>Logging</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Callout.Activity</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Persistence.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Flowchart sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " sap:VirtualizedContainerService.HintSize="634,967.5" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="s:Exception" Name="exeException" />
      <Variable x:TypeArguments="x:String" Name="strDDILogSharepointFilepath" />
      <Variable x:TypeArguments="x:String" Name="strDog1MicroChipNumber" />
      <Variable x:TypeArguments="x:String" Name="strDog2MicroChipNumber" />
      <Variable x:TypeArguments="x:String" Name="strFirstName" />
      <Variable x:TypeArguments="x:String" Name="strLastName" />
      <Variable x:TypeArguments="x:String" Name="strAddressLine1" />
      <Variable x:TypeArguments="x:String" Name="strAddressLine2" />
      <Variable x:TypeArguments="x:String" Name="strPostCode" />
      <Variable x:TypeArguments="x:String" Name="strCounty" />
      <Variable x:TypeArguments="x:String" Name="strTown" />
      <Variable x:TypeArguments="sd1:DataTable" Name="dtCurrentEmail" />
      <Variable x:TypeArguments="x:String" Name="strDog2MicroChipped" />
      <Variable x:TypeArguments="x:String" Name="strDog1MicroChipped" />
      <Variable x:TypeArguments="x:String" Name="strDog3MicroChipped" />
      <Variable x:TypeArguments="x:String" Name="strEmailID" />
      <Variable x:TypeArguments="x:String" Name="strOwnerDoB" />
      <Variable x:TypeArguments="x:String" Name="strOwnerPhoneNumber" />
      <Variable x:TypeArguments="x:String" Name="strOwnerEmailAddress" />
      <Variable x:TypeArguments="x:String" Name="strDog1Name" />
      <Variable x:TypeArguments="x:String" Name="strDog1DoB" />
      <Variable x:TypeArguments="x:String" Name="strDog1Colour" />
      <Variable x:TypeArguments="x:String" Name="strDog1Gender" />
      <Variable x:TypeArguments="x:String" Name="strDog1Neutered" />
      <Variable x:TypeArguments="x:String" Name="strDog2Name" />
      <Variable x:TypeArguments="x:String" Name="strDog2DoB" />
      <Variable x:TypeArguments="x:String" Name="strDog2Colour" />
      <Variable x:TypeArguments="x:String" Name="strDog2Gender" />
      <Variable x:TypeArguments="x:String" Name="strDog2Neutered" />
      <Variable x:TypeArguments="x:String" Name="strDog3MicroChipNumber" />
      <Variable x:TypeArguments="x:String" Name="strDog3Name" />
      <Variable x:TypeArguments="x:String" Name="strDog3DoB" />
      <Variable x:TypeArguments="x:String" Name="strDog3Colour" />
      <Variable x:TypeArguments="x:String" Name="strDog3Gender" />
      <Variable x:TypeArguments="x:String" Name="strDog3Neutered" />
      <Variable x:TypeArguments="x:Int32" Name="intEmailID" />
      <Variable x:TypeArguments="x:String" Name="strDog1InsuranceStartDate" />
      <Variable x:TypeArguments="x:String" Name="strOwnerCountry" />
      <Variable x:TypeArguments="x:String" Name="strDog1PaymentRef" />
      <Variable x:TypeArguments="x:String" Name="strFollowUpNeededDog1" />
      <Variable x:TypeArguments="x:String" Name="strFollowUpReasonDog1" />
      <Variable x:TypeArguments="x:String" Name="strDog2PaymentRef" />
      <Variable x:TypeArguments="x:String" Name="strDog2InsuranceStartDate" />
      <Variable x:TypeArguments="x:String" Name="strDog3InsuranceStartDate" />
      <Variable x:TypeArguments="x:String" Name="strDog3PaymentRef" />
      <Variable x:TypeArguments="x:String" Name="strCertNeeded" />
      <Variable x:TypeArguments="x:String" Name="strCertSent" />
      <Variable x:TypeArguments="x:String" Name="strFollowUpNeededDog2" />
      <Variable x:TypeArguments="x:String" Name="strFollowUpReasonDog2" />
      <Variable x:TypeArguments="x:String" Name="strCertNeededDog2" />
      <Variable x:TypeArguments="x:String" Name="strCertSentDog2" />
      <Variable x:TypeArguments="x:String" Name="Reason1" />
      <Variable x:TypeArguments="x:String" Name="Reason2" />
      <Variable x:TypeArguments="x:String" Name="Reason4" />
      <Variable x:TypeArguments="x:String" Name="Reason3" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,127.5</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Double x:Key="Height">855.5</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID5</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,363.5</av:Point>
          <av:Size x:Key="ShapeSize">200,68</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,431.5 300,481.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Update Backup Index" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_85">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="strDDIBackupLogSharepointFilepath" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InterruptibleDoWhile Condition="[exeException isNot Nothing]" DisplayName="Check Out Master Index - Do While" sap:VirtualizedContainerService.HintSize="1069,235" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_3">
          <ui:InterruptibleDoWhile.Body>
            <Sequence DisplayName="Check Out Master Log or Present User Assistance Form" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_102">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Reset Exception" sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="Assign_160">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Exception">[exeException]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign  Sharepoint Filepath" sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="Assign_163">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strDDIBackupLogSharepointFilepath]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[io_Config("Backup Log Sharepoint Filepath").ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <TryCatch DisplayName="Try Check Out Master Log" sap:VirtualizedContainerService.HintSize="438,696" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                <TryCatch.Try>
                  <Sequence DisplayName="Handle Stopwatch &amp; Check Out File" sap:VirtualizedContainerService.HintSize="280.5,464" sap2010:WorkflowViewState.IdRef="Sequence_99">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <InvokeMethod DisplayName="Stop Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_17" MethodName="Stop">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                      </InvokeMethod.TargetObject>
                    </InvokeMethod>
                    <su:Check_Out_Sharepoint_File DisplayName="Check Out Sharepoint File" sap:VirtualizedContainerService.HintSize="238.5,22" sap2010:WorkflowViewState.IdRef="Check_Out_Sharepoint_File_5" in_intNumRetries="12" in_strAssetName="Backup Logs Checked Out" in_strSharepointFilePath="[strDDIBackupLogSharepointFilepath]" in_strSharepointLockFilePath="[in_strSharepointLockFilePath]" in_strSharepointURL="[io_Config(&quot;Sharepoint URL&quot;).ToString]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <su:Check_Out_Sharepoint_File.in_credADCredentials>
                        <InArgument x:TypeArguments="sn:NetworkCredential" />
                      </su:Check_Out_Sharepoint_File.in_credADCredentials>
                    </su:Check_Out_Sharepoint_File>
                    <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_18" MethodName="Start">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                      </InvokeMethod.TargetObject>
                    </InvokeMethod>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Capture Exception" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_100">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign Exception" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_161">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:Exception">[exeException]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
                <TryCatch.Finally>
                  <If Condition="[exeException isNot Nothing]" DisplayName="Encountered Exception?" sap:VirtualizedContainerService.HintSize="484,481" sap2010:WorkflowViewState.IdRef="If_26">
                    <If.Then>
                      <TryCatch DisplayName="Request User Intervention" sap:VirtualizedContainerService.HintSize="438,292" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                        <TryCatch.Try>
                          <p:Generic_PopUp OUT_ProcessType="{x:Null}" OUT_strButtonSelected="{x:Null}" DisplayName="User Assistance Form" sap:VirtualizedContainerService.HintSize="200,22" IN_CSS_filepath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\InitialisationException.css&quot;]" IN_ErrorMessage="File checkout loop aborted by user" IN_PopupMessage="[&quot;&lt;h1&gt;User assistance required&lt;/h1&gt;&lt;P&gt; I've encountered a problem checking out the file: '&quot; + strDDIBackupLogSharepointFilepath + &quot;'&lt;/P&gt;&lt;P&gt; Exception message: &quot;+exeException.Message+&quot;&lt;/P&gt;&lt;P&gt;Please attempt to manually rectify the issue and click Continue for the robot to retry.&lt;/P&gt;&lt;BR&gt;&quot;]" IN_PopupTitle="Department for Environment, Food and Rural Affairs" IN_WidthHeight="[{500,500}]" sap2010:WorkflowViewState.IdRef="Generic_PopUp_9" />
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Assign ShouldStop &amp; Rethrow" sap:VirtualizedContainerService.HintSize="304,213" sap2010:WorkflowViewState.IdRef="Sequence_101">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Assign ShouldStop" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_162">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[io_Config("ShouldStop")]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[True]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Rethrow sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Rethrow_3" />
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </If.Then>
                  </If>
                </TryCatch.Finally>
              </TryCatch>
            </Sequence>
          </ui:InterruptibleDoWhile.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InterruptibleDoWhile>
        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1069,2524" sap2010:WorkflowViewState.IdRef="TryCatch_23">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch.Try>
            <usa:SharepointApplicationScope AzureApplicationID="{x:Null}" ClientContext="{x:Null}" ClientId="{x:Null}" ClientSecret="{x:Null}" LoginTimeout="{x:Null}" Password="{x:Null}" SecurePassword="{x:Null}" UserName="{x:Null}" AzureAppPermissions="None" DisplayName="Sharepoint application scope" sap:VirtualizedContainerService.HintSize="1031,2292" sap2010:WorkflowViewState.IdRef="SharepointApplicationScope_1" PlatformType="Online" QueryGrouping="False" ResetCredentials="False" SharePointInstanceType="WebLogin" URL="[io_Config(&quot;Sharepoint URL&quot;).ToString]">
              <usa:SharepointApplicationScope.Body>
                <ActivityAction x:TypeArguments="us:SharePointContextInfo">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="us:SharePointContextInfo" Name="SharePointContextInfoTag" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="997,2150" sap2010:WorkflowViewState.IdRef="Sequence_158">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <usal:GetFile AttachmentsAction="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Get Master Log" sap:VirtualizedContainerService.HintSize="955,104" sap2010:WorkflowViewState.IdRef="GetFile_1" LocalPath="[in_strFolderPath+io_Config(&quot;DDI Backup Log Path&quot;).ToString]" LocalPathHintText="Local path where the file will be saved" RelativeUrl="[strDDIBackupLogSharepointFilepath]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="True" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                    <Delay DisplayName=" Delay 2 seconds" Duration="00:00:02" sap:VirtualizedContainerService.HintSize="955,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
                    <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="955,134" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="EXCEL" />
                    <Sequence DisplayName="Populate Index" sap:VirtualizedContainerService.HintSize="955,1298" sap2010:WorkflowViewState.IdRef="Sequence_98">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[CBool(io_Config(&quot;boolPausePoint2&quot;))]" DisplayName="Pause Point 2 Enabled?" sap:VirtualizedContainerService.HintSize="913,1206" sap2010:WorkflowViewState.IdRef="If_25">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Populate Master Log - Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,1046" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_7" InstanceCachePeriod="3000" WorkbookPath="[in_strFolderPath+io_Config(&quot;DDI Backup Log Path&quot;).ToString]">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Populate Master Log" sap:VirtualizedContainerService.HintSize="376,937" sap2010:WorkflowViewState.IdRef="Sequence_96">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelAppendRange DataTable="[io_dtDogInformationPass]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_9" SheetName="Passed" />
                                  <ui:ExcelAppendRange DataTable="[io_dtDogInformationSoftFail]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_11" SheetName="Soft Fail" />
                                  <ui:ExcelAppendRange DataTable="[io_dtDogInformationHardFail]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_12" SheetName="Hard Fail" />
                                  <Sequence DisplayName="Present Pause Point" sap:VirtualizedContainerService.HintSize="334,464" sap2010:WorkflowViewState.IdRef="Sequence_95">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <InvokeMethod DisplayName="Stop Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_15" MethodName="Stop">
                                      <InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                                      </InvokeMethod.TargetObject>
                                    </InvokeMethod>
                                    <p:Generic_PopUp OUT_ProcessType="{x:Null}" OUT_strButtonSelected="{x:Null}" DisplayName="Pause Point 2" sap:VirtualizedContainerService.HintSize="238.5,22" IN_CSS_filepath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\YesNo.css&quot;]" IN_ErrorMessage="The stop button was pressed" IN_PopupMessage="&lt;h1&gt;Please Check Index Data&lt;/h1&gt;&lt;br&gt;Please check the data in the excel log to make sure it is all correct.&lt;br&gt;&lt;br&gt;" IN_PopupTitle="Pause Point 2" IN_WidthHeight="[{600,400}]" sap2010:WorkflowViewState.IdRef="Generic_PopUp_8" />
                                    <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_16" MethodName="Start">
                                      <InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                                      </InvokeMethod.TargetObject>
                                    </InvokeMethod>
                                  </Sequence>
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                          </ui:ExcelApplicationScope>
                        </If.Then>
                        <If.Else>
                          <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Populate Master Log - Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,542" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_8" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[in_strFolderPath+io_Config(&quot;DDI Backup Log Path&quot;).ToString]">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Populate Master Log" sap:VirtualizedContainerService.HintSize="376,433" sap2010:WorkflowViewState.IdRef="Sequence_97">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelAppendRange DataTable="[io_dtDogInformationPass]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_13" SheetName="Passed" />
                                  <ui:ExcelAppendRange DataTable="[io_dtDogInformationSoftFail]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_14" SheetName="Soft Fail" />
                                  <ui:ExcelAppendRange DataTable="[io_dtDogInformationHardFail]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_15" SheetName="Hard Fail" />
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                          </ui:ExcelApplicationScope>
                        </If.Else>
                      </If>
                    </Sequence>
                    <Delay DisplayName=" Delay 2 seconds" Duration="00:00:02" sap:VirtualizedContainerService.HintSize="955,22" sap2010:WorkflowViewState.IdRef="Delay_4" />
                    <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="955,134" sap2010:WorkflowViewState.IdRef="KillProcess_4" ProcessName="EXCEL" />
                    <usal:UploadFile AttachmentsAction="{x:Null}" PropertiesToAdd="{x:Null}" RelativeUrlHintText="{x:Null}" AllowOperationsOnASPXFiles="False" AllowOverwrite="True" CheckInFileAfterCreation="False" CheckOutFileBeforeOverwrite="False" ChooseFile="True" DisplayName="Upload file" sap:VirtualizedContainerService.HintSize="955,104" sap2010:WorkflowViewState.IdRef="UploadFile_1" LocalPath="[in_strFolderPath+io_Config(&quot;DDI Backup Log Path&quot;).ToString]" LocalPathHintText="The current local path of the file" RelativeUrl="[strDDIBackupLogSharepointFilepath]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="True" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                  </Sequence>
                </ActivityAction>
              </usa:SharepointApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </usa:SharepointApplicationScope>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1035,22" sap2010:WorkflowViewState.IdRef="Catch`1_23">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <Sequence sap:VirtualizedContainerService.HintSize="376,388" sap2010:WorkflowViewState.IdRef="Sequence_428">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="KillProcess_6" ProcessName="EXCEL" />
                  <su:Check_In_Sharepoint_File DisplayName="Check In Sharepoint File" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Check_In_Sharepoint_File_4" in_strAssetName="Backup Logs Checked Out" in_strSharepointFilePath="[strDDIBackupLogSharepointFilepath]" in_strSharepointLockFilePath="[in_strSharepointLockFilePath]" in_strSharepointURL="[io_Config(&quot;Sharepoint URL&quot;).ToString]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <su:Check_In_Sharepoint_File.in_credADCredentials>
                      <InArgument x:TypeArguments="sn:NetworkCredential" />
                    </su:Check_In_Sharepoint_File.in_credADCredentials>
                  </su:Check_In_Sharepoint_File>
                  <Assign DisplayName="Assign Exception" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_800">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Exception">[exeException]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
        <su:Check_In_Sharepoint_File DisplayName="Check In Sharepoint File" sap:VirtualizedContainerService.HintSize="1069,22" sap2010:WorkflowViewState.IdRef="Check_In_Sharepoint_File_3" in_strAssetName="Backup Logs Checked Out" in_strSharepointFilePath="[strDDIBackupLogSharepointFilepath]" in_strSharepointLockFilePath="[in_strSharepointLockFilePath]" in_strSharepointURL="[io_Config(&quot;Sharepoint URL&quot;).ToString]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <su:Check_In_Sharepoint_File.in_credADCredentials>
            <InArgument x:TypeArguments="sn:NetworkCredential" />
          </su:Check_In_Sharepoint_File.in_credADCredentials>
        </su:Check_In_Sharepoint_File>
        <ui:DeleteFileX DisplayName="Delete Excel Spreadsheet" sap:VirtualizedContainerService.HintSize="1069,80" sap2010:WorkflowViewState.IdRef="DeleteFileX_4" Path="[in_strFolderPath+io_Config(&quot;DDI Backup Log Path&quot;).ToString]" />
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,481.5</av:Point>
              <av:Size x:Key="ShapeSize">200,68</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">300,549.5 300,599.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Check out Main Index" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_94">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InterruptibleDoWhile Condition="[exeException isNot Nothing]" DisplayName="Check Out Master Index - Do While" sap:VirtualizedContainerService.HintSize="590,1155" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_2">
              <ui:InterruptibleDoWhile.Body>
                <Sequence DisplayName="Check Out Master Log or Present User Assistance Form" sap:VirtualizedContainerService.HintSize="480,988" sap2010:WorkflowViewState.IdRef="Sequence_93">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Reset Exception" sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="Assign_157">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Exception">[exeException]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign  Sharepoint Filepath" sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="Assign_164">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDDILogSharepointFilepath]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[io_Config("Log Sharepoint Filepath").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <TryCatch DisplayName="Try Check Out Master Log" sap:VirtualizedContainerService.HintSize="438,696" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                    <TryCatch.Try>
                      <Sequence DisplayName="Handle Stopwatch &amp; Check Out File" sap:VirtualizedContainerService.HintSize="280.5,464" sap2010:WorkflowViewState.IdRef="Sequence_90">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <InvokeMethod DisplayName="Stop Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_13" MethodName="Stop">
                          <InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                          </InvokeMethod.TargetObject>
                        </InvokeMethod>
                        <su:Check_Out_Sharepoint_File DisplayName="Check Out Sharepoint File" sap:VirtualizedContainerService.HintSize="238.5,22" sap2010:WorkflowViewState.IdRef="Check_Out_Sharepoint_File_4" in_intNumRetries="12" in_strAssetName="Logs Checked Out" in_strSharepointFilePath="[strDDILogSharepointFilepath]" in_strSharepointLockFilePath="[in_strSharepointLockFilePath]" in_strSharepointURL="[io_Config(&quot;Sharepoint URL&quot;).ToString]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <su:Check_Out_Sharepoint_File.in_credADCredentials>
                            <InArgument x:TypeArguments="sn:NetworkCredential" />
                          </su:Check_Out_Sharepoint_File.in_credADCredentials>
                        </su:Check_Out_Sharepoint_File>
                        <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_14" MethodName="Start">
                          <InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                          </InvokeMethod.TargetObject>
                        </InvokeMethod>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Capture Exception" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_91">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Assign Exception" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_158">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:Exception">[exeException]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                    <TryCatch.Finally>
                      <If Condition="[exeException isNot Nothing]" DisplayName="Encountered Exception?" sap:VirtualizedContainerService.HintSize="484,481" sap2010:WorkflowViewState.IdRef="If_24">
                        <If.Then>
                          <TryCatch DisplayName="Request User Intervention" sap:VirtualizedContainerService.HintSize="438,292" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                            <TryCatch.Try>
                              <p:Generic_PopUp OUT_ProcessType="{x:Null}" OUT_strButtonSelected="{x:Null}" DisplayName="User Assistance Form" sap:VirtualizedContainerService.HintSize="200,22" IN_CSS_filepath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\InitialisationException.css&quot;]" IN_ErrorMessage="File checkout loop aborted by user" IN_PopupMessage="[&quot;&lt;h1&gt;User assistance required&lt;/h1&gt;&lt;P&gt; I've encountered a problem checking out the file: '&quot;+strDDILogSharepointFilepath+&quot;'&lt;/P&gt;&lt;P&gt; Exception message: &quot;+exeException.Message+&quot;&lt;/P&gt;&lt;P&gt;Please attempt to manually rectify the issue and click Continue for the robot to retry.&lt;/P&gt;&lt;BR&gt;&quot;]" IN_PopupTitle="Department for Environment, Food and Rural Affairs" IN_WidthHeight="[{500,500}]" sap2010:WorkflowViewState.IdRef="Generic_PopUp_7" />
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Assign ShouldStop &amp; Rethrow" sap:VirtualizedContainerService.HintSize="304,213" sap2010:WorkflowViewState.IdRef="Sequence_92">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign DisplayName="Assign ShouldStop" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_159">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Object">[io_Config("ShouldStop")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Object">[True]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Rethrow sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </If.Then>
                      </If>
                    </TryCatch.Finally>
                  </TryCatch>
                </Sequence>
              </ui:InterruptibleDoWhile.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InterruptibleDoWhile>
            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="590,1860" sap2010:WorkflowViewState.IdRef="TryCatch_24">
              <TryCatch.Try>
                <usa:SharepointApplicationScope AzureApplicationID="{x:Null}" ClientContext="{x:Null}" ClientId="{x:Null}" ClientSecret="{x:Null}" LoginTimeout="{x:Null}" Password="{x:Null}" SecurePassword="{x:Null}" UserName="{x:Null}" AzureAppPermissions="None" DisplayName="Sharepoint application scope" sap:VirtualizedContainerService.HintSize="552,1628" sap2010:WorkflowViewState.IdRef="SharepointApplicationScope_2" PlatformType="Online" QueryGrouping="False" ResetCredentials="False" SharePointInstanceType="WebLogin" URL="[io_Config(&quot;Sharepoint URL&quot;).ToString]">
                  <usa:SharepointApplicationScope.Body>
                    <ActivityAction x:TypeArguments="us:SharePointContextInfo">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="us:SharePointContextInfo" Name="SharePointContextInfoTag" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="518,1486" sap2010:WorkflowViewState.IdRef="Sequence_159">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <usal:GetFile AttachmentsAction="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Get Master Log" sap:VirtualizedContainerService.HintSize="476,104" sap2010:WorkflowViewState.IdRef="GetFile_2" LocalPath="[in_strFolderPath+io_Config(&quot;DDI Log Path&quot;).ToString]" LocalPathHintText="Local path where the file will be saved" RelativeUrl="[strDDILogSharepointFilepath]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="True" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                        <Delay DisplayName=" Delay 2 seconds" Duration="00:00:02" sap:VirtualizedContainerService.HintSize="476,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                        <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="476,134" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="EXCEL" />
                        <Sequence DisplayName="Populate Index" sap:VirtualizedContainerService.HintSize="476,634" sap2010:WorkflowViewState.IdRef="Sequence_89">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Populate Master Log - Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,542" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_6" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[in_strFolderPath+io_Config(&quot;DDI Log Path&quot;).ToString]">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Populate Master Log" sap:VirtualizedContainerService.HintSize="376,433" sap2010:WorkflowViewState.IdRef="Sequence_88">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelAppendRange DataTable="[io_dtDogInformationPass]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_19" SheetName="Passed" />
                                  <ui:ExcelAppendRange DataTable="[io_dtDogInformationSoftFail]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_20" SheetName="Soft Fail" />
                                  <ui:ExcelAppendRange DataTable="[io_dtDogInformationHardFail]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_21" SheetName="Hard Fail" />
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                          </ui:ExcelApplicationScope>
                        </Sequence>
                        <Delay DisplayName=" Delay 2 seconds" Duration="00:00:02" sap:VirtualizedContainerService.HintSize="476,22" sap2010:WorkflowViewState.IdRef="Delay_3" />
                        <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="476,134" sap2010:WorkflowViewState.IdRef="KillProcess_3" ProcessName="EXCEL" />
                        <usal:UploadFile AttachmentsAction="{x:Null}" PropertiesToAdd="{x:Null}" RelativeUrlHintText="{x:Null}" AllowOperationsOnASPXFiles="False" AllowOverwrite="True" CheckInFileAfterCreation="False" CheckOutFileBeforeOverwrite="False" ChooseFile="True" DisplayName="Upload file" sap:VirtualizedContainerService.HintSize="476,104" sap2010:WorkflowViewState.IdRef="UploadFile_2" LocalPath="[in_strFolderPath+io_Config(&quot;DDI Log Path&quot;).ToString]" LocalPathHintText="The current local path of the file" RelativeUrl="[strDDILogSharepointFilepath]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="True" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                      </Sequence>
                    </ActivityAction>
                  </usa:SharepointApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </usa:SharepointApplicationScope>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="556,22" sap2010:WorkflowViewState.IdRef="Catch`1_24">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Capture Exception" sap:VirtualizedContainerService.HintSize="376,388" sap2010:WorkflowViewState.IdRef="Sequence_429">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="KillProcess_7" ProcessName="EXCEL" />
                      <su:Check_In_Sharepoint_File DisplayName="Check In Sharepoint File" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Check_In_Sharepoint_File_5" in_strAssetName="Logs Checked Out" in_strSharepointFilePath="[strDDILogSharepointFilepath]" in_strSharepointLockFilePath="[in_strSharepointLockFilePath]" in_strSharepointURL="[io_Config(&quot;Sharepoint URL&quot;).ToString]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <su:Check_In_Sharepoint_File.in_credADCredentials>
                          <InArgument x:TypeArguments="sn:NetworkCredential" />
                        </su:Check_In_Sharepoint_File.in_credADCredentials>
                      </su:Check_In_Sharepoint_File>
                      <Assign DisplayName="Assign Exception" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_801">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:Exception">[exeException]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <su:Check_In_Sharepoint_File DisplayName="Check In Sharepoint File" sap:VirtualizedContainerService.HintSize="590,22" sap2010:WorkflowViewState.IdRef="Check_In_Sharepoint_File_2" in_strAssetName="Logs Checked Out" in_strSharepointFilePath="[strDDILogSharepointFilepath]" in_strSharepointLockFilePath="[in_strSharepointLockFilePath]" in_strSharepointURL="[io_Config(&quot;Sharepoint URL&quot;).ToString]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <su:Check_In_Sharepoint_File.in_credADCredentials>
                <InArgument x:TypeArguments="sn:NetworkCredential" />
              </su:Check_In_Sharepoint_File.in_credADCredentials>
            </su:Check_In_Sharepoint_File>
            <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="590,80" sap2010:WorkflowViewState.IdRef="DeleteFileX_5" Path="[in_strFolderPath+io_Config(&quot;DDI Log Path&quot;).ToString]" />
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">200,599.5</av:Point>
                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">300,651.5 300,701.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[io_dtDogInformationPass]" DisplayName="For Each Row Pass DataTable" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd1:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd1:DataRow" Name="CurrentRow" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="686,6609" sap2010:WorkflowViewState.IdRef="Sequence_333">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Int32" Name="intFolderNumber" />
                        <Variable x:TypeArguments="x:String" Name="strMainFolder" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Draft Certificate" sap:VirtualizedContainerService.HintSize="644,3587" sap2010:WorkflowViewState.IdRef="Sequence_332">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process - Word" sap:VirtualizedContainerService.HintSize="602,134" sap2010:WorkflowViewState.IdRef="KillProcess_5" ProcessName="WINWORD" />
                        <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_strFolderPath + io_Config(&quot;Draft Cert Location&quot;).ToString]" DisplayName="Copy Cert to make a Draft" sap:VirtualizedContainerService.HintSize="602,160" sap2010:WorkflowViewState.IdRef="CopyFile_5" Overwrite="True" Path="[in_strFolderPath + io_Config(&quot;Cert Location&quot;).ToString]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:CopyFile>
                        <Sequence DisplayName="Reaplace text in Cert" sap:VirtualizedContainerService.HintSize="602,3121" sap2010:WorkflowViewState.IdRef="Sequence_331">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Int32" Name="intIndexNumber" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Owner Name" FilePath="[in_strFolderPath + io_Config(&quot;Draft Cert Location&quot;).ToString]" sap:VirtualizedContainerService.HintSize="560,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_53" Replace="[CurrentRow(1).ToString + &quot; &quot; + CurrentRow(2).ToString.Trim]" Search="Owner Name" />
                          <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Address Line 1 " FilePath="[in_strFolderPath + io_Config(&quot;Draft Cert Location&quot;).ToString]" sap:VirtualizedContainerService.HintSize="560,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_54" Replace="[CurrentRow(3).ToString.Trim]" Search="Address line 1" />
                          <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Address Line 2" FilePath="[in_strFolderPath + io_Config(&quot;Draft Cert Location&quot;).ToString]" sap:VirtualizedContainerService.HintSize="560,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_55" Replace="[CurrentRow(4).ToString.Trim]" Search="Address line 2" />
                          <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Address Line 3" FilePath="[in_strFolderPath + io_Config(&quot;Draft Cert Location&quot;).ToString]" sap:VirtualizedContainerService.HintSize="560,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_56" Replace="[CurrentRow(5).ToString.Trim]" Search="Address line 3" />
                          <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Postcode" FilePath="[in_strFolderPath + io_Config(&quot;Draft Cert Location&quot;).ToString]" sap:VirtualizedContainerService.HintSize="560,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_57" Replace="[CurrentRow(8).ToString.Trim]" Search="Postcode" />
                          <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Index Registration Number" FilePath="[in_strFolderPath + io_Config(&quot;Draft Cert Location&quot;).ToString]" sap:VirtualizedContainerService.HintSize="560,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_58" Replace="[CurrentRow(23).ToString.Trim]" Search="Index registration number" />
                          <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Microchip No" FilePath="[in_strFolderPath + io_Config(&quot;Draft Cert Location&quot;).ToString]" sap:VirtualizedContainerService.HintSize="560,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_59" Replace="[CurrentRow(20).ToString.Trim]" Search="Microchip No" />
                          <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Dog Name" FilePath="[in_strFolderPath + io_Config(&quot;Draft Cert Location&quot;).ToString]" sap:VirtualizedContainerService.HintSize="560,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_60" Replace="[CurrentRow(12).ToString.Trim]" Search="Dog Name" />
                          <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Type of Dog" FilePath="[in_strFolderPath + io_Config(&quot;Draft Cert Location&quot;).ToString]" sap:VirtualizedContainerService.HintSize="560,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_61" Replace="XL Bully" Search="Type of dog" />
                          <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Sex of Dog" FilePath="[in_strFolderPath + io_Config(&quot;Draft Cert Location&quot;).ToString]" sap:VirtualizedContainerService.HintSize="560,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_62" Replace="[CurrentRow(15).ToString]" Search="Sex of dog" />
                          <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Date of birth of dog" FilePath="[in_strFolderPath + io_Config(&quot;Draft Cert Location&quot;).ToString]" sap:VirtualizedContainerService.HintSize="560,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_63" Replace="[CurrentRow(13).ToString]" Search="Date of birth of dog" />
                          <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Main colour of dog&quot;" FilePath="[in_strFolderPath + io_Config(&quot;Draft Cert Location&quot;).ToString]" sap:VirtualizedContainerService.HintSize="560,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_64" Replace="[CurrentRow(14).ToString]" Search="Main colour of dog" />
                          <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Date" FilePath="[in_strFolderPath + io_Config(&quot;Draft Cert Location&quot;).ToString]" sap:VirtualizedContainerService.HintSize="560,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_65" Replace="[Today.ToString(&quot;dd MMMM yyyy&quot;)]" Search="Enter date" />
                          <Delay DisplayName="Delay 2 secs" Duration="00:00:02" sap:VirtualizedContainerService.HintSize="560,22" sap2010:WorkflowViewState.IdRef="Delay_6" />
                          <p1:WordApplicationScope DisplayName="Word Application Scope" FilePath="[in_strFolderPath + io_Config(&quot;Draft Cert Location&quot;).ToString]" sap:VirtualizedContainerService.HintSize="560,1251" sap2010:WorkflowViewState.IdRef="WordApplicationScope_5">
                            <p1:WordApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WordDocument">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="526,1142" sap2010:WorkflowViewState.IdRef="Sequence_330">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="strButtonSelected" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[CBool(io_Config(&quot;boolPausePoint3&quot;))]" sap:VirtualizedContainerService.HintSize="484,653" sap2010:WorkflowViewState.IdRef="If_82">
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="280.5,464" sap2010:WorkflowViewState.IdRef="Sequence_329">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <InvokeMethod DisplayName="Stop Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_35" MethodName="Stop">
                                          <InvokeMethod.TargetObject>
                                            <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                                          </InvokeMethod.TargetObject>
                                        </InvokeMethod>
                                        <p:Generic_PopUp OUT_ProcessType="{x:Null}" DisplayName="Generic PopUp" sap:VirtualizedContainerService.HintSize="238.5,22" IN_CSS_filepath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\YesNo.css&quot;]" IN_ErrorMessage="Please check the form has been drafted correctly" IN_PopupMessage="&lt;h1&gt;Draft XL Exemption Cert complete&lt;/h1&gt;&lt;P&gt;The Draft Cert has now been drafted. Please check that everything have populated correctly. Once you are happy please click ok to continue.&lt;/P&gt;&lt;BR&gt;" IN_PopupTitle="Department for Environment, Food and Rural Affairs" IN_WidthHeight="[{800,450}]" sap2010:WorkflowViewState.IdRef="Generic_PopUp_17" OUT_strButtonSelected="[strButtonSelected]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </p:Generic_PopUp>
                                        <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_36" MethodName="Start">
                                          <InvokeMethod.TargetObject>
                                            <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                                          </InvokeMethod.TargetObject>
                                        </InvokeMethod>
                                      </Sequence>
                                    </If.Then>
                                  </If>
                                  <Delay DisplayName="Delay 2 secs" Duration="00:00:02" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="Delay_7" />
                                  <p1:WordExportToPdf DisplayName="Save Document as PDF" FilePath="[in_strFolderPath + io_Config(&quot;PDF Cert Location&quot;).ToString]" sap:VirtualizedContainerService.HintSize="484,111" sap2010:WorkflowViewState.IdRef="WordExportToPdf_6" />
                                  <ui:RenameFileX DisplayName="Rename Cert" FilePath="[in_strFolderPath + io_Config(&quot;PDF Cert Location&quot;).ToString]" sap:VirtualizedContainerService.HintSize="484,144" sap2010:WorkflowViewState.IdRef="RenameFileX_1" KeepExtension="True" NewName="[in_strFolderPath + &quot;\DEFRA-Dangerous-Dogs-Index\&quot; + CurrentRow(23).ToString + &quot; - &quot; + CurrentRow(12).ToString + &quot; - Certificate of Exemption XL Bully.pdf&quot;]" />
                                </Sequence>
                              </ActivityAction>
                            </p1:WordApplicationScope.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </p1:WordApplicationScope>
                        </Sequence>
                      </Sequence>
                      <Assign sap:VirtualizedContainerService.HintSize="644,60" sap2010:WorkflowViewState.IdRef="Assign_736">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[intFolderNumber]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[CInt(CurrentRow(23).ToString) - 1]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If Condition="[intFolderNumber mod 500 = 0]" sap:VirtualizedContainerService.HintSize="644,516" sap2010:WorkflowViewState.IdRef="If_92">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="326,326" sap2010:WorkflowViewState.IdRef="Sequence_381">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="284,60" sap2010:WorkflowViewState.IdRef="Assign_738">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[io_Config("Parent Cert Folder")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[currentrow(23).tostring + " - " + (CInt(currentrow(23)) + 499).ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:SetAsset TimeoutMS="{x:Null}" AssetName="Parent Cert Folder" DisplayName="Set Asset" sap:VirtualizedContainerService.HintSize="284,134" sap2010:WorkflowViewState.IdRef="SetAsset_16" Value="[io_Config(&quot;Parent Cert Folder&quot;)]" />
                          </Sequence>
                        </If.Then>
                      </If>
                      <usa:SharepointApplicationScope AzureApplicationID="{x:Null}" ClientContext="{x:Null}" ClientId="{x:Null}" ClientSecret="{x:Null}" LoginTimeout="{x:Null}" Password="{x:Null}" SecurePassword="{x:Null}" UserName="{x:Null}" AzureAppPermissions="None" DisplayName="Sharepoint application scope" sap:VirtualizedContainerService.HintSize="644,748" sap2010:WorkflowViewState.IdRef="SharepointApplicationScope_5" PlatformType="Online" QueryGrouping="False" ResetCredentials="False" SharePointInstanceType="WebLogin" URL="[io_Config(&quot;Sharepoint URL&quot;).ToString]">
                        <usa:SharepointApplicationScope.Body>
                          <ActivityAction x:TypeArguments="us:SharePointContextInfo">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="us:SharePointContextInfo" Name="SharePointContextInfoTag" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,606" sap2010:WorkflowViewState.IdRef="Sequence_373">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <usal:CreateFolder AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Create folder" sap:VirtualizedContainerService.HintSize="334,104" sap2010:WorkflowViewState.IdRef="CreateFolder_8" LibraryName="DD INDEX FILES" RelativeUrl="[io_Config(&quot;Parent Cert Folder&quot;).ToString + &quot;/&quot; + CurrentRow(23).ToString + &quot; - &quot; + CurrentRow(12).ToString + &quot; - &quot; + CurrentRow(1).ToString + &quot; &quot; + CurrentRow(2).ToString]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="True" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[io_Config(&quot;Main Cert Folder&quot;).ToString + &quot;/&quot; + io_Config(&quot;Parent Cert Folder&quot;).ToString + &quot;/&quot; + CurrentRow(23).ToString + &quot; - &quot; + CurrentRow(12).ToString + &quot; - &quot; + CurrentRow(1).ToString + &quot; &quot; + CurrentRow(2).ToString]" />
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[in_strFolderPath + &quot;\DEFRA-Dangerous-Dogs-Index\&quot; + CurrentRow(23).ToString + &quot; - &quot; + CurrentRow(12).ToString + &quot; - Certificate of Exemption XL Bully.pdf&quot;]" />
                              <usal:UploadFile AttachmentsAction="{x:Null}" PropertiesToAdd="{x:Null}" RelativeUrlHintText="{x:Null}" AllowOperationsOnASPXFiles="False" AllowOverwrite="True" CheckInFileAfterCreation="False" CheckOutFileBeforeOverwrite="False" ChooseFile="True" DisplayName="Upload file" sap:VirtualizedContainerService.HintSize="334,104" sap2010:WorkflowViewState.IdRef="UploadFile_5" LocalPath="[in_strFolderPath + &quot;\DEFRA-Dangerous-Dogs-Index\&quot; + CurrentRow(23).ToString + &quot; - &quot; + CurrentRow(12).ToString + &quot; - Certificate of Exemption XL Bully.pdf&quot;]" LocalPathHintText="The current local path of the file" RelativeUrl="[io_Config(&quot;Main Cert Folder&quot;).ToString + &quot;/&quot; + io_Config(&quot;Parent Cert Folder&quot;).ToString + &quot;/&quot; + CurrentRow(23).ToString + &quot; - &quot; + CurrentRow(12).ToString + &quot; - &quot; + CurrentRow(1).ToString + &quot; &quot; + CurrentRow(2).ToString]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="True" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                            </Sequence>
                          </ActivityAction>
                        </usa:SharepointApplicationScope.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </usa:SharepointApplicationScope>
                      <Sequence DisplayName="Draft Email" sap:VirtualizedContainerService.HintSize="644,1446" sap2010:WorkflowViewState.IdRef="Sequence_359">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="EmailText" />
                          <Variable x:TypeArguments="snm:MailMessage" Name="mailMessage" />
                          <Variable x:TypeArguments="snm:MailAddress" Name="sentOnBehalfOfAddress" />
                          <Variable x:TypeArguments="x:String" Name="strSentOnBehalfOf" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="516,64" sap2010:WorkflowViewState.IdRef="Assign_729">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[EmailText]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;p&gt;Dear " + CurrentRow(1).ToString + " " + CurrentRow(2).ToString + ",&lt;/p&gt;" +
"&lt;p&gt;Re: Certificate of Exemption for " + CurrentRow(12).ToString + ", Index Number: " + CurrentRow(23).ToString + "&lt;/p&gt;" +
"&lt;p&gt;Thank you for completing your application for a Certificate of Exemption. Your application has been successful, please find attached your Certificate of Exemption.&lt;/p&gt;"+
"&lt;p&gt;It is important that you read and understand the following:&lt;/p&gt;"+
"&lt;ul&gt;"+
  "&lt;li&gt; The Certificate of Exemption will only be valid provided you comply with the Certificate of Exemption requirements which are found on page 2 of the Certificate.  These requirements are set out in article 7 of The Dangerous Dogs (Compensation and Exemption Schemes) (England and Wales) Order 2023.&lt;/li&gt;"+
  "&lt;li&gt; If you fail to comply with the Certificate of Exemption requirements the prohibited dog will no longer be exempt.  The dog may be seized by the police, and you may be prosecuted for an offence under the Dangerous Dogs Act 1991.  A court may also order the dog to be destroyed.&lt;/li&gt;"+
"&lt;/ul&gt;"+
"&lt;p&gt;We advise that you keep your Certificate of Exemption safe as it is a certificate for life, and you may be required to produce it to a police officer or other authorised person.  We will only issue a new certificate if yours is lost or if you change your name or address.  Please inform the Index team if you have lost your certificate or need to request a change. &lt;/p&gt;"+
"&lt;p&gt;If you change your address, you must contact the Index team immediately as this is a requirement of the Certificate of Exemption. We will send you a change of address form for you to complete and return to us.&lt;/p&gt;"+
"&lt;p&gt;You must also let the Index team know if your dog dies. We will send you a form for you to complete and return to us. We require these forms to update our records. &lt;/p&gt;"+
"&lt;p&gt;If you wish to have your Certificate of Exemption withdrawn in the future, because you are sure that the dog is not in scope of the official definition of an XL Bully published on gov.uk, please contact the Dogs Index team who will guide you through the process.&lt;/p&gt;"+
"&lt;p&gt;Should you need further advice or guidance please contact the Index team on &lt;a href='mailto:dogsindex@defra.gov.uk'&gt;dogsindex@defra.gov.uk&lt;/a&gt;.&lt;/p&gt;"+
"&lt;p&gt;Yours sincerely,&lt;/p&gt;"+
"&lt;p&gt;Index Team&lt;/p&gt;"]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="516,60" sap2010:WorkflowViewState.IdRef="Assign_730">
                          <Assign.To>
                            <OutArgument x:TypeArguments="snm:MailMessage">[mailMessage]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="snm:MailMessage">[New System.Net.Mail.MailMessage()]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="516,60" sap2010:WorkflowViewState.IdRef="Assign_731">
                          <Assign.To>
                            <OutArgument x:TypeArguments="snm:MailAddress">[sentOnBehalfOfAddress]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="snm:MailAddress">[New System.Net.Mail.MailAddress("AWDDI@defra.gov.uk", "XL Bully Exemption Scheme")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="516,60" sap2010:WorkflowViewState.IdRef="Assign_732">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strSentOnBehalfOf]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[sentOnBehalfOfAddress.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="516,950" sap2010:WorkflowViewState.IdRef="TryCatch_22">
                          <TryCatch.Try>
                            <Sequence sap:VirtualizedContainerService.HintSize="478,718" sap2010:WorkflowViewState.IdRef="Sequence_427">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:CommentOut DisplayName="Comment Out - Test" sap:VirtualizedContainerService.HintSize="436,317" sap2010:WorkflowViewState.IdRef="CommentOut_9">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,239" sap2010:WorkflowViewState.IdRef="Sequence_458">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:SendOutlookMail Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[io_Config(&quot;AccountName&quot;).ToString]" Body="[EmailText]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,147" sap2010:WorkflowViewState.IdRef="SendOutlookMail_10" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" SentOnBehalfOfName="[strSentOnBehalfOf]" Subject="Apply for a Certificate of Exemption to keep an XL Bully dog" To="Richard.Jones@defra.gov.uk">
                                      <ui:SendOutlookMail.Files>
                                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                          <InArgument x:TypeArguments="x:String">[in_strFolderPath + "\DEFRA-Dangerous-Dogs-Index\" + CurrentRow(23).ToString + " - " + CurrentRow(12).ToString + " - Certificate of Exemption XL Bully.pdf"]</InArgument>
                                        </scg:List>
                                      </ui:SendOutlookMail.Files>
                                    </ui:SendOutlookMail>
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                              <ui:SendOutlookMail Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[io_Config(&quot;AccountName&quot;).ToString]" Body="[EmailText]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="436,149" sap2010:WorkflowViewState.IdRef="SendOutlookMail_6" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" SentOnBehalfOfName="[strSentOnBehalfOf]" Subject="Apply for a Certificate of Exemption to keep an XL Bully dog" To="[CurrentRow(11).ToString]">
                                <ui:SendOutlookMail.Files>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                    <InArgument x:TypeArguments="x:String">[in_strFolderPath + "\DEFRA-Dangerous-Dogs-Index\" + CurrentRow(23).ToString + " - " + CurrentRow(12).ToString + " - Certificate of Exemption XL Bully.pdf"]</InArgument>
                                  </scg:List>
                                </ui:SendOutlookMail.Files>
                              </ui:SendOutlookMail>
                              <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="436,80" sap2010:WorkflowViewState.IdRef="DeleteFileX_3" Path="[in_strFolderPath + &quot;\DEFRA-Dangerous-Dogs-Index\&quot; + CurrentRow(23).ToString + &quot; - &quot; + CurrentRow(12).ToString + &quot; - Certificate of Exemption XL Bully.pdf&quot;]" />
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="482,22" sap2010:WorkflowViewState.IdRef="Catch`1_22">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="Nothing" />
                                </ActivityAction.Argument>
                                <Sequence sap:VirtualizedContainerService.HintSize="426,421" sap2010:WorkflowViewState.IdRef="Sequence_426">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:SendOutlookMail Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[io_Config(&quot;AccountName&quot;).ToString]" Body="[EmailText]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="384,149" sap2010:WorkflowViewState.IdRef="SendOutlookMail_8" Importance="Normal" IsBodyHtml="True" IsDraft="True" Sensitivity="Normal" SentOnBehalfOfName="[strSentOnBehalfOf]" Subject="Apply for a Certificate of Exemption to keep an XL Bully dog" To="[CurrentRow(11).ToString]">
                                    <ui:SendOutlookMail.Files>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                        <InArgument x:TypeArguments="x:String">[in_strFolderPath + "\DEFRA-Dangerous-Dogs-Index\" + CurrentRow(23).ToString + " - " + CurrentRow(12).ToString + " - Certificate of Exemption XL Bully.pdf"]</InArgument>
                                      </scg:List>
                                    </ui:SendOutlookMail.Files>
                                  </ui:SendOutlookMail>
                                  <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="384,80" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[in_strFolderPath + &quot;\DEFRA-Dangerous-Dogs-Index\&quot; + CurrentRow(23).ToString + &quot; - &quot; + CurrentRow(12).ToString + &quot; - Certificate of Exemption XL Bully.pdf&quot;]" />
                                  <Throw Exception="[new BusinessRuleException (&quot;Issue sending email. Please check drafts&quot;)]" sap:VirtualizedContainerService.HintSize="384,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </Sequence>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">200,701.5</av:Point>
                      <av:Size x:Key="ShapeSize">200,52</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[io_dtDogInformationHardFail]" DisplayName="For Each Row Hard Fail DataTable" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd1:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd1:DataRow" Name="CurrentRow" />
                        </ActivityAction.Argument>
                        <Sequence sap:VirtualizedContainerService.HintSize="602,3127" sap2010:WorkflowViewState.IdRef="Sequence_433">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[in_dtSwearWords]" DisplayName="Check whether email is abusive " sap:VirtualizedContainerService.HintSize="560,563" sap2010:WorkflowViewState.IdRef="ForEachRow_11">
                            <ui:ForEachRow.Body>
                              <ActivityAction x:TypeArguments="sd1:DataRow">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="sd1:DataRow" Name="Row" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,442" sap2010:WorkflowViewState.IdRef="Sequence_449">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="strWord" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assign Row to String" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_835">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strWord]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[row("Swear Word").ToString.ToLower]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If Condition="[(CurrentRow(1).ToString.ToLower.Contains(strWord)) OR (CurrentRow(2).ToString.ToLower.Contains(strWord)) OR (CurrentRow(11).ToString.ToLower.Contains(strWord)) OR (CurrentRow(12).ToString.ToLower.Contains(strWord))]" DisplayName="If the swearword is contains within the text" sap:VirtualizedContainerService.HintSize="484,250" sap2010:WorkflowViewState.IdRef="If_103">
                                    <If.Then>
                                      <Throw DisplayName="Throw new BusinessRuleException(&quot;Unable to Send. Email Contains Abusive Language&quot;)" Exception="[new BusinessRuleException(&quot;Unable to Send. Email Contains Abusive Language&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEachRow.Body>
                          </ui:ForEachRow>
                          <Sequence DisplayName="Draft Rejection Email" sap:VirtualizedContainerService.HintSize="560,2432" sap2010:WorkflowViewState.IdRef="Sequence_350">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="EmailText" />
                              <Variable x:TypeArguments="snm:MailMessage" Name="mailMessage" />
                              <Variable x:TypeArguments="snm:MailAddress" Name="sentOnBehalfOfAddress" />
                              <Variable x:TypeArguments="x:String" Name="strSentOnBehalfOf" />
                              <Variable x:TypeArguments="x:String" Name="EmailBody" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Assign text to start of Email Body" sap:VirtualizedContainerService.HintSize="484,64" sap2010:WorkflowViewState.IdRef="Assign_725">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[EmailBody]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;p&gt;Dear " &amp; CurrentRow(1).ToString &amp; " " &amp; CurrentRow(2).ToString &amp; ",&lt;/p&gt;" +
		"&lt;p&gt;&lt;strong&gt;Re: Application For exemption For " &amp; CurrentRow(12).ToString &amp; "&lt;/strong&gt;&lt;/p&gt;" +
        "&lt;p&gt;Your application For a Certificate Of Exemption For your XL Bully dog has Not been approved For the following reason:&lt;/p&gt;"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[Not String.IsNullOrEmpty(Reason1)]" DisplayName="If reason 1 is populated" sap:VirtualizedContainerService.HintSize="484,250" sap2010:WorkflowViewState.IdRef="If_99">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Assign DisplayName="Assign Reason 1 to Email Body" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_826">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[EmailBody]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[EmailBody + "&lt;li&gt;" + Reason1 + "&lt;/li&gt;"]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                            </If>
                            <If Condition="[Not String.IsNullOrEmpty(Reason2)]" DisplayName="If reason 2 is populated" sap:VirtualizedContainerService.HintSize="484,250" sap2010:WorkflowViewState.IdRef="If_100">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Assign DisplayName="Assign Reason 2 to Email Body" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_827">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[EmailBody]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[EmailBody + "&lt;li&gt;" + Reason2 + "&lt;/li&gt;"]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                            </If>
                            <If Condition="[Not String.IsNullOrEmpty(Reason3)]" DisplayName="If reason 3 is populated" sap:VirtualizedContainerService.HintSize="484,250" sap2010:WorkflowViewState.IdRef="If_101">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Assign DisplayName="Assign Reason 3 to Email Body" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_828">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[EmailBody]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[EmailBody + "&lt;li&gt;" + Reason3 + "&lt;/li&gt;"]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                            </If>
                            <If Condition="[Not String.IsNullOrEmpty(Reason4)]" DisplayName="If reason 4 is populated" sap:VirtualizedContainerService.HintSize="484,250" sap2010:WorkflowViewState.IdRef="If_102">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Assign DisplayName="Assign Reason 4 to Email Body" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_829">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[EmailBody]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[EmailBody + "&lt;li&gt;" + Reason4 + "&lt;/li&gt;"]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                            </If>
                            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="484,193" sap2010:WorkflowViewState.IdRef="MultipleAssign_13">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_155">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[EmailText]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[EmailBody + "&lt;p&gt;You can re-apply for a Certificate of Exemption before the closing date of midday on 31 January 2024.&lt;/p&gt;" +
                      "&lt;p&gt;From 1 February 2024, it will be a criminal offence to own an XL Bully dog in England and Wales unless you have a Certificate of Exemption for your dog. Find out how to prepare for the ban on XL Bully dogs.&lt;/p&gt;" +
                      "&lt;p&gt;Please do not reply to this email. This response has been automatically generated, and the inbox is not monitored.&lt;/p&gt;" +
                      "&lt;p&gt;Regards,&lt;br&gt;Index Team&lt;/p&gt;"]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_156">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="snm:MailMessage">[mailMessage]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="snm:MailMessage">[New System.Net.Mail.MailMessage()]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_157">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="snm:MailAddress">[sentOnBehalfOfAddress]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="snm:MailAddress">[New System.Net.Mail.MailAddress("AWDDI@defra.gov.uk", "XL Bully Exemption Scheme")]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_158">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[strSentOnBehalfOf]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[sentOnBehalfOfAddress.ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                            </ui:MultipleAssign>
                            <If Condition="[CBool(io_Config(&quot;boolPausePoint4&quot;))]" sap:VirtualizedContainerService.HintSize="484,654" sap2010:WorkflowViewState.IdRef="If_104">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence DisplayName="Build_HTML_Table_Test" sap:VirtualizedContainerService.HintSize="280.5,464" sap2010:WorkflowViewState.IdRef="Sequence_452">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="sd1:DataTable" Name="dtTableResults" />
                                    <Variable x:TypeArguments="x:String" Name="HTMLHeader" />
                                    <Variable x:TypeArguments="x:String" Name="HTMLFooter" />
                                    <Variable x:TypeArguments="x:String" Name="MiddleHTML" />
                                    <Variable x:TypeArguments="x:String" Name="HTMLContent" />
                                    <Variable x:TypeArguments="x:String" Name="strDataAsTable" />
                                    <Variable x:TypeArguments="x:String" Name="strButtonSelected" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_39" MethodName="Stop">
                                    <InvokeMethod.TargetObject>
                                      <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                                    </InvokeMethod.TargetObject>
                                  </InvokeMethod>
                                  <p:Generic_PopUp OUT_ProcessType="{x:Null}" DisplayName="Generic PopUp" sap:VirtualizedContainerService.HintSize="238.5,22" IN_CSS_filepath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\YesNo.css&quot;]" IN_ErrorMessage="Please check the information that is going to be displayed in the email" IN_PopupMessage="[&quot;&lt;h1&gt;Please Check Data&lt;/h1&gt;Below is the information which will be populated in the email. Please check it is correct.&quot; + Environment.NewLine + Environment.NewLine + EmailText]" IN_PopupTitle="Department for Environment, Food and Rural Affairs" IN_WidthHeight="[{1200,550}]" sap2010:WorkflowViewState.IdRef="Generic_PopUp_19" OUT_strButtonSelected="[strButtonSelected]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </p:Generic_PopUp>
                                  <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_40" MethodName="Start">
                                    <InvokeMethod.TargetObject>
                                      <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                                    </InvokeMethod.TargetObject>
                                  </InvokeMethod>
                                </Sequence>
                              </If.Then>
                            </If>
                            <ui:SendOutlookMail Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[io_Config(&quot;AccountName&quot;).ToString]" Body="[EmailText]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="484,149" sap2010:WorkflowViewState.IdRef="SendOutlookMail_3" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" SentOnBehalfOfName="[strSentOnBehalfOf]" Subject="Apply for a Certificate of Exemption to keep an XL Bully dog" To="[CurrentRow(11).ToString]">
                              <ui:SendOutlookMail.Files>
                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                              </ui:SendOutlookMail.Files>
                            </ui:SendOutlookMail>
                          </Sequence>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEachRow>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <FlowStep x:Name="__ReferenceID5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,127.5</av:Point>
          <av:Size x:Key="ShapeSize">200,68</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,195.5 300,245.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Get Text from Email" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_328">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="strEmailBody" />
          <Variable x:TypeArguments="x:String" Name="strDataAsTable" />
          <Variable x:TypeArguments="x:String" Name="strButtonSelected" />
          <Variable x:TypeArguments="x:String" Name="EmailText" />
          <Variable x:TypeArguments="x:String" Name="strIndexNumber" />
          <Variable x:TypeArguments="x:Int32" Name="intIndexNumber" />
          <Variable x:TypeArguments="sd1:DataTable" Name="dtCheckDataBase" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="Clear Data Tables" sap:VirtualizedContainerService.HintSize="1908,412" sap2010:WorkflowViewState.IdRef="Sequence_368">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ClearDataTable DataTable="[io_dtDogInformationHardFail]" DisplayName="Clear Hard Fail Data Table" sap:VirtualizedContainerService.HintSize="284,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_5" />
          <ui:ClearDataTable DataTable="[io_dtDogInformationPass]" DisplayName="Clear Pass DataTable" sap:VirtualizedContainerService.HintSize="284,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_6" />
          <ui:ClearDataTable DataTable="[io_dtDogInformationSoftFail]" DisplayName="Clear Soft Fail DataTable" sap:VirtualizedContainerService.HintSize="284,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_7" />
        </Sequence>
        <usa:SharepointApplicationScope AzureApplicationID="{x:Null}" ClientContext="{x:Null}" ClientId="{x:Null}" ClientSecret="{x:Null}" LoginTimeout="{x:Null}" Password="{x:Null}" SecurePassword="{x:Null}" UserName="{x:Null}" AzureAppPermissions="None" DisplayName="Download Current Spreadsheet" sap:VirtualizedContainerService.HintSize="1908,52" sap2010:WorkflowViewState.IdRef="SharepointApplicationScope_6" PlatformType="Online" QueryGrouping="False" ResetCredentials="False" SharePointInstanceType="WebLogin" URL="[io_Config(&quot;Sharepoint URL&quot;).ToString]">
          <usa:SharepointApplicationScope.Body>
            <ActivityAction x:TypeArguments="us:SharePointContextInfo">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="us:SharePointContextInfo" Name="SharePointContextInfoTag" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Get Current Passed Files from Spreadsheet" sap:VirtualizedContainerService.HintSize="476,756" sap2010:WorkflowViewState.IdRef="Sequence_394">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <usal:GetFile AttachmentsAction="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Download Main Spreadsheet" sap:VirtualizedContainerService.HintSize="434,104" sap2010:WorkflowViewState.IdRef="GetFile_4" LocalPath="[in_strFolderPath+io_Config(&quot;DDI Log Path&quot;).ToString]" LocalPathHintText="Local path where the file will be saved" RelativeUrl="[io_Config(&quot;Log Sharepoint Filepath&quot;).ToString]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="True" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dtCheckDataBase]" DisplayName="Read Passed Workbook" sap:VirtualizedContainerService.HintSize="434,87" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Passed" WorkbookPath="[in_strFolderPath+io_Config(&quot;DDI Log Path&quot;).ToString]" />
                <ui:DeleteFileX DisplayName="Delete Spreadsheet after DT created" sap:VirtualizedContainerService.HintSize="434,80" sap2010:WorkflowViewState.IdRef="DeleteFileX_2" Path="[in_strFolderPath+io_Config(&quot;DDI Log Path&quot;).ToString]" />
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtCheckDataBase]" DisplayName="Change each payment reference number to upper case" sap:VirtualizedContainerService.HintSize="434,273" sap2010:WorkflowViewState.IdRef="ForEachRow_10">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd1:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd1:DataRow" Name="CurrentRow" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_430">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign text to upper" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_802">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[CurrentRow("Payment Ref Number")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[CurrentRow("Payment Ref Number").ToString.ToUpper()]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                </ui:ForEachRow>
              </Sequence>
            </ActivityAction>
          </usa:SharepointApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </usa:SharepointApplicationScope>
        <Sequence DisplayName="Manipulate Email Text so it is Readable" sap:VirtualizedContainerService.HintSize="1908,68" sap2010:WorkflowViewState.IdRef="Sequence_450">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign Item to strEmailBody" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_445">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strEmailBody]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.Body]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Replace New Lines in Text" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_446">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strEmailBody]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[strEmailBody.Replace(Environment.NewLine, String.Empty)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Replace &quot;____________________&quot; in text" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_447">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strEmailBody]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[strEmailBody.Replace("________________________________"," ")]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
        <ui:BuildDataTable DataTable="[dtCurrentEmail]" DisplayName="Build Current Email DataTable" sap:VirtualizedContainerService.HintSize="1908,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_8" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;EmailRef&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;FirstName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;LastName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;AddressLine1&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;_x0020_AddressLine2&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;TownOrCity&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;County&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;PostCode&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Country&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DateOfBirth&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;PhoneNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;EmailAddress&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DogsName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DogDOB&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DogColour&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DogGender&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;InsuranceStartDate&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;PaymentRefNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Neutered&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Microchipped&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;MicrochipNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;FollowUpNeeded&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;FollowUpRequired&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;IndexNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;strCertNeeded&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;strCertSent&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ApplicationStatus&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Reason1&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Reason2&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Reason3&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Reason4&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
        <Sequence DisplayName="Reset All Variables" sap:VirtualizedContainerService.HintSize="1908,68" sap2010:WorkflowViewState.IdRef="Sequence_451">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Email ID" DisplayName="Get Email ID Asset" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="GetRobotAsset_5">
            <ui:GetRobotAsset.Value>
              <OutArgument x:TypeArguments="x:String">[strEmailID]</OutArgument>
            </ui:GetRobotAsset.Value>
          </ui:GetRobotAsset>
          <Assign DisplayName="Set Follow up Needed to No" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_448">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog1]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">No</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Set Follow Up Reason for N/A" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_449">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog1]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">N/A</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign Cert Needed to Yes" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_450">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">Yes</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign Cert Needed to No" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_451">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">Yes</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign Application Status to Passed" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_452">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">Passed</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Reset Reason 1" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_831">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Reason1]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Reset Reason 2" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_832">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Reason2]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Reset Reason 4" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_833">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Reason3]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Reset Reason 4" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_834">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Reason4]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
        <Sequence DisplayName="Get Owner Information" sap:VirtualizedContainerService.HintSize="242,700" sap2010:WorkflowViewState.IdRef="Sequence_246">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Get Name" sap:VirtualizedContainerService.HintSize="376,850" sap2010:WorkflowViewState.IdRef="Sequence_235">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieLastName" />
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieFirstName" />
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerTitle" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Matches BuilderPattern="(?&lt;=First name: )\s*([^:\n\r]+)" DisplayName="Get Owners First Name" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_97" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=First name: )\\s*([^:\\n\\r]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?&lt;=First name: )\s*([^:\n\r]+)" RegexOption="IgnoreCase, Compiled" Result="[ieFirstName]" />
            <Assign DisplayName="Assign ieFirstName to String" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_453">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strFirstName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[ieFirstName(0).Value]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Remove First Name from String" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_454">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strFirstName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strFirstName.Replace("First name: ","")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Remove Whitespace" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_794">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strFirstName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strFirstName.Replace("Last name","").Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:Matches BuilderPattern="(?&lt;=Last name: )\s*([^:\n\r]+)Do you live in" DisplayName="Get Owners Last Name" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_98" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=Last name: )\\s*([^:\\n\\r]+)Do you live in&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?&lt;=Last name: )\s*([^:\n\r]+)Do you live in" RegexOption="IgnoreCase, Compiled" Result="[ieLastName]" />
            <Assign DisplayName="Assign ieSurname to String" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_455">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strLastName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[ieLastName(0).Value]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Remove Last Name from String" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_456">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strLastName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strLastName.Replace("Last name: ","")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Repove Whitespace" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_795">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strLastName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strLastName.Replace("Do you live in","").Trim]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <Sequence DisplayName="Get Owner Address" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_239">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerPostCode" />
              <Variable x:TypeArguments="x:String" Name="strOwnerAdress" />
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerAddress" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Matches BuilderPattern="What’s your address\?((?:(?!What’s your address\?|What’s your date of birth\?).)*)What’s your date of birth\?" DisplayName="Get Owners Address" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="Matches_99" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;What’s your address\\?((?:(?!What’s your address\\?|What’s your date of birth\\?).)*)What’s your date of birth\\?&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s your address\?((?:(?!What’s your address\?|What’s your date of birth\?).)*)What’s your date of birth\?" RegexOption="IgnoreCase, Multiline, Compiled" Result="[ieOwnerAddress]" />
            <ui:ForEach x:TypeArguments="str:Match" CurrentIndex="{x:Null}" DisplayName="For Each Match" sap:VirtualizedContainerService.HintSize="434,277" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[ieOwnerAddress]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="str:Match">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="str:Match" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_236">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign Owners Address to String" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_457">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strOwnerAdress]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[item.Groups(1).ToString.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <ui:Matches BuilderPattern="[A-Z]{1,2}[0-9R][0-9A-Z]? [0-9][ABD-HJLNP-UW-Z]{2}" DisplayName="Get Owners PostCode" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="Matches_100" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;[A-Z]{1,2}[0-9R][0-9A-Z]? [0-9][ABD-HJLNP-UW-Z]{2}&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="[A-Z]{1,2}[0-9R][0-9A-Z]? [0-9][ABD-HJLNP-UW-Z]{2}" RegexOption="IgnoreCase, Compiled" Result="[ieOwnerPostCode]" />
            <Assign DisplayName="Assign PostCode to String" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_460">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strPostCode]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[ieOwnerPostCode(0).Value]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Remove Postcode from Address String" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_461">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strOwnerAdress]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strOwnerAdress.Replace(strPostCode,"")]</InArgument>
              </Assign.Value>
            </Assign>
            <Sequence DisplayName="Split Owner Address" sap:VirtualizedContainerService.HintSize="434,452" sap2010:WorkflowViewState.IdRef="Sequence_238">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign Address Line 1 to String" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_462">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strAddressLine1]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[strOwnerAdress.Split(","c)(0)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign Town to String" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_463">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strTown]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[strOwnerAdress.Split(","c)(1)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign County to String" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_464">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strCounty]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[strOwnerAdress.Split(","c)(2)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign Address Line 2 to Nothing" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_465">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strAddressLine2]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </Sequence>
          <Sequence DisplayName="Get Owner Country" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_240">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerCountry" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Matches BuilderPattern="Do you live in England or Wales\?(England|Wales)" DisplayName="Get Owner Country" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_101" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Do you live in England or Wales\\?(England|Wales)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Do you live in England or Wales\?(England|Wales)" RegexOption="IgnoreCase, Compiled" Result="[ieOwnerCountry]" />
            <Assign DisplayName="Assign Owner County to String" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_466">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strOwnerCountry]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[ieOwnerCountry(0).value]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Remove Question from str" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_467">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strOwnerCountry]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strOwnerCountry.Replace("Do you live in England or Wales?","").Trim]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <Sequence DisplayName="Get Owner DoB" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_243">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerDoB" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Matches BuilderPattern="\b(?:0[1-9]|[12][0-9]|3[01])[\/\-](0[1-9]|1[0-2])[\/\-]\d{4}\b" DisplayName="Get Owner DoB" sap:VirtualizedContainerService.HintSize="526,59" sap2010:WorkflowViewState.IdRef="Matches_102" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;\\b(?:0[1-9]|[12][0-9]|3[01])[\\\/\\-](0[1-9]|1[0-2])[\\\/\\-]\\d{4}\\b&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="\b(?:0[1-9]|[12][0-9]|3[01])[\/\-](0[1-9]|1[0-2])[\/\-]\d{4}\b" RegexOption="IgnoreCase, Compiled" Result="[ieOwnerDoB]" />
            <Assign DisplayName="Assign Owner DoB to String" sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_468">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strOwnerDoB]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[ieOwnerDoB(0).value]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Trim Owner DoB" sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_796">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strOwnerDoB]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strOwnerDoB.Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <Sequence DisplayName="Check Whether Own is Over 16" sap:VirtualizedContainerService.HintSize="526,1104" sap2010:WorkflowViewState.IdRef="Sequence_242">
              <Sequence.Variables>
                <Variable x:TypeArguments="s:DateTime" Name="currentDate" />
                <Variable x:TypeArguments="s:DateTime" Name="dateOfBirth" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign Date of Birth to DateTime" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_469">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:DateTime">[dateOfBirth]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(strOwnerDoB, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign currentDate to datetime.Now" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_470">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:DateTime">[currentDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:DateTime">[datetime.Now]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[(currentDate - dateOfBirth).TotalDays / 365 &gt;= 16]" DisplayName="Check whether the Owner is over the age of 16" sap:VirtualizedContainerService.HintSize="484,812" sap2010:WorkflowViewState.IdRef="If_56">
                <If.Else>
                  <Sequence DisplayName="Owner Under 16" sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_241">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign Follow Up Needed to Yes" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_471">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog1]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Yes</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign Follow Up Reason" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_472">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog1]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Owner is under 16 years</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign Cert Needed to No" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_473">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">No</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign Cert Sent to No" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_474">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">No</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_807">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Reason1]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">The owner is under 16 years of age. </InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign Application Status to Hard Fail" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_475">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </Sequence>
          <Sequence DisplayName="Get Owner Phone Number" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_244">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerPhoneNumber" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Matches BuilderPattern="(?&lt;=What’s your phone number\?)\D*(?:\+?\d{1,4}[-\s]?)?(?:\(\d{1,}\)[-.\s]?)?\d{1,}[-.\s]?\d{1,}[-.\s]?\d{1,}\b" DisplayName="Get Owner Phone Number" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_103" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=What’s your phone number\\?)\\D*(?:\\+?\\d{1,4}[-\\s]?)?(?:\\(\\d{1,}\\)[-.\\s]?)?\\d{1,}[-.\\s]?\\d{1,}[-.\\s]?\\d{1,}\\b&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?&lt;=What’s your phone number\?)\D*(?:\+?\d{1,4}[-\s]?)?(?:\(\d{1,}\)[-.\s]?)?\d{1,}[-.\s]?\d{1,}[-.\s]?\d{1,}\b" RegexOption="IgnoreCase, Compiled" Result="[ieOwnerPhoneNumber]" />
            <Assign DisplayName="Assign Owner Number to String" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_476">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strOwnerPhoneNumber]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[ieOwnerPhoneNumber(0).value]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_797">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strOwnerPhoneNumber]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strOwnerPhoneNumber.Trim]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <Sequence DisplayName="Get Owner Email Address" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_245">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerEmailAddress" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Get Owner Number" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_477">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strOwnerEmailAddress]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strEmailBody, "What’s your email address\?(.*?)(?=\s+What’s your)").Groups(1).Value.Trim()]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </Sequence>
        <Sequence DisplayName="Get Dog 1 information" sap:VirtualizedContainerService.HintSize="1908,3778" sap2010:WorkflowViewState.IdRef="Sequence_277">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Set Follow up Needed to No" sap:VirtualizedContainerService.HintSize="568,60" sap2010:WorkflowViewState.IdRef="Assign_783">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog1]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">No</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Set Follow Up Reason for N/A" sap:VirtualizedContainerService.HintSize="568,60" sap2010:WorkflowViewState.IdRef="Assign_784">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog1]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">N/A</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign Cert Needed to Yes" sap:VirtualizedContainerService.HintSize="568,60" sap2010:WorkflowViewState.IdRef="Assign_785">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">Yes</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign Cert Needed to No" sap:VirtualizedContainerService.HintSize="568,60" sap2010:WorkflowViewState.IdRef="Assign_786">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">Yes</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign Application Status to Passed" sap:VirtualizedContainerService.HintSize="568,60" sap2010:WorkflowViewState.IdRef="Assign_787">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">Passed</InArgument>
            </Assign.Value>
          </Assign>
          <Sequence DisplayName="Get Dog Name" sap:VirtualizedContainerService.HintSize="568,68" sap2010:WorkflowViewState.IdRef="Sequence_247">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1Name" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Matches BuilderPattern="(?&lt;=What’s your dog’s name\?)(.*?)(?=\bWhat’s your dog’s date of birth\?)" DisplayName="Get Dog Name" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_104" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=What’s your dog’s name\\?)(.*?)(?=\\bWhat’s your dog’s date of birth\\?)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?&lt;=What’s your dog’s name\?)(.*?)(?=\bWhat’s your dog’s date of birth\?)" RegexOption="IgnoreCase, Compiled" Result="[ieDog1Name]" />
            <Assign DisplayName="Assign ieDog1Name to Str " sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_478">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1Name]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[ieDog1Name(0).value]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Remove deadspace from str" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_479">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1Name]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strDog1Name.Replace(Environment.NewLine, String.Empty)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Remove What's your dogs name? from str" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_480">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1Name]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strDog1Name.Replace("What’s your dog’s name?","").Trim]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <Sequence DisplayName="Get Dog DoB" sap:VirtualizedContainerService.HintSize="568,68" sap2010:WorkflowViewState.IdRef="Sequence_250">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1DoB" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Matches BuilderPattern="What’s your dog’s date of birth\?\s*(\d{2}/\d{2}/\d{4})" DisplayName="Get Dog DoB ieDog1DoB" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_105" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s your dog’s date of birth\\?\\s*(\\d{2}\/\\d{2}\/\\d{4})&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s your dog’s date of birth\?\s*(\d{2}/\d{2}/\d{4})" RegexOption="IgnoreCase, Compiled" Result="[ieDog1DoB]" />
            <Assign DisplayName="Assign ieDog1DoB to String" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_481">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1DoB]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[ieDog1DoB(0).value]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Remove Deadspace from strDog1DoB" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_482">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1DoB]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strDog1DoB.Replace(Environment.NewLine, String.Empty)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Replace Un-needed text from strDog1DoB" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_483">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1DoB]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strDog1DoB.Replace("What’s your dog’s date of birth?","").Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <Sequence DisplayName="Check Dogs DoB is not in the future" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Sequence_249">
              <Sequence.Variables>
                <Variable x:TypeArguments="s:DateTime" Name="currentDate" />
                <Variable x:TypeArguments="s:DateTime" Name="dateOfBirth" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign currentDate to todays day" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_484">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:DateTime">[currentDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:DateTime">[DateTime.Now]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign Dogs Date of Birth to the correct format" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_485">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:DateTime">[dateOfBirth]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(strDog1DoB, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[dateOfBirth &gt; currentDate]" DisplayName="Check whether the Dogs DOB is in the furture" sap:VirtualizedContainerService.HintSize="262,52" sap2010:WorkflowViewState.IdRef="If_57">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_248">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign strFollowUpNeeded to Yes" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_486">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog1]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Yes</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign strFollowUpReason to &quot;Dogs Date of Birth in Future&quot;" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_487">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog1]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Dog DOB is in future</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign steCertNeeded to No" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_488">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">No</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign strCertSent to No" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_489">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">No</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_808">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Reason2]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">["The dog’s date of birth is in the future. "]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign Application status to Hard Fail" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_490">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
          </Sequence>
          <Sequence DisplayName="Get Dog Colour" sap:VirtualizedContainerService.HintSize="568,68" sap2010:WorkflowViewState.IdRef="Sequence_251">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1Colour" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Matches BuilderPattern="What colour is your dog\?\s*([A-Za-z\s/]+)" DisplayName="Get Dog Colour " sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_106" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What colour is your dog\\?\\s*([A-Za-z\\s\/]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What colour is your dog\?\s*([A-Za-z\s/]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog1Colour]" />
            <Assign DisplayName="Assign iDog1Colour to strDog1Colour" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_491">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1Colour]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[ieDog1Colour(0).value]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Remove Deadspace from strDog1Colour" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_492">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1Colour]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strDog1Colour.Replace(Environment.NewLine, String.Empty)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Remove &quot;What colour is your dog?&quot; from strDog1Colour" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_493">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1Colour]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strDog1Colour.Replace("What colour is your dog?","")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Remove &quot;What sex is your dog?&quot; from strDog1Colour" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_494">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1Colour]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strDog1Colour.Replace(" What sex is your dog","").Trim]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <Sequence DisplayName="Get Dog Gender" sap:VirtualizedContainerService.HintSize="568,68" sap2010:WorkflowViewState.IdRef="Sequence_252">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1Gender" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Matches BuilderPattern="What sex is your dog\?\s*([A-Za-z]+)" DisplayName="Get Dog 1 Gender" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_107" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What sex is your dog\\?\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What sex is your dog\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog1Gender]" />
            <Assign DisplayName="Assign ieDog1Gender to strDog1Gender" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_495">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1Gender]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[ieDog1Gender(0).value]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Remove dead space from strDog1Gender" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_496">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1Gender]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strDog1Gender.Replace(Environment.NewLine, String.Empty)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Remove question from strDog1Gender" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_497">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1Gender]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strDog1Gender.Replace("What sex is your dog?","").Trim]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <Sequence DisplayName="Get whether Dog is Neutered" sap:VirtualizedContainerService.HintSize="568,68" sap2010:WorkflowViewState.IdRef="Sequence_253">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1Neutered" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Matches BuilderPattern="Is your dog neutered\?\s*(Yes|No|I'm not sure)" DisplayName="Get whether Dog is Neutered " sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_108" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Is your dog neutered\\?\\s*(Yes|No|I'm not sure)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Is your dog neutered\?\s*(Yes|No|I'm not sure)" RegexOption="IgnoreCase, Compiled" Result="[ieDog1Neutered]" />
            <Assign DisplayName="Assign Enumberable to String" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_498">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1Neutered]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[ieDog1Neutered(0).value]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Replace any new lines from string" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_499">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1Neutered]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strDog1Neutered.Replace(Environment.NewLine, String.Empty)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Remove Whitespace" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_500">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1Neutered]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strDog1Neutered.Replace("Is your dog neutered?","").Trim]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <Sequence DisplayName="Get the Date that the insurance started" sap:VirtualizedContainerService.HintSize="568,1495" sap2010:WorkflowViewState.IdRef="Sequence_256">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieInsuranceStartDate" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Matches BuilderPattern="When does your insurance policy start\?(\d{2}/\d{2}/\d{4})" DisplayName="Get Date Insurance starts" sap:VirtualizedContainerService.HintSize="526,59" sap2010:WorkflowViewState.IdRef="Matches_109" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;When does your insurance policy start\\?(\\d{2}\/\\d{2}\/\\d{4})&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="When does your insurance policy start\?(\d{2}/\d{2}/\d{4})" RegexOption="IgnoreCase, Compiled" Result="[ieInsuranceStartDate]" />
            <Assign DisplayName="Assign enumable to string" sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_501">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1InsuranceStartDate]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[ieInsuranceStartDate(0).value]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Remove unwanted text from string" sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_502">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1InsuranceStartDate]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strDog1InsuranceStartDate.replace("When does your insurance policy start?","").Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <Sequence DisplayName="Check when the insurance starts" sap:VirtualizedContainerService.HintSize="526,1104" sap2010:WorkflowViewState.IdRef="Sequence_255">
              <Sequence.Variables>
                <Variable x:TypeArguments="s:DateTime" Name="dateInsuranceStartDate" />
                <Variable x:TypeArguments="s:DateTime" Name="dateComparisonDate" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Get insurance start date" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_503">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:DateTime">[dateInsuranceStartDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(strDog1InsuranceStartDate, "dd/MM/yyyy", CultureInfo.InvariantCulture)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign comparrison date to the 01st Feb" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_504">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:DateTime">[dateComparisonDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:DateTime">[new DateTime(2024, 2, 1)]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[(dateInsuranceStartDate &lt;= dateComparisonDate)]" DisplayName="If the insurance date is after the 1st Feb" sap:VirtualizedContainerService.HintSize="484,812" sap2010:WorkflowViewState.IdRef="If_58">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_254">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_505">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog1]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Yes</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_506">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog1]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Insurance start date is after 1st Feb</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_507">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">No</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_508">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">No</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_809">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Reason3]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">The start date of your insurance is later than 1st February 2024. Third Party Liability insurance cover must start no later than 1st February 2024.</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_509">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </Sequence>
          <Sequence DisplayName="Get Whether Dog Is Microchipped" sap:VirtualizedContainerService.HintSize="568,451" sap2010:WorkflowViewState.IdRef="Sequence_262">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1MicroChipped" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Matches BuilderPattern="Is your dog microchipped\?\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_111" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Is your dog microchipped\\?\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Is your dog microchipped\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog1MicroChipped]" />
            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_531">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1MicroChipped]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[ieDog1MicroChipped(0).value]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_532">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1MicroChipped]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strDog1MicroChipped.Replace(Environment.NewLine, String.Empty)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_533">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDog1MicroChipped]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strDog1MicroChipped.Replace("Is your dog microchipped?","").Trim]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <If Condition="[strDog1MicroChipped.ToLower.Contains(&quot;yes&quot;)]" DisplayName="Check Length of MIcrochip number" sap:VirtualizedContainerService.HintSize="568,52" sap2010:WorkflowViewState.IdRef="If_62">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Get Dog 1 Microchip Number" sap:VirtualizedContainerService.HintSize="1139,1555" sap2010:WorkflowViewState.IdRef="Sequence_265">
                <Sequence.Variables>
                  <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1MicrochipNumber" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:Matches BuilderPattern="What’s the microchip number\?([\s\S]*?)When does your insurance policy start\?" sap:VirtualizedContainerService.HintSize="1097,59" sap2010:WorkflowViewState.IdRef="Matches_112" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s the microchip number\\?([\\s\\S]*?)When does your insurance policy start\\?&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s the microchip number\?([\s\S]*?)When does your insurance policy start\?" RegexOption="IgnoreCase, Compiled" Result="[ieDog1MicrochipNumber]" />
                <Assign sap:VirtualizedContainerService.HintSize="1097,60" sap2010:WorkflowViewState.IdRef="Assign_534">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strDog1MicroChipNumber]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[ieDog1MicrochipNumber(0).value]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="1097,60" sap2010:WorkflowViewState.IdRef="Assign_535">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strDog1MicroChipNumber]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[strDog1MicroChipNumber.Replace(Environment.NewLine, String.Empty)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="1097,60" sap2010:WorkflowViewState.IdRef="Assign_536">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strDog1MicroChipNumber]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[strDog1MicroChipNumber.Replace("What’s the microchip number?","")]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="1097,60" sap2010:WorkflowViewState.IdRef="Assign_741">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strDog1MicroChipNumber]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[strDog1MicroChipNumber.Replace("When does your insurance policy start?","").Trim]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[strDog1MicroChipNumber.Length = 15]" sap:VirtualizedContainerService.HintSize="1097,964" sap2010:WorkflowViewState.IdRef="If_61">
                  <If.Then>
                    <Sequence DisplayName="Microchip number provided" sap:VirtualizedContainerService.HintSize="526,804" sap2010:WorkflowViewState.IdRef="Sequence_263">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[out_strApplicationStatus.Contains(&quot;Hard Fail&quot;)]" sap:VirtualizedContainerService.HintSize="484,712" sap2010:WorkflowViewState.IdRef="If_84">
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_341">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_540">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Yes</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_539">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Yes</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_538">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog1]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_537">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog1]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">No</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_541">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Passed</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Flag that Microchip not provided" sap:VirtualizedContainerService.HintSize="526,804" sap2010:WorkflowViewState.IdRef="Sequence_264">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[out_strApplicationStatus.Contains(&quot;Hard Fail&quot;)]" sap:VirtualizedContainerService.HintSize="484,712" sap2010:WorkflowViewState.IdRef="If_85">
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_342">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_545">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Yes</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_544">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Yes</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_543">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog1]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["Microchip lengh is: " + strDog1MicroChipNumber.Length.ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_542">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog1]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Yes</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_724">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Soft Fail</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Flag that Microchip not provided" sap:VirtualizedContainerService.HintSize="526,804" sap2010:WorkflowViewState.IdRef="Sequence_266">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[out_strApplicationStatus.Contains(&quot;Hard Fail&quot;)]" sap:VirtualizedContainerService.HintSize="484,712" sap2010:WorkflowViewState.IdRef="If_83">
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_343">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_551">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Soft Fail</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_547">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog1]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Yes</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_548">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog1]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Microchip Number no provided</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_549">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Yes</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_550">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Yes</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Else>
          </If>
          <TryCatch DisplayName="Try getting Payment Ref for Dog 1" sap:VirtualizedContainerService.HintSize="568,300" sap2010:WorkflowViewState.IdRef="TryCatch_19">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <Sequence DisplayName="Get Payment Ref" sap:VirtualizedContainerService.HintSize="1246,2520" sap2010:WorkflowViewState.IdRef="Sequence_260">
                <Sequence.Variables>
                  <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1PaymentRef" />
                  <Variable x:TypeArguments="x:String" Name="strResponse" />
                  <Variable x:TypeArguments="x:Int32" Name="intStatusCode" />
                  <Variable x:TypeArguments="sd1:DataTable" Name="dtPayment1Check" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:Matches BuilderPattern="\bWhat’s your payment reference number\?\s*([A-Za-z0-9]{10}|[A-Za-z0-9]{3}\s*[A-Za-z0-9]{4}\s*[A-Za-z0-9]{3})\s*Is your dog neutered\?" sap:VirtualizedContainerService.HintSize="1204,59" sap2010:WorkflowViewState.IdRef="Matches_110" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;\\bWhat’s your payment reference number\\?\\s*([A-Za-z0-9]{10}|[A-Za-z0-9]{3}\\s*[A-Za-z0-9]{4}\\s*[A-Za-z0-9]{3})\\s*Is your dog neutered\\?&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="\bWhat’s your payment reference number\?\s*([A-Za-z0-9]{10}|[A-Za-z0-9]{3}\s*[A-Za-z0-9]{4}\s*[A-Za-z0-9]{3})\s*Is your dog neutered\?" RegexOption="IgnoreCase, Compiled" Result="[ieDog1PaymentRef]" />
                <Assign sap:VirtualizedContainerService.HintSize="1204,60" sap2010:WorkflowViewState.IdRef="Assign_510">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strDog1PaymentRef]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[ieDog1PaymentRef(0).value]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="1204,60" sap2010:WorkflowViewState.IdRef="Assign_511">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strDog1PaymentRef]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[strDog1PaymentRef.Replace("What’s your payment reference number?","")]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="1204,60" sap2010:WorkflowViewState.IdRef="Assign_744">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strDog1PaymentRef]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[strDog1PaymentRef.Replace("Is your dog neutered?","").ToString.Trim]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="1204,60" sap2010:WorkflowViewState.IdRef="Assign_773">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strDog1PaymentRef]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[strDog1PaymentRef.Replace(" ","").ToString.ToUpper.ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:FilterDataTable DataTable="[dtCheckDataBase]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1204,162" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dtPayment1Check]" SelectColumnsMode="Keep">
                  <ui:FilterDataTable.Filters>
                    <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                      <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                        <ui:FilterOperationArgument.Column>
                          <InArgument x:TypeArguments="x:String">["Payment Ref Number"]</InArgument>
                        </ui:FilterOperationArgument.Column>
                        <ui:FilterOperationArgument.Operand>
                          <InArgument x:TypeArguments="x:String">[strDog1PaymentRef]</InArgument>
                        </ui:FilterOperationArgument.Operand>
                      </ui:FilterOperationArgument>
                    </scg:List>
                  </ui:FilterDataTable.Filters>
                  <ui:FilterDataTable.SelectColumns>
                    <scg:List x:TypeArguments="InArgument" Capacity="4">
                      <x:Null />
                    </scg:List>
                  </ui:FilterDataTable.SelectColumns>
                </ui:FilterDataTable>
                <If Condition="[dtPayment1Check.RowCount &gt; 0]" sap:VirtualizedContainerService.HintSize="1204,1727" sap2010:WorkflowViewState.IdRef="If_94">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_396">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_748">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog1]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Yes</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_749">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog1]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Payment ref is a duplicate</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_750">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">No</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_751">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">No</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_810">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Reason4]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["The payment reference you provided has already been used for another application for exemption."]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_752">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="855,1567" sap2010:WorkflowViewState.IdRef="Sequence_397">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="813,62" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[strDog1PaymentRef]" />
                      <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" AuthenticationType="None" BodyFormat="application/xml" DisplayName="HTTP Request" EnableSSLVerification="True" EndPoint="https://publicapi.payments.service.gov.uk/v1/payments" sap:VirtualizedContainerService.HintSize="813,70" sap2010:WorkflowViewState.IdRef="HttpClient_4" Method="GET" Result="[strResponse]" StatusCode="[intStatusCode]" TimeoutMS="6000">
                        <ui:HttpClient.Attachments>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                        </ui:HttpClient.Attachments>
                        <ui:HttpClient.Cookies>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                        </ui:HttpClient.Cookies>
                        <ui:HttpClient.Headers>
                          <InArgument x:TypeArguments="x:String" x:Key="Authorization">Bearer api_live_prt60jjp6dtrhjr2lt8s9sqtqo8qrheevpmvsmdukoaia1022d4kd2182</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                        </ui:HttpClient.Headers>
                        <ui:HttpClient.Parameters>
                          <InArgument x:TypeArguments="x:String" x:Key="reference">[strDog1PaymentRef]</InArgument>
                        </ui:HttpClient.Parameters>
                        <ui:HttpClient.UrlSegments>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                        </ui:HttpClient.UrlSegments>
                      </ui:HttpClient>
                      <If Condition="[intStatusCode = 200]" sap:VirtualizedContainerService.HintSize="813,1263" sap2010:WorkflowViewState.IdRef="If_60">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="526,1103" sap2010:WorkflowViewState.IdRef="Sequence_258">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="njl:JArray" Name="arrResponse" />
                              <Variable x:TypeArguments="njl:JObject" Name="jsonObject" />
                              <Variable x:TypeArguments="x:String" Name="strTotalValue" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_4" JsonObject="[jsonObject]" JsonString="[strResponse]" />
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_512">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strTotalValue]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[jsonObject("total").ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[CInt(strTotalValue) = 1]" sap:VirtualizedContainerService.HintSize="484,812" sap2010:WorkflowViewState.IdRef="If_59">
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_257">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_514">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog1]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_515">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog1]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Payment ref does not exist</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_516">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_517">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_811">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Reason4]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">We cannot match the payment reference you provided with a valid payment in our records.</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_518">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Change to Exception" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_259">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Throw Exception="[new  ApplicationException(&quot;API Communication Error&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_19">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="Nothing" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="304,740" sap2010:WorkflowViewState.IdRef="Sequence_261">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_525">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strDog1PaymentRef]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_526">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog1]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Yes</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_527">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog1]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Payment Reference Doesnt Exist</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_528">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">No</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_529">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">No</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_822">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Reason4]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">We cannot match the payment reference you provided with a valid payment in our records.</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_530">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strOwnerCountry,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog1Name,strDog1DoB,strDog1Colour,strDog1Gender,strDog1InsuranceStartDate,strDog1PaymentRef,strDog1Neutered,strDog1MicroChipped,strDog1MicroChipNumber,strFollowUpNeededDog1,strFollowUpReasonDog1,strIndexNumber,strCertNeeded,strCertSent,out_strApplicationStatus,Reason1,Reason2,Reason3,Reason4}]" DataTable="[dtCurrentEmail]" DisplayName="Add Data Row to Current Email" sap:VirtualizedContainerService.HintSize="568,188" sap2010:WorkflowViewState.IdRef="AddDataRow_75" />
        </Sequence>
        <If Condition="[strEmailBody.ToLower.Contains(&quot;second dog&quot;)]" DisplayName="If the Owner has a second dog" sap:VirtualizedContainerService.HintSize="1908,17494" sap2010:WorkflowViewState.IdRef="If_72">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="1872,17304" sap2010:WorkflowViewState.IdRef="Sequence_393">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Get Dog 2 information" sap:VirtualizedContainerService.HintSize="1830,8104" sap2010:WorkflowViewState.IdRef="Sequence_299">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MultipleAssign DisplayName="Reset Variables" sap:VirtualizedContainerService.HintSize="1710,317" sap2010:WorkflowViewState.IdRef="MultipleAssign_11">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_138">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog2]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">No</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_139">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog2]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">N/A</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_140">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[strCertNeededDog2]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">Yes</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_141">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[strCertSentDog2]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">Yes</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_142">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">Passed</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_144">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[Reason2]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_145">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[Reason3]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_146">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[Reason4]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
                <Sequence DisplayName="Get Dog 2 Name" sap:VirtualizedContainerService.HintSize="1710,68" sap2010:WorkflowViewState.IdRef="Sequence_278">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2Name" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="(?&lt;=What’s the name of your second dog\?)(.*?)(?=\bWhat’s the date of birth for your second dog\?)" DisplayName="Get Dog Name" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_113" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=What’s the name of your second dog\\?)(.*?)(?=\\bWhat’s the date of birth for your second dog\\?)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?&lt;=What’s the name of your second dog\?)(.*?)(?=\bWhat’s the date of birth for your second dog\?)" RegexOption="IgnoreCase, Compiled" Result="[ieDog2Name]" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_554">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2Name]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieDog2Name(0).value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_555">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2Name]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog2Name.Replace(Environment.NewLine, String.Empty)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_556">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2Name]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog2Name.Replace("What’s the name of your second dog?","").Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence DisplayName="Get Dog DoB" sap:VirtualizedContainerService.HintSize="1710,1625" sap2010:WorkflowViewState.IdRef="Sequence_281">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2DoB" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="What’s the date of birth for your second dog\?\s*(\d{2}/\d{2}/\d{4})" sap:VirtualizedContainerService.HintSize="526,59" sap2010:WorkflowViewState.IdRef="Matches_114" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s the date of birth for your second dog\\?\\s*(\\d{2}\/\\d{2}\/\\d{4})&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s the date of birth for your second dog\?\s*(\d{2}/\d{2}/\d{4})" RegexOption="IgnoreCase, Compiled" Result="[ieDog2DoB]" />
                  <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_557">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2DoB]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieDog2DoB(0).value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_558">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2DoB]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog2DoB.Replace(Environment.NewLine, String.Empty)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_559">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2DoB]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog2DoB.Replace("What’s the date of birth for your second dog?","").Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Sequence DisplayName="Check Dogs DoB is not in the future" sap:VirtualizedContainerService.HintSize="526,1134" sap2010:WorkflowViewState.IdRef="Sequence_280">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="s:DateTime" Name="currentDate" />
                      <Variable x:TypeArguments="s:DateTime" Name="dateOfBirth" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_560">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:DateTime">[currentDate]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:DateTime">[DateTime.Now]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_561">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:DateTime">[dateOfBirth]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(strDog2DoB, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[dateOfBirth &gt; currentDate]" sap:VirtualizedContainerService.HintSize="484,842" sap2010:WorkflowViewState.IdRef="If_65">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_279">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_562">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog2]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Yes</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_563">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog2]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Dog DOB is in future</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_564">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strCertNeededDog2]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">No</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_565">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strCertSentDog2]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">No</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_812">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[Reason2]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">["The dog’s date of birth is in the future. "]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_566">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                </Sequence>
                <Sequence DisplayName="Get Dog Colour" sap:VirtualizedContainerService.HintSize="1710,551" sap2010:WorkflowViewState.IdRef="Sequence_282">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2Colour" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="What colour is your second dog\?\s*([A-Za-z\s/]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_115" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What colour is your second dog\\?\\s*([A-Za-z\\s\/]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What colour is your second dog\?\s*([A-Za-z\s/]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog2Colour]" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_567">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2Colour]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieDog2Colour(0).value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_568">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2Colour]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog2Colour.Replace(Environment.NewLine, String.Empty)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_569">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2Colour]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog2Colour.Replace("What colour is your second dog?","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_570">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2Colour]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog2Colour.Replace("What sex is your second dog","").Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence DisplayName="Get Dog Gender" sap:VirtualizedContainerService.HintSize="1710,451" sap2010:WorkflowViewState.IdRef="Sequence_283">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2Gender" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="What sex is your second dog\?\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_116" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What sex is your second dog\\?\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What sex is your second dog\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog2Gender]" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_571">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2Gender]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieDog2Gender(0).value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_572">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2Gender]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog2Gender.Replace(Environment.NewLine, String.Empty)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_573">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2Gender]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog2Gender.Replace("What sex is your second dog?","").Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence DisplayName="Get whether Dog is Neutered" sap:VirtualizedContainerService.HintSize="1710,451" sap2010:WorkflowViewState.IdRef="Sequence_284">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2Neutered" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="Is your second dog neutered\?\s*(Yes|No|I'm not sure)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_117" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Is your second dog neutered\\?\\s*(Yes|No|I'm not sure)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Is your second dog neutered\?\s*(Yes|No|I'm not sure)" RegexOption="IgnoreCase, Compiled" Result="[ieDog2Neutered]" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_574">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2Neutered]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieDog2Neutered(0).value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_575">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2Neutered]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog2Neutered.Replace(Environment.NewLine, String.Empty)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_576">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2Neutered]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog2Neutered.Replace("Is your second dog neutered?","").Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence DisplayName="Get the Date that the insurance started" sap:VirtualizedContainerService.HintSize="1710,1495" sap2010:WorkflowViewState.IdRef="Sequence_287">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieInsuranceStartDate" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="When does your insurance policy start for the second dog\?(\d{2}/\d{2}/\d{4})" sap:VirtualizedContainerService.HintSize="526,59" sap2010:WorkflowViewState.IdRef="Matches_118" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;When does your insurance policy start for the second dog\\?(\\d{2}\/\\d{2}\/\\d{4})&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="When does your insurance policy start for the second dog\?(\d{2}/\d{2}/\d{4})" RegexOption="IgnoreCase, Compiled" Result="[ieInsuranceStartDate]" />
                  <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_577">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2InsuranceStartDate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieInsuranceStartDate(0).value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_578">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2InsuranceStartDate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog2InsuranceStartDate.replace("When does your insurance policy start for the second dog?","").Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Sequence DisplayName="Check when the insurance starts" sap:VirtualizedContainerService.HintSize="526,1104" sap2010:WorkflowViewState.IdRef="Sequence_286">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="s:DateTime" Name="dateInsuranceStartDate" />
                      <Variable x:TypeArguments="s:DateTime" Name="dateComparisonDate" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_579">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:DateTime">[dateInsuranceStartDate]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(strDog2InsuranceStartDate, "dd/MM/yyyy", CultureInfo.InvariantCulture)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_580">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:DateTime">[dateComparisonDate]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:DateTime">[new DateTime(2024, 2, 1)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[(dateInsuranceStartDate &lt;= dateComparisonDate)]" DisplayName="If the insurance date is after the 1st Feb" sap:VirtualizedContainerService.HintSize="484,812" sap2010:WorkflowViewState.IdRef="If_66">
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_285">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_581">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog2]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Yes</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_582">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog2]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Insurance start date is after 1st Feb</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_583">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strCertNeededDog2]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">No</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_584">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strCertSentDog2]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">No</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_813">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[Reason3]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">The start date of your insurance is later than 1st February 2024. Third Party Liability insurance cover must start no later than 1st February 2024.</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_585">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </Sequence>
                <TryCatch DisplayName="Try getting Payment Ref for Dog 2" sap:VirtualizedContainerService.HintSize="1710,300" sap2010:WorkflowViewState.IdRef="TryCatch_20">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <Sequence DisplayName="Get Payment Ref" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_291">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1PaymentRef" />
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2PaymentRef" />
                        <Variable x:TypeArguments="x:String" Name="strResponse" />
                        <Variable x:TypeArguments="x:Int32" Name="intStatusCode" />
                        <Variable x:TypeArguments="sd1:DataTable" Name="dtPayment2Check" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="\bWhat’s your payment reference number for the second dog\?\s*([A-Za-z0-9]{10}|[A-Za-z0-9]{3}\s*[A-Za-z0-9]{4}\s*[A-Za-z0-9]{3})\s*Is your second dog neutered\?" sap:VirtualizedContainerService.HintSize="1308,59" sap2010:WorkflowViewState.IdRef="Matches_119" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;\\bWhat’s your payment reference number for the second dog\\?\\s*([A-Za-z0-9]{10}|[A-Za-z0-9]{3}\\s*[A-Za-z0-9]{4}\\s*[A-Za-z0-9]{3})\\s*Is your second dog neutered\\?&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="\bWhat’s your payment reference number for the second dog\?\s*([A-Za-z0-9]{10}|[A-Za-z0-9]{3}\s*[A-Za-z0-9]{4}\s*[A-Za-z0-9]{3})\s*Is your second dog neutered\?" RegexOption="IgnoreCase, Compiled" Result="[ieDog2PaymentRef]" />
                      <Assign sap:VirtualizedContainerService.HintSize="1308,60" sap2010:WorkflowViewState.IdRef="Assign_586">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2PaymentRef]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog2PaymentRef(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="1308,60" sap2010:WorkflowViewState.IdRef="Assign_587">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2PaymentRef]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog2PaymentRef.Replace("What’s your payment reference number for the second dog?","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="1308,60" sap2010:WorkflowViewState.IdRef="Assign_745">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2PaymentRef]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog2PaymentRef.Replace("Is your second dog neutered?","".ToString)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="1308,60" sap2010:WorkflowViewState.IdRef="Assign_774">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2PaymentRef]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog2PaymentRef.Replace(" ","".ToString).ToUpper.Trim]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:FilterDataTable DataTable="[dtCheckDataBase]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1308,162" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[dtPayment2Check]" SelectColumnsMode="Keep">
                        <ui:FilterDataTable.Filters>
                          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                            <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                              <ui:FilterOperationArgument.Column>
                                <InArgument x:TypeArguments="x:String">["Payment Ref Number"]</InArgument>
                              </ui:FilterOperationArgument.Column>
                              <ui:FilterOperationArgument.Operand>
                                <InArgument x:TypeArguments="x:String">[strDog2PaymentRef]</InArgument>
                              </ui:FilterOperationArgument.Operand>
                            </ui:FilterOperationArgument>
                          </scg:List>
                        </ui:FilterDataTable.Filters>
                        <ui:FilterDataTable.SelectColumns>
                          <scg:List x:TypeArguments="InArgument" Capacity="4">
                            <x:Null />
                          </scg:List>
                        </ui:FilterDataTable.SelectColumns>
                      </ui:FilterDataTable>
                      <If Condition="[dtPayment2Check.RowCount &gt; 0]" sap:VirtualizedContainerService.HintSize="1308,1625" sap2010:WorkflowViewState.IdRef="If_96">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="346,744" sap2010:WorkflowViewState.IdRef="Sequence_401">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_403">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_758">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog2]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_759">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog2]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Payment ref is a duplicate</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_760">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strCertNeededDog2]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">No</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_761">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strCertSentDog2]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">No</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_814">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[Reason4]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">The payment reference you provided has already been used for another application for exemption.</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_762">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="917,1465" sap2010:WorkflowViewState.IdRef="Sequence_402">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" AuthenticationType="None" BodyFormat="application/xml" DisplayName="Private: HTTP Request" EnableSSLVerification="True" EndPoint="https://publicapi.payments.service.gov.uk/v1/payments" sap:VirtualizedContainerService.HintSize="875,70" sap2010:WorkflowViewState.IdRef="HttpClient_7" Method="GET" Result="[strResponse]" StatusCode="[intStatusCode]" TimeoutMS="6000">
                              <ui:HttpClient.Attachments>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </ui:HttpClient.Attachments>
                              <ui:HttpClient.Cookies>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </ui:HttpClient.Cookies>
                              <ui:HttpClient.Headers>
                                <InArgument x:TypeArguments="x:String" x:Key="Authorization">Bearer api_live_prt60jjp6dtrhjr2lt8s9sqtqo8qrheevpmvsmdukoaia1022d4kd2182</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                              </ui:HttpClient.Headers>
                              <ui:HttpClient.Parameters>
                                <InArgument x:TypeArguments="x:String" x:Key="reference">HK5EGV3A8Q</InArgument>
                              </ui:HttpClient.Parameters>
                              <ui:HttpClient.UrlSegments>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </ui:HttpClient.UrlSegments>
                            </ui:HttpClient>
                            <If Condition="[intStatusCode = 200]" sap:VirtualizedContainerService.HintSize="875,1263" sap2010:WorkflowViewState.IdRef="If_68">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="526,1103" sap2010:WorkflowViewState.IdRef="Sequence_289">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="njl:JArray" Name="arrResponse" />
                                    <Variable x:TypeArguments="njl:JObject" Name="jsonObject" />
                                    <Variable x:TypeArguments="x:String" Name="totalValue" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_5" JsonObject="[jsonObject]" JsonString="[strResponse]" />
                                  <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_588">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[totalValue]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[jsonObject("total").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If Condition="[CInt(totalValue) = 1]" sap:VirtualizedContainerService.HintSize="484,812" sap2010:WorkflowViewState.IdRef="If_67">
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_288">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_590">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog2]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_591">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog2]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Payment ref does not exist</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_592">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strCertNeededDog2]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">No</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_593">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strCertSentDog2]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">No</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_815">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[Reason4]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">["We cannot match the payment reference you provided with a valid payment in our records."]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_594">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_290">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_596">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog2]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_597">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog2]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Payment ref does not exist</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_598">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertNeededDog2]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_599">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertSentDog2]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_816">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Reason4]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">["We cannot match the payment reference you provided with a valid payment in our records."]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_600">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_20">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="Nothing" />
                        </ActivityAction.Argument>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,738" sap2010:WorkflowViewState.IdRef="Sequence_292">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_601">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2PaymentRef]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_602">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog2]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Yes</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_603">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog2]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Payment Reference Doesnt Exist</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_604">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strCertNeededDog2]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">No</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_605">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strCertSentDog2]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">No</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_823">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[Reason4]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">We cannot match the payment reference you provided with a valid payment in our records.</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_606">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
                <Sequence DisplayName="Get Whether Dog Is Microchipped" sap:VirtualizedContainerService.HintSize="1710,451" sap2010:WorkflowViewState.IdRef="Sequence_293">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2MicroChipped" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="Is your second dog microchipped\?\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_120" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Is your second dog microchipped\\?\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Is your second dog microchipped\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog2MicroChipped]" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_607">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2MicroChipped]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ieDog2MicroChipped(0).value]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_608">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2MicroChipped]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog2MicroChipped.Replace(Environment.NewLine, String.Empty)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_609">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDog2MicroChipped]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strDog2MicroChipped.Replace("Is your second dog microchipped?","").Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <If Condition="[strDog2MicroChipped.ToLower.Contains(&quot;yes&quot;)]" DisplayName="If the Dog is Microchiped" sap:VirtualizedContainerService.HintSize="1710,1715" sap2010:WorkflowViewState.IdRef="If_70">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Get Dog 2 Microchip Number" sap:VirtualizedContainerService.HintSize="1139,1555" sap2010:WorkflowViewState.IdRef="Sequence_296">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2MicrochipNumber" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="What’s the microchip number for the second dog\?([\s\S]*?)When does your insurance policy start for the second dog\?" sap:VirtualizedContainerService.HintSize="1097,59" sap2010:WorkflowViewState.IdRef="Matches_121" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s the microchip number for the second dog\\?([\\s\\S]*?)When does your insurance policy start for the second dog\\?&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s the microchip number for the second dog\?([\s\S]*?)When does your insurance policy start for the second dog\?" RegexOption="IgnoreCase, Compiled" Result="[ieDog2MicrochipNumber]" />
                      <Assign sap:VirtualizedContainerService.HintSize="1097,60" sap2010:WorkflowViewState.IdRef="Assign_610">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2MicroChipNumber]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog2MicrochipNumber(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="1097,60" sap2010:WorkflowViewState.IdRef="Assign_611">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2MicroChipNumber]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog2MicroChipNumber.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Remove What’s the microchip number for the second dog?" sap:VirtualizedContainerService.HintSize="1097,60" sap2010:WorkflowViewState.IdRef="Assign_612">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2MicroChipNumber]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog2MicroChipNumber.Replace("What’s the microchip number for the second dog?","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Remove When does your insurance policy start for the second dog?" sap:VirtualizedContainerService.HintSize="1097,60" sap2010:WorkflowViewState.IdRef="Assign_742">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog2MicroChipNumber]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog2MicroChipNumber.Replace("When does your insurance policy start for the second dog?","").Trim]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If Condition="[strDog2MicroChipNumber.Length = 15]" sap:VirtualizedContainerService.HintSize="1097,964" sap2010:WorkflowViewState.IdRef="If_69">
                        <If.Then>
                          <Sequence DisplayName="Microchip number provided" sap:VirtualizedContainerService.HintSize="526,804" sap2010:WorkflowViewState.IdRef="Sequence_294">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[out_strApplicationStatus.Contains(&quot;Hard Fail&quot;)]" sap:VirtualizedContainerService.HintSize="484,712" sap2010:WorkflowViewState.IdRef="If_88">
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_346">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_613">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog2]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_614">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog2]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_615">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertNeededDog2]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_616">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertSentDog2]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_617">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Passed</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Flag that Microchip not provided" sap:VirtualizedContainerService.HintSize="526,804" sap2010:WorkflowViewState.IdRef="Sequence_295">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[out_strApplicationStatus.Contains(&quot;Hard Fail&quot;)]" sap:VirtualizedContainerService.HintSize="484,712" sap2010:WorkflowViewState.IdRef="If_87">
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_345">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_618">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog2]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_619">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog2]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">["Microchip lengh is: " + strDog2MicroChipNumber.Length.ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_620">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertNeededDog2]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_621">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertSentDog2]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_622">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Soft Fail</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Flag that Microchip not provided" sap:VirtualizedContainerService.HintSize="526,804" sap2010:WorkflowViewState.IdRef="Sequence_297">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[out_strApplicationStatus.Contains(&quot;Hard Fail&quot;)]" sap:VirtualizedContainerService.HintSize="484,712" sap2010:WorkflowViewState.IdRef="If_86">
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_344">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_623">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog2]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Yes</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_624">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog2]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Microchip Number no provided</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_625">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strCertNeededDog2]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Yes</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_626">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strCertSentDog2]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Yes</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_627">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Soft Fail</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strOwnerCountry,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog2Name,strDog2DoB,strDog2Colour,strDog2Gender,strDog2InsuranceStartDate,strDog2PaymentRef,strDog2Neutered,strDog2MicroChipped,strDog2MicroChipNumber,strFollowUpNeededDog2,strFollowUpReasonDog2,strIndexNumber,strCertNeededDog2,strCertSentDog2,out_strApplicationStatus,Reason1,Reason2,Reason3,Reason4}]" DataTable="[dtCurrentEmail]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="1710,188" sap2010:WorkflowViewState.IdRef="AddDataRow_63" />
              </Sequence>
              <Sequence DisplayName="Check Whether the Owner has a Third Dog" sap:VirtualizedContainerService.HintSize="1830,9068" sap2010:WorkflowViewState.IdRef="Sequence_392">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="strThirdDogOwned" />
                  <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieThirdDogOwned" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:Matches BuilderPattern="Do you want to add a third dog\?(Yes|No) " sap:VirtualizedContainerService.HintSize="1788,59" sap2010:WorkflowViewState.IdRef="Matches_131" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Do you want to add a third dog\\?(Yes|No) &quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Do you want to add a third dog\?(Yes|No) " RegexOption="IgnoreCase, Compiled" Result="[ieThirdDogOwned]" />
                <Assign sap:VirtualizedContainerService.HintSize="1788,60" sap2010:WorkflowViewState.IdRef="Assign_747">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strThirdDogOwned]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[ieThirdDogOwned(0).value]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="1788,60" sap2010:WorkflowViewState.IdRef="Assign_798">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strThirdDogOwned]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[strThirdDogOwned.Trim]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[strThirdDogOwned.ToLower.Contains(&quot;yes&quot;)]" DisplayName="If the Owner has a third" sap:VirtualizedContainerService.HintSize="1788,8677" sap2010:WorkflowViewState.IdRef="If_80">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Get Dog 3 information" sap:VirtualizedContainerService.HintSize="1752,8487" sap2010:WorkflowViewState.IdRef="Sequence_321">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="strFollowUpNeededDog3" />
                        <Variable x:TypeArguments="x:String" Name="strFollowUpReasonDog3" />
                        <Variable x:TypeArguments="x:String" Name="strCertNeededDog3" />
                        <Variable x:TypeArguments="x:String" Name="strCertSentDog3" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MultipleAssign DisplayName="Reset Dog3 Variables" sap:VirtualizedContainerService.HintSize="1710,317" sap2010:WorkflowViewState.IdRef="MultipleAssign_12">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_147">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog3]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">No</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_148">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog3]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">N/A</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_149">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[strCertNeededDog3]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">Yes</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_150">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[strCertSentDog3]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">Yes</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_151">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">Passed</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_152">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[Reason2]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_153">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[Reason3]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_154">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[Reason4]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                      </ui:MultipleAssign>
                      <Sequence DisplayName="Get Dog Name" sap:VirtualizedContainerService.HintSize="1710,451" sap2010:WorkflowViewState.IdRef="Sequence_300">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3Name" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Matches BuilderPattern="(?&lt;=What’s the name of your third dog\?)(.*?)(?=\bWhat’s the date of birth of your third dog\?)" DisplayName="Get Dog Name" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_122" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=What’s the name of your third dog\\?)(.*?)(?=\\bWhat’s the date of birth of your third dog\\?)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?&lt;=What’s the name of your third dog\?)(.*?)(?=\bWhat’s the date of birth of your third dog\?)" RegexOption="IgnoreCase, Compiled" Result="[ieDog3Name]" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_628">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3Name]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[ieDog3Name(0).value]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_629">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3Name]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strDog3Name.Replace(Environment.NewLine, String.Empty)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_630">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3Name]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strDog3Name.Replace("What’s the name of your third dog?","").Trim]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                      <Sequence DisplayName="Get Dog DoB" sap:VirtualizedContainerService.HintSize="1710,1625" sap2010:WorkflowViewState.IdRef="Sequence_303">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3DoB" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Matches BuilderPattern="What’s the date of birth of your third dog\?(\d{2}/\d{2}/\d{4})" sap:VirtualizedContainerService.HintSize="526,59" sap2010:WorkflowViewState.IdRef="Matches_123" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;What’s the date of birth of your third dog\\?(\\d{2}\/\\d{2}\/\\d{4})&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s the date of birth of your third dog\?(\d{2}/\d{2}/\d{4})" RegexOption="IgnoreCase, Compiled" Result="[ieDog3DoB]" />
                        <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_631">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3DoB]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[ieDog3DoB(0).value]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_632">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3DoB]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strDog3DoB.Replace(Environment.NewLine, String.Empty)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_633">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3DoB]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strDog3DoB.Replace("What’s the date of birth of your third dog?","").Trim]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Sequence DisplayName="Check Dogs DoB is not in the future" sap:VirtualizedContainerService.HintSize="526,1134" sap2010:WorkflowViewState.IdRef="Sequence_302">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="s:DateTime" Name="currentDate" />
                            <Variable x:TypeArguments="s:DateTime" Name="dateOfBirth" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_634">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:DateTime">[currentDate]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:DateTime">[DateTime.Now]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_635">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:DateTime">[dateOfBirth]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(strDog3DoB, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <If Condition="[dateOfBirth &gt; currentDate]" sap:VirtualizedContainerService.HintSize="484,842" sap2010:WorkflowViewState.IdRef="If_73">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_301">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_636">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog3]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_637">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog3]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Dog DOB is in future</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_638">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strCertNeededDog3]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">No</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_639">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strCertSentDog3]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">No</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_817">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[Reason2]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">The dog’s date of birth is in the future.</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_640">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </Sequence>
                      <Sequence DisplayName="Get Dog Colour" sap:VirtualizedContainerService.HintSize="1710,551" sap2010:WorkflowViewState.IdRef="Sequence_304">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3Colour" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Matches BuilderPattern="What colour is your third dog\?\s*([A-Za-z\s/]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_124" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What colour is your third dog\\?\\s*([A-Za-z\\s\/]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What colour is your third dog\?\s*([A-Za-z\s/]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog3Colour]" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_641">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3Colour]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[ieDog3Colour(0).value]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_642">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3Colour]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strDog3Colour.Replace(Environment.NewLine, String.Empty)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_643">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3Colour]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strDog3Colour.Replace("What colour is your third dog?","")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_644">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3Colour]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strDog3Colour.Replace("What sex is your third dog","").Trim]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                      <Sequence DisplayName="Get Dog Gender" sap:VirtualizedContainerService.HintSize="1710,451" sap2010:WorkflowViewState.IdRef="Sequence_305">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3Gender" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Matches BuilderPattern="What gender is your dog\?\s*\([Dd]og 3\)\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_125" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What gender is your dog\\?\\s*\\([Dd]og 3\\)\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What sex is your third dog\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog3Gender]" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_645">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3Gender]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[ieDog3Gender(0).value]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_646">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3Gender]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strDog3Gender.Replace(Environment.NewLine, String.Empty)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_647">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3Gender]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strDog3Gender.Replace("What sex is your third dog?","").Trim]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                      <Sequence DisplayName="Get the Date that the insurance started" sap:VirtualizedContainerService.HintSize="1710,1495" sap2010:WorkflowViewState.IdRef="Sequence_308">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieInsuranceStartDate" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Matches BuilderPattern="When does your insurance policy start for the third dog\?(\d{2}/\d{2}/\d{4})" sap:VirtualizedContainerService.HintSize="526,59" sap2010:WorkflowViewState.IdRef="Matches_126" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;When does your insurance policy start for the third dog\\?(\\d{2}\/\\d{2}\/\\d{4})&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="When does your insurance policy start for the third dog\?(\d{2}/\d{2}/\d{4})" RegexOption="IgnoreCase, Compiled" Result="[ieInsuranceStartDate]" />
                        <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_648">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3InsuranceStartDate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[ieInsuranceStartDate(0).value]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_649">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3InsuranceStartDate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strDog3InsuranceStartDate.replace("When does your insurance policy start for the third dog?","").Trim]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Sequence DisplayName="Check when the insurance starts" sap:VirtualizedContainerService.HintSize="526,1104" sap2010:WorkflowViewState.IdRef="Sequence_307">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="s:DateTime" Name="dateInsuranceStartDate" />
                            <Variable x:TypeArguments="s:DateTime" Name="dateComparisonDate" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_650">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:DateTime">[dateInsuranceStartDate]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(strDog3InsuranceStartDate, "dd/MM/yyyy", CultureInfo.InvariantCulture)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_651">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:DateTime">[dateComparisonDate]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:DateTime">[new DateTime(2024, 2, 1)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <If Condition="[(dateInsuranceStartDate &lt;= dateComparisonDate)]" DisplayName="If the insurance date is after the 1st Feb" sap:VirtualizedContainerService.HintSize="484,812" sap2010:WorkflowViewState.IdRef="If_74">
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_306">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_652">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog3]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_653">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog3]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Insurance start date is after 1st Feb</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_654">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strCertNeededDog3]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">No</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_655">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strCertSentDog3]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">No</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_818">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[Reason3]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">The start date of your insurance is later than 1st February 2024. Third Party Liability insurance cover must start no later than 1st February 2024.</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_656">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </Sequence>
                      <TryCatch DisplayName="Try getting Payment Ref for Dog 3" sap:VirtualizedContainerService.HintSize="1710,300" sap2010:WorkflowViewState.IdRef="TryCatch_21">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <Sequence DisplayName="Get Payment Ref" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_312">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3PaymentRef" />
                              <Variable x:TypeArguments="x:String" Name="strResponse" />
                              <Variable x:TypeArguments="x:Int32" Name="intStatusCode" />
                              <Variable x:TypeArguments="sd1:DataTable" Name="dtPayment2Check" />
                              <Variable x:TypeArguments="sd1:DataTable" Name="dtPayment3Check" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:Matches BuilderPattern="\bWhat’s your payment reference number for the third dog\?\s*([A-Za-z0-9]{10}|[A-Za-z0-9]{3}\s*[A-Za-z0-9]{4}\s*[A-Za-z0-9]{3})\s*Is your third dog neutered\?" sap:VirtualizedContainerService.HintSize="1266,59" sap2010:WorkflowViewState.IdRef="Matches_127" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;\\bWhat’s your payment reference number for the third dog\\?\\s*([A-Za-z0-9]{10}|[A-Za-z0-9]{3}\\s*[A-Za-z0-9]{4}\\s*[A-Za-z0-9]{3})\\s*Is your third dog neutered\\?&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="\bWhat’s your payment reference number for the third dog\?\s*([A-Za-z0-9]{10}|[A-Za-z0-9]{3}\s*[A-Za-z0-9]{4}\s*[A-Za-z0-9]{3})\s*Is your third dog neutered\?" RegexOption="IgnoreCase, Compiled" Result="[ieDog3PaymentRef]" />
                            <Assign sap:VirtualizedContainerService.HintSize="1266,60" sap2010:WorkflowViewState.IdRef="Assign_657">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strDog3PaymentRef]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[ieDog3PaymentRef(0).value]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="1266,60" sap2010:WorkflowViewState.IdRef="Assign_658">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strDog3PaymentRef]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[strDog3PaymentRef.Replace("What’s your payment reference number for the third dog?","")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="1266,60" sap2010:WorkflowViewState.IdRef="Assign_746">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strDog3PaymentRef]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[strDog3PaymentRef.Replace("Is your third dog neutered?","")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="1266,60" sap2010:WorkflowViewState.IdRef="Assign_775">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strDog3PaymentRef]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[strDog3PaymentRef.Replace(" ","").ToUpper.Trim]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:FilterDataTable DataTable="[dtCheckDataBase]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1266,162" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[dtPayment3Check]" SelectColumnsMode="Keep">
                              <ui:FilterDataTable.Filters>
                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                  <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                    <ui:FilterOperationArgument.Column>
                                      <InArgument x:TypeArguments="x:String">["Payment Ref Number"]</InArgument>
                                    </ui:FilterOperationArgument.Column>
                                    <ui:FilterOperationArgument.Operand>
                                      <InArgument x:TypeArguments="x:String">[strDog3PaymentRef]</InArgument>
                                    </ui:FilterOperationArgument.Operand>
                                  </ui:FilterOperationArgument>
                                </scg:List>
                              </ui:FilterDataTable.Filters>
                              <ui:FilterDataTable.SelectColumns>
                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                  <x:Null />
                                </scg:List>
                              </ui:FilterDataTable.SelectColumns>
                            </ui:FilterDataTable>
                            <If Condition="[dtPayment3Check.RowCount &gt; 0]" sap:VirtualizedContainerService.HintSize="1266,1625" sap2010:WorkflowViewState.IdRef="If_95">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_400">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_753">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog3]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_754">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog3]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">We cannot match the payment reference you provided with a valid payment in our records.</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_755">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertNeededDog3]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_756">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertSentDog3]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_819">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Reason4]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">The payment reference you provided has already been used for another application for exemption.</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_757">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="917,1465" sap2010:WorkflowViewState.IdRef="Sequence_399">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" AuthenticationType="None" BodyFormat="application/xml" DisplayName="Private: HTTP Request" EnableSSLVerification="True" EndPoint="https://publicapi.payments.service.gov.uk/v1/payments" sap:VirtualizedContainerService.HintSize="875,70" sap2010:WorkflowViewState.IdRef="HttpClient_8" Method="GET" Result="[strResponse]" StatusCode="[intStatusCode]" TimeoutMS="6000">
                                    <ui:HttpClient.Attachments>
                                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                    </ui:HttpClient.Attachments>
                                    <ui:HttpClient.Cookies>
                                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                    </ui:HttpClient.Cookies>
                                    <ui:HttpClient.Headers>
                                      <InArgument x:TypeArguments="x:String" x:Key="Authorization">Bearer api_live_prt60jjp6dtrhjr2lt8s9sqtqo8qrheevpmvsmdukoaia1022d4kd2182</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                                    </ui:HttpClient.Headers>
                                    <ui:HttpClient.Parameters>
                                      <InArgument x:TypeArguments="x:String" x:Key="reference">[strDog3PaymentRef]</InArgument>
                                    </ui:HttpClient.Parameters>
                                    <ui:HttpClient.UrlSegments>
                                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                    </ui:HttpClient.UrlSegments>
                                  </ui:HttpClient>
                                  <If Condition="[intStatusCode = 200]" sap:VirtualizedContainerService.HintSize="875,1263" sap2010:WorkflowViewState.IdRef="If_76">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="526,1103" sap2010:WorkflowViewState.IdRef="Sequence_310">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="njl:JArray" Name="arrResponse" />
                                          <Variable x:TypeArguments="njl:JObject" Name="jsonObject" />
                                          <Variable x:TypeArguments="x:String" Name="totalValue" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_6" JsonObject="[jsonObject]" JsonString="[strResponse]" />
                                        <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_659">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[totalValue]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[jsonObject("total").ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <If Condition="[CInt(totalValue) = 1]" sap:VirtualizedContainerService.HintSize="484,812" sap2010:WorkflowViewState.IdRef="If_75">
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_309">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_661">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog3]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_662">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog3]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">["Amount of Payment records found on Gov pay = " + totalValue +"."]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_663">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strCertNeededDog3]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">No</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_664">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strCertSentDog3]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">No</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_820">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[Reason4]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">We cannot match the payment reference you provided with a valid payment in our records.</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_665">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_311">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_667">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog3]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_668">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog3]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Payment Reference Doesnt Exist on Gov Pay</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_669">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strCertNeededDog3]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">No</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_670">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strCertSentDog3]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">No</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_821">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[Reason4]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">We cannot match the payment reference you provided with a valid payment in our records.</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_671">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_21">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="Nothing" />
                              </ActivityAction.Argument>
                              <Sequence sap:VirtualizedContainerService.HintSize="304,738" sap2010:WorkflowViewState.IdRef="Sequence_313">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_672">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strDog3PaymentRef]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_673">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog3]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_674">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog3]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Payment Reference Doesnt Exist</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_675">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strCertNeededDog3]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">No</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_676">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strCertSentDog3]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">No</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_824">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[Reason4]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">We cannot match the payment reference you provided with a valid payment in our records.</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_677">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                      <Sequence DisplayName="Get whether Dog is Neutered" sap:VirtualizedContainerService.HintSize="1710,451" sap2010:WorkflowViewState.IdRef="Sequence_314">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3Neutered" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Matches BuilderPattern="Is your dog neutered\?\s*\([Dd]og 3\)\s*(Yes|No|I'm not sure)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_128" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Is your dog neutered\\?\\s*\\([Dd]og 3\\)\\s*(Yes|No|I'm not sure)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Is your third dog neutered\?\s*(Yes|No|I'm not sure)" RegexOption="IgnoreCase, Compiled" Result="[ieDog3Neutered]" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_678">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3Neutered]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[ieDog3Neutered(0).value]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_679">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3Neutered]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strDog3Neutered.Replace(Environment.NewLine, String.Empty)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_680">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3Neutered]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strDog3Neutered.Replace("Is your third dog neutered?","").Trim]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                      <Sequence DisplayName="Get Whether Dog Is Microchipped" sap:VirtualizedContainerService.HintSize="1710,451" sap2010:WorkflowViewState.IdRef="Sequence_315">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3MicroChipped" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Matches BuilderPattern="Is your third dog microchipped\?\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_129" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Is your third dog microchipped\\?\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Is your third dog microchipped\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog3MicroChipped]" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_681">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3MicroChipped]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[ieDog3MicroChipped(0).value]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_682">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3MicroChipped]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strDog3MicroChipped.Replace(Environment.NewLine, String.Empty)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_683">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDog3MicroChipped]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strDog3MicroChipped.Replace("Is your third dog microchipped?","").Trim]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                      <If Condition="[strDog3MicroChipped.ToLower.Contains(&quot;yes&quot;)]" sap:VirtualizedContainerService.HintSize="1710,1715" sap2010:WorkflowViewState.IdRef="If_78">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="Get Dog 3 Microchip number" sap:VirtualizedContainerService.HintSize="1139,1555" sap2010:WorkflowViewState.IdRef="Sequence_318">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3MicrochipNumber" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:Matches BuilderPattern="What’s the microchip number for your third dog\?([\s\S]*?)When does your insurance policy start for the third dog\?" sap:VirtualizedContainerService.HintSize="1097,59" sap2010:WorkflowViewState.IdRef="Matches_130" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s the microchip number for your third dog\\?([\\s\\S]*?)When does your insurance policy start for the third dog\\?&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s the microchip number for your third dog\?([\s\S]*?)When does your insurance policy start for the third dog\?" RegexOption="IgnoreCase, Compiled" Result="[ieDog3MicrochipNumber]" />
                            <Assign sap:VirtualizedContainerService.HintSize="1097,60" sap2010:WorkflowViewState.IdRef="Assign_684">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strDog3MicroChipNumber]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[ieDog3MicrochipNumber(0).value]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="1097,60" sap2010:WorkflowViewState.IdRef="Assign_685">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strDog3MicroChipNumber]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[strDog3MicroChipNumber.Replace(Environment.NewLine, String.Empty)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="1097,60" sap2010:WorkflowViewState.IdRef="Assign_686">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strDog3MicroChipNumber]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[strDog3MicroChipNumber.Replace("What’s the microchip number for your third dog?","")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="1097,60" sap2010:WorkflowViewState.IdRef="Assign_743">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strDog3MicroChipNumber]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[strDog3MicroChipNumber.Replace("When does your insurance policy start for the third dog?","").Trim]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[strDog3MicroChipNumber.Length = 15]" sap:VirtualizedContainerService.HintSize="1097,964" sap2010:WorkflowViewState.IdRef="If_77">
                              <If.Then>
                                <Sequence DisplayName="Microchip number provided" sap:VirtualizedContainerService.HintSize="526,804" sap2010:WorkflowViewState.IdRef="Sequence_316">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[out_strApplicationStatus.Contains(&quot;Hard Fail&quot;)]" sap:VirtualizedContainerService.HintSize="484,712" sap2010:WorkflowViewState.IdRef="If_91">
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_349">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_687">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog3]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">No</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_688">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog3]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <Literal x:TypeArguments="x:String" Value="" />
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_689">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strCertNeededDog3]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_690">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strCertSentDog3]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_691">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Passed</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="Flag that Microchip not provided" sap:VirtualizedContainerService.HintSize="526,804" sap2010:WorkflowViewState.IdRef="Sequence_317">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[out_strApplicationStatus.Contains(&quot;Hard Fail&quot;)]" sap:VirtualizedContainerService.HintSize="484,712" sap2010:WorkflowViewState.IdRef="If_90">
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_348">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_692">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog3]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_693">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog3]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">["Microchip lengh is: " + strDog3MicroChipNumber.Length.ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_694">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strCertNeededDog3]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_695">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strCertSentDog3]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_696">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Soft Fail</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Flag that Microchip not provided" sap:VirtualizedContainerService.HintSize="526,804" sap2010:WorkflowViewState.IdRef="Sequence_319">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[out_strApplicationStatus.Contains(&quot;Hard Fail&quot;)]" sap:VirtualizedContainerService.HintSize="484,712" sap2010:WorkflowViewState.IdRef="If_89">
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_347">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_697">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpNeededDog3]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_698">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpReasonDog3]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Microchip Number no provided</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_699">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertNeededDog3]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_700">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertSentDog3]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_701">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[out_strApplicationStatus]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Soft Fail</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strOwnerCountry,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog3Name,strDog3DoB,strDog3Colour,strDog3Gender,strDog3InsuranceStartDate,strDog3PaymentRef,strDog3Neutered,strDog3MicroChipped,strDog3MicroChipNumber,strFollowUpNeededDog3,strFollowUpReasonDog3,strIndexNumber,strCertNeededDog3,strCertSentDog3,out_strApplicationStatus,Reason1,Reason2,Reason3,Reason4}]" DataTable="[dtCurrentEmail]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="1710,188" sap2010:WorkflowViewState.IdRef="AddDataRow_83" />
                    </Sequence>
                  </If.Then>
                </If>
              </Sequence>
            </Sequence>
          </If.Then>
        </If>
        <Assign sap:VirtualizedContainerService.HintSize="1908,60" sap2010:WorkflowViewState.IdRef="Assign_704">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[intEmailID]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[CInt(strEmailID)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="1908,60" sap2010:WorkflowViewState.IdRef="Assign_705">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[intEmailID]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[intEmailID + 1]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:SetAsset TimeoutMS="{x:Null}" AssetName="Email ID" DisplayName="Set Asset" sap:VirtualizedContainerService.HintSize="1908,134" sap2010:WorkflowViewState.IdRef="SetAsset_6" Value="[intEmailID.ToString]" />
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,245.5</av:Point>
              <av:Size x:Key="ShapeSize">200,68</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">300,313.5 300,363.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Check whether payment ref has been used in the same application more than once" sap:VirtualizedContainerService.HintSize="627,4992" sap2010:WorkflowViewState.IdRef="Sequence_414">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign number of dogs to an int" sap:VirtualizedContainerService.HintSize="585,60" sap2010:WorkflowViewState.IdRef="Assign_799">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[out_intNoOfDogs]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[dtCurrentEmail.RowCount]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtCurrentEmail]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="585,2525" sap2010:WorkflowViewState.IdRef="ForEachRow_8">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd1:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd1:DataRow" Name="CurrentRow" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="539,2404" sap2010:WorkflowViewState.IdRef="Sequence_415">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="sd1:DataTable" Name="dtPaymentChecked" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:FilterDataTable DataTable="[dtCurrentEmail]" DisplayName="Filter Data Table to see whether the payment ref is in the current email " FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="497,162" sap2010:WorkflowViewState.IdRef="FilterDataTable_5" OutputDataTable="[dtPaymentChecked]" SelectColumnsMode="Keep">
                      <ui:FilterDataTable.Filters>
                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                          <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                            <ui:FilterOperationArgument.Column>
                              <InArgument x:TypeArguments="x:String">["PaymentRefNumber"]</InArgument>
                            </ui:FilterOperationArgument.Column>
                            <ui:FilterOperationArgument.Operand>
                              <InArgument x:TypeArguments="x:String">[CurrentRow.Item("PaymentRefNumber").ToString]</InArgument>
                            </ui:FilterOperationArgument.Operand>
                          </ui:FilterOperationArgument>
                        </scg:List>
                      </ui:FilterDataTable.Filters>
                      <ui:FilterDataTable.SelectColumns>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <x:Null />
                        </scg:List>
                      </ui:FilterDataTable.SelectColumns>
                    </ui:FilterDataTable>
                    <If Condition="[dtPaymentChecked.RowCount &gt; 1]" DisplayName="If the same payment ref is located more than once" sap:VirtualizedContainerService.HintSize="509,599" sap2010:WorkflowViewState.IdRef="If_97">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="473,409" sap2010:WorkflowViewState.IdRef="Sequence_419">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="431,255" sap2010:WorkflowViewState.IdRef="MultipleAssign_14">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_159">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[CurrentRow.item("ApplicationStatus")]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">["Hard Fail"]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_160">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("strCertSent")]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">["No"]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_161">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("strCertNeeded")]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">["No"]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_162">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("FollowUpNeeded")]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">["Yes"]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_163">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("Reason4")]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">["The payment reference you provided has already been used for another application for exemption."]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_164">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("FollowUpRequired")]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">["Multiple Payment Ref Found"]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                          </ui:MultipleAssign>
                          <Throw DisplayName="Throw new BusinessRuleException(&quot;Payment Ref used twice in same email&quot;)" Exception="[new BusinessRuleException(&quot;Payment Ref used twice in same email&quot;)]" sap:VirtualizedContainerService.HintSize="431,22" sap2010:WorkflowViewState.IdRef="Throw_5" />
                        </Sequence>
                      </If.Then>
                    </If>
                    <Switch x:TypeArguments="x:String" DisplayName="Check where we should add the Details" Expression="[CurrentRow.item(&quot;ApplicationStatus&quot;).ToString]" sap:VirtualizedContainerService.HintSize="497,1166" sap2010:WorkflowViewState.IdRef="Switch`1_11">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence x:Key="Soft Fail" sap:VirtualizedContainerService.HintSize="376,1161" sap2010:WorkflowViewState.IdRef="Sequence_416">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="strIndexNumber" />
                          <Variable x:TypeArguments="x:Int32" Name="intIndexNumber" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Index Number" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="GetRobotAsset_14">
                          <ui:GetRobotAsset.Value>
                            <OutArgument x:TypeArguments="x:String">[strIndexNumber]</OutArgument>
                          </ui:GetRobotAsset.Value>
                        </ui:GetRobotAsset>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_792">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[CurrentRow.item("IndexNumber")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[strIndexNumber]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[CurrentRow.ItemArray]" DataTable="[io_dtDogInformationSoftFail]" DisplayName="Add Data Row to Soft Fail Data Table" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_77" />
                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[CurrentRow.ItemArray]" DataTable="[io_dtDogInformationPass]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_87" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_776">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intIndexNumber]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[CInt(strIndexNumber)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_777">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intIndexNumber]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[intIndexNumber + 1]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:SetAsset TimeoutMS="{x:Null}" AssetName="Index Number" DisplayName="Set Asset" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="SetAsset_17" Value="[intIndexNumber.ToString]" />
                      </Sequence>
                      <Sequence x:Key="Hard Fail" sap:VirtualizedContainerService.HintSize="376,380" sap2010:WorkflowViewState.IdRef="Sequence_417">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="strIndexNumber" />
                          <Variable x:TypeArguments="x:String" Name="strTest" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_782">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strIndexNumber]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[CurrentRow.ItemArray]" DataTable="[io_dtDogInformationHardFail]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_84" />
                      </Sequence>
                      <Sequence x:Key="Passed" sap:VirtualizedContainerService.HintSize="376,933" sap2010:WorkflowViewState.IdRef="Sequence_418">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="strIndexNumber" />
                          <Variable x:TypeArguments="x:Int32" Name="intIndexNumber" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Index Number" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="GetRobotAsset_15">
                          <ui:GetRobotAsset.Value>
                            <OutArgument x:TypeArguments="x:String">[strIndexNumber]</OutArgument>
                          </ui:GetRobotAsset.Value>
                        </ui:GetRobotAsset>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_793">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[CurrentRow.item("IndexNumber")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[strIndexNumber]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[CurrentRow.ItemArray]" DataTable="[io_dtDogInformationPass]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_85" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_778">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intIndexNumber]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[CInt(strIndexNumber)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_779">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intIndexNumber]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[intIndexNumber + 1]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:SetAsset TimeoutMS="{x:Null}" AssetName="Index Number" DisplayName="Set Asset" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="SetAsset_18" Value="[intIndexNumber.ToString]" />
                      </Sequence>
                    </Switch>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
            <If Condition="[CBool(io_Config(&quot;boolPausePoint1&quot;))]" sap:VirtualizedContainerService.HintSize="585,2235" sap2010:WorkflowViewState.IdRef="If_98">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Build_HTML_Table_Test" sap:VirtualizedContainerService.HintSize="549,2045" sap2010:WorkflowViewState.IdRef="Sequence_422">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd1:DataTable" Name="dtTableResults" />
                    <Variable x:TypeArguments="x:String" Name="HTMLHeader" />
                    <Variable x:TypeArguments="x:String" Name="HTMLFooter" />
                    <Variable x:TypeArguments="x:String" Name="MiddleHTML" />
                    <Variable x:TypeArguments="x:String" Name="HTMLContent" />
                    <Variable x:TypeArguments="x:String" Name="strDataAsTable" />
                    <Variable x:TypeArguments="x:String" Name="strButtonSelected" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="507,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_37" MethodName="Stop">
                    <InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                    </InvokeMethod.TargetObject>
                  </InvokeMethod>
                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="507,162" sap2010:WorkflowViewState.IdRef="MultipleAssign_9">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_108">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[HTMLHeader]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;style&gt;table, th, td {  border:1px solid black;}&lt;/style&gt;&lt;body&gt;&lt;table style=""width:100%""&gt;  &lt;tr&gt;    &lt;th&gt;Email ID&lt;/th&gt;    &lt;th&gt;First Name&lt;/th&gt;    &lt;th&gt;Last Name&lt;/th&gt;    &lt;th&gt;Address Line 1&lt;/th&gt;    &lt;th&gt;Address Line 2&lt;/th&gt;    &lt;th&gt;Town Or City&lt;/th&gt;    &lt;th&gt;County&lt;/th&gt;    &lt;th&gt;PostCode&lt;/th&gt;    &lt;th&gt;Country&lt;/th&gt;    &lt;th&gt;Date Of Birth&lt;/th&gt;    &lt;th&gt;Phone Number&lt;/th&gt;    &lt;th&gt;Email Address&lt;/th&gt;    &lt;th&gt;Dogs Name&lt;/th&gt;    &lt;th&gt;Dog DOB&lt;/th&gt;    &lt;th&gt;Dog Colour&lt;/th&gt;    &lt;th&gt;Dog Gender&lt;/th&gt;    &lt;th&gt;Insurance Start Date&lt;/th&gt;    &lt;th&gt;Payment Ref&lt;/th&gt;    &lt;th&gt;Neutered&lt;/th&gt;    &lt;th&gt;Microchipped&lt;/th&gt;    &lt;th&gt;MicrochipNumber&lt;/th&gt;    &lt;th&gt;Follow up Needed&lt;/th&gt;    &lt;th&gt;Follow Up Reason&lt;/th&gt;    &lt;th&gt;Index Number&lt;/th&gt;    &lt;th&gt;Cert Needed&lt;/th&gt;    &lt;th&gt;Cert Sent&lt;/th&gt;"]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_109">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[HTMLFooter]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_110">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[MiddleHTML]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtCurrentEmail]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="507,1119" sap2010:WorkflowViewState.IdRef="ForEachRow_9">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd1:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd1:DataRow" Name="CurrentRow" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="473,998" sap2010:WorkflowViewState.IdRef="Sequence_421">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="RowVal1" />
                            <Variable x:TypeArguments="x:String" Name="RowVal2" />
                            <Variable x:TypeArguments="x:String" Name="RowVal3" />
                            <Variable x:TypeArguments="x:String" Name="RowVal4" />
                            <Variable x:TypeArguments="x:String" Name="RowVal5" />
                            <Variable x:TypeArguments="x:String" Name="RowVal6" />
                            <Variable x:TypeArguments="x:String" Name="RowVal7" />
                            <Variable x:TypeArguments="x:String" Name="RowVal8" />
                            <Variable x:TypeArguments="x:String" Name="RowVal9" />
                            <Variable x:TypeArguments="x:String" Name="RowVal10" />
                            <Variable x:TypeArguments="x:String" Name="RowVal11" />
                            <Variable x:TypeArguments="x:String" Name="RowVal12" />
                            <Variable x:TypeArguments="x:String" Name="RowVal13" />
                            <Variable x:TypeArguments="x:String" Name="RowVal14" />
                            <Variable x:TypeArguments="x:String" Name="RowVal15" />
                            <Variable x:TypeArguments="x:String" Name="RowVal16" />
                            <Variable x:TypeArguments="x:String" Name="RowVal17" />
                            <Variable x:TypeArguments="x:String" Name="RowVal18" />
                            <Variable x:TypeArguments="x:String" Name="RowVal19" />
                            <Variable x:TypeArguments="x:String" Name="RowVal20" />
                            <Variable x:TypeArguments="x:String" Name="RowVal21" />
                            <Variable x:TypeArguments="x:String" Name="RowVal22" />
                            <Variable x:TypeArguments="x:String" Name="RowVal23" />
                            <Variable x:TypeArguments="x:String" Name="RowVal24" />
                            <Variable x:TypeArguments="x:String" Name="RowVal25" />
                            <Variable x:TypeArguments="x:String" Name="RowVal26" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="431,906" sap2010:WorkflowViewState.IdRef="MultipleAssign_10">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="32">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_111">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal1]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(0).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_112">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal2]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(1).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_113">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal3]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(2).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_114">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal4]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(3).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_115">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal5]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(4).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_116">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal6]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(5).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_117">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal7]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(6).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_118">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal8]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(7).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_119">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal9]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(8).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_120">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal10]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(9).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_121">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal11]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(10).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_122">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal12]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(11).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_123">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal13]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(12).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_124">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal14]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(13).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_125">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal15]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(14).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_126">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal16]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(15).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_127">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal17]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(16).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_128">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal18]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(17).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_129">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal19]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(18).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_130">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal20]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(19).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_131">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal21]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(20).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_132">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal22]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(21).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_133">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal23]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(22).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_134">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal24]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(23).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_135">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal25]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(24).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_136">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[RowVal26]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[CurrentRow(25).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_137">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[MiddleHTML]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">["  &lt;tr&gt;&lt;td&gt;"+RowVal1+"&lt;/td&gt;&lt;td&gt;"+RowVal2+"&lt;/td&gt;&lt;td&gt;"+RowVal3+"&lt;/td&gt;&lt;td&gt;"+Rowval4+"&lt;/td&gt;&lt;td&gt;"+RowVal5+"&lt;/td&gt;&lt;td&gt;"+RowVal6+"&lt;/td&gt;&lt;td&gt;"+RowVal7+"&lt;/td&gt;&lt;td&gt;"+RowVal8+"&lt;/td&gt;&lt;td&gt;"+RowVal9+"&lt;/td&gt;&lt;td&gt;"+RowVal10+"&lt;/td&gt;&lt;td&gt;"+RowVal11+"&lt;/td&gt;&lt;td&gt;"+RowVal12+"&lt;/td&gt;&lt;td&gt;"+RowVal13+"&lt;/td&gt;&lt;td&gt;"+RowVal14+"&lt;/td&gt;&lt;td&gt;"+RowVal15+"&lt;/td&gt;&lt;td&gt;"+RowVal16+"&lt;/td&gt;&lt;td&gt;"+RowVal17+"&lt;/td&gt;&lt;td&gt;"+RowVal18+"&lt;/td&gt;&lt;td&gt;"+RowVal19+"&lt;/td&gt;&lt;td&gt;"+RowVal20+"&lt;/td&gt;&lt;td&gt;"+RowVal21+"&lt;/td&gt;&lt;td&gt;"+RowVal22+"&lt;/td&gt;&lt;td&gt;"+RowVal23+"&lt;/td&gt;&lt;td&gt;"+RowVal24+"&lt;/td&gt;&lt;td&gt;"+RowVal25+"&lt;/td&gt;&lt;td&gt;"+RowVal26+"&lt;/td&gt; &lt;/tr&gt;" +MiddleHTML]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                          </ui:MultipleAssign>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                  <Assign sap:VirtualizedContainerService.HintSize="507,60" sap2010:WorkflowViewState.IdRef="Assign_781">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDataAsTable]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[HTMLHeader+MiddleHTML+HTMLFooter]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <p:Generic_PopUp OUT_ProcessType="{x:Null}" DisplayName="Generic PopUp" sap:VirtualizedContainerService.HintSize="507,22" IN_CSS_filepath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\YesNo.css&quot;]" IN_ErrorMessage="Please check the information has been pulled correctly" IN_PopupMessage="[&quot;&lt;h1&gt;Please Check Data&lt;/h1&gt;Below is the data which was pulled from the email. Please check that it is all correct.&quot; + strDataAsTable]" IN_PopupTitle="Department for Environment, Food and Rural Affairs" IN_WidthHeight="[{1200,550}]" sap2010:WorkflowViewState.IdRef="Generic_PopUp_18" OUT_strButtonSelected="[strButtonSelected]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </p:Generic_PopUp>
                  <ui:ClearDataTable DataTable="[dtCurrentEmail]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="507,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_8" />
                  <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="507,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_38" MethodName="Start">
                    <InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                    </InvokeMethod.TargetObject>
                  </InvokeMethod>
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
          <FlowStep.Next>
            <x:Reference>__ReferenceID1</x:Reference>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
  </Flowchart>
</Activity>