<Activity mc:Ignorable="sap sap2010" x:Class="Process_Transaction_2" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:l="clr-namespace:Logging;assembly=Logging" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:p="clr-namespace:Pop_Ups;assembly=Pop Ups" xmlns:p1="http://schemas.uipath.com/workflow/activities/word" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Diagnostics;assembly=System" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:sn="clr-namespace:System.Net;assembly=System" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:su="clr-namespace:SharePoint.UiPathTeam_Sharepoint_Activities;assembly=SharePoint" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:us="clr-namespace:UiPathTeam.SharePoint;assembly=UiPathTeam.SharePoint" xmlns:usa="clr-namespace:UiPathTeam.SharePoint.Activities;assembly=UiPathTeam.SharePoint.Activities" xmlns:usal="clr-namespace:UiPathTeam.SharePoint.Activities.Libraries;assembly=UiPathTeam.SharePoint.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_arrExitPoint" Type="InOutArgument(s:Int32[])" />
    <x:Property Name="io_swProcessingTimer" Type="InOutArgument(sd:Stopwatch)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="io_Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_arrCaseID" Type="InOutArgument(s:String[])" />
    <x:Property Name="in_strSharepointLockFilePath" Type="InOutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionData" Type="InArgument(scg:List(snm:MailMessage))" />
    <x:Property Name="in_TransactionNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="in_dateCaseStartTime" Type="InArgument(s:DateTime)" />
    <x:Property Name="in_arrCaseID" Type="InArgument(s:String[])" />
    <x:Property Name="in_strWorkLogFilepath" Type="InArgument(x:String)" />
    <x:Property Name="in_strSQLFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_strFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="io_dtDogInformationPass" Type="InOutArgument(sd1:DataTable)" />
    <x:Property Name="io_dtDogInformationHardFail" Type="InOutArgument(sd1:DataTable)" />
    <x:Property Name="io_dtDogInformationSoftFail" Type="InOutArgument(sd1:DataTable)" />
  </x:Members>
  <this:Process_Transaction_2.in_dateCaseStartTime>
    <InArgument x:TypeArguments="s:DateTime" />
  </this:Process_Transaction_2.in_dateCaseStartTime>
  <this:Process_Transaction_2.in_strWorkLogFilepath>
    <InArgument x:TypeArguments="x:String" />
  </this:Process_Transaction_2.in_strWorkLogFilepath>
  <this:Process_Transaction_2.in_strSQLFilePath>
    <InArgument x:TypeArguments="x:String" />
  </this:Process_Transaction_2.in_strSQLFilePath>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1238,947</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Process_Transaction_2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="108">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>Pop_Ups</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>System.Net</x:String>
      <x:String>SharePoint.UiPathTeam_Sharepoint_Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>Microsoft.SharePoint.Client</x:String>
      <x:String>UiPathTeam.SharePoint.Activities.Libraries</x:String>
      <x:String>UiPathTeam.SharePoint.Activities</x:String>
      <x:String>UiPathTeam.SharePoint</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>Logging</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Word.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="92">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>Pop Ups</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>SharePoint</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client.Runtime</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>Logging</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " sap:VirtualizedContainerService.HintSize="634,712" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="s:Exception" Name="exeException" />
      <Variable x:TypeArguments="x:String" Name="strDDILogSharepointFilepath" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,127.5</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID2</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,229.5</av:Point>
          <av:Size x:Key="ShapeSize">200,68</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,297.5 300,347.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Update Backup Index" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_85">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="strDDIBackupLogSharepointFilepath" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InterruptibleDoWhile Condition="[exeException isNot Nothing]" DisplayName="Check Out Master Index - Do While" sap:VirtualizedContainerService.HintSize="1031,1155" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_3">
          <ui:InterruptibleDoWhile.Body>
            <Sequence DisplayName="Check Out Master Log or Present User Assistance Form" sap:VirtualizedContainerService.HintSize="480,988" sap2010:WorkflowViewState.IdRef="Sequence_102">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Reset Exception" sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="Assign_160">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Exception">[exeException]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign  Sharepoint Filepath" sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="Assign_163">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strDDIBackupLogSharepointFilepath]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[io_Config("Backup Log Sharepoint Filepath").ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <TryCatch DisplayName="Try Check Out Master Log" sap:VirtualizedContainerService.HintSize="438,696" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                <TryCatch.Try>
                  <Sequence DisplayName="Handle Stopwatch &amp; Check Out File" sap:VirtualizedContainerService.HintSize="280.5,464" sap2010:WorkflowViewState.IdRef="Sequence_99">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <InvokeMethod DisplayName="Stop Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_17" MethodName="Stop">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                      </InvokeMethod.TargetObject>
                    </InvokeMethod>
                    <su:Check_Out_Sharepoint_File DisplayName="Check Out Sharepoint File" sap:VirtualizedContainerService.HintSize="238.5,22" sap2010:WorkflowViewState.IdRef="Check_Out_Sharepoint_File_5" in_intNumRetries="12" in_strAssetName="Backup Logs Checked Out" in_strSharepointFilePath="[strDDIBackupLogSharepointFilepath]" in_strSharepointLockFilePath="[in_strSharepointLockFilePath]" in_strSharepointURL="[io_Config(&quot;Sharepoint URL&quot;).ToString]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <su:Check_Out_Sharepoint_File.in_credADCredentials>
                        <InArgument x:TypeArguments="sn:NetworkCredential" />
                      </su:Check_Out_Sharepoint_File.in_credADCredentials>
                    </su:Check_Out_Sharepoint_File>
                    <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_18" MethodName="Start">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                      </InvokeMethod.TargetObject>
                    </InvokeMethod>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Capture Exception" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_100">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign Exception" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_161">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:Exception">[exeException]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
                <TryCatch.Finally>
                  <If Condition="[exeException isNot Nothing]" DisplayName="Encountered Exception?" sap:VirtualizedContainerService.HintSize="484,481" sap2010:WorkflowViewState.IdRef="If_26">
                    <If.Then>
                      <TryCatch DisplayName="Request User Intervention" sap:VirtualizedContainerService.HintSize="438,292" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                        <TryCatch.Try>
                          <p:Generic_PopUp OUT_ProcessType="{x:Null}" OUT_strButtonSelected="{x:Null}" DisplayName="User Assistance Form" sap:VirtualizedContainerService.HintSize="200,22" IN_CSS_filepath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\InitialisationException.css&quot;]" IN_ErrorMessage="File checkout loop aborted by user" IN_PopupMessage="[&quot;&lt;h1&gt;User assistance required&lt;/h1&gt;&lt;P&gt; I've encountered a problem checking out the file: '&quot;+strDDILogSharepointFilepath+&quot;'&lt;/P&gt;&lt;P&gt; Exception message: &quot;+exeException.Message+&quot;&lt;/P&gt;&lt;P&gt;Please attempt to manually rectify the issue and click Continue for the robot to retry.&lt;/P&gt;&lt;BR&gt;&quot;]" IN_PopupTitle="Department for Environment, Food and Rural Affairs" IN_WidthHeight="[{500,500}]" sap2010:WorkflowViewState.IdRef="Generic_PopUp_9" />
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Assign ShouldStop &amp; Rethrow" sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_101">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Assign ShouldStop" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_162">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[io_Config("ShouldStop")]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[True]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Rethrow sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Rethrow_3" />
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </If.Then>
                  </If>
                </TryCatch.Finally>
              </TryCatch>
            </Sequence>
          </ui:InterruptibleDoWhile.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InterruptibleDoWhile>
        <usa:SharepointApplicationScope AzureApplicationID="{x:Null}" ClientContext="{x:Null}" ClientId="{x:Null}" ClientSecret="{x:Null}" LoginTimeout="{x:Null}" Password="{x:Null}" SecurePassword="{x:Null}" UserName="{x:Null}" AzureAppPermissions="None" DisplayName="Sharepoint application scope" sap:VirtualizedContainerService.HintSize="1031,1820" sap2010:WorkflowViewState.IdRef="SharepointApplicationScope_1" PlatformType="Online" QueryGrouping="False" ResetCredentials="False" SharePointInstanceType="WebLogin" URL="[io_Config(&quot;Sharepoint URL&quot;).ToString]">
          <usa:SharepointApplicationScope.Body>
            <ActivityAction x:TypeArguments="us:SharePointContextInfo">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="us:SharePointContextInfo" Name="SharePointContextInfoTag" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="997,1678" sap2010:WorkflowViewState.IdRef="Sequence_158">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <usal:GetFile AttachmentsAction="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Get Master Log" sap:VirtualizedContainerService.HintSize="955,104" sap2010:WorkflowViewState.IdRef="GetFile_1" LocalPath="[in_strFolderPath+io_Config(&quot;DDI Backup Log Path&quot;).ToString]" LocalPathHintText="Local path where the file will be saved" RelativeUrl="[strDDIBackupLogSharepointFilepath]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="True" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                <Sequence DisplayName="Populate Index" sap:VirtualizedContainerService.HintSize="955,1298" sap2010:WorkflowViewState.IdRef="Sequence_98">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[CBool(io_Config(&quot;boolPausePoint2&quot;))]" DisplayName="Pause Point 2 Enabled?" sap:VirtualizedContainerService.HintSize="913,1206" sap2010:WorkflowViewState.IdRef="If_25">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Populate Master Log - Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,1046" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_7" InstanceCachePeriod="3000" WorkbookPath="[in_strFolderPath+io_Config(&quot;DDI Backup Log Path&quot;).ToString]">
                        <ui:ExcelApplicationScope.Body>
                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Populate Master Log" sap:VirtualizedContainerService.HintSize="376,937" sap2010:WorkflowViewState.IdRef="Sequence_96">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelAppendRange DataTable="[io_dtDogInformationPass]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_9" SheetName="Passed" />
                              <ui:ExcelAppendRange DataTable="[io_dtDogInformationSoftFail]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_11" SheetName="Soft Fail" />
                              <ui:ExcelAppendRange DataTable="[io_dtDogInformationHardFail]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_12" SheetName="Hard Fail" />
                              <Sequence DisplayName="Present Pause Point" sap:VirtualizedContainerService.HintSize="334,464" sap2010:WorkflowViewState.IdRef="Sequence_95">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <InvokeMethod DisplayName="Stop Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_15" MethodName="Stop">
                                  <InvokeMethod.TargetObject>
                                    <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                                  </InvokeMethod.TargetObject>
                                </InvokeMethod>
                                <p:Generic_PopUp OUT_ProcessType="{x:Null}" OUT_strButtonSelected="{x:Null}" DisplayName="Pause Point 2" sap:VirtualizedContainerService.HintSize="238.5,22" IN_CSS_filepath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\YesNo.css&quot;]" IN_ErrorMessage="The stop button was pressed" IN_PopupMessage="&lt;h1&gt;Please Check Index Data&lt;/h1&gt;&lt;br&gt;Please check the data in the excel log to make sure it is all correct.&lt;br&gt;&lt;br&gt;" IN_PopupTitle="Pause Point 2" IN_WidthHeight="[{600,400}]" sap2010:WorkflowViewState.IdRef="Generic_PopUp_8" />
                                <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_16" MethodName="Start">
                                  <InvokeMethod.TargetObject>
                                    <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                                  </InvokeMethod.TargetObject>
                                </InvokeMethod>
                              </Sequence>
                            </Sequence>
                          </ActivityAction>
                        </ui:ExcelApplicationScope.Body>
                      </ui:ExcelApplicationScope>
                    </If.Then>
                    <If.Else>
                      <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Populate Master Log - Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,542" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_8" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[in_strFolderPath+io_Config(&quot;DDI Backup Log Path&quot;).ToString]">
                        <ui:ExcelApplicationScope.Body>
                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Populate Master Log" sap:VirtualizedContainerService.HintSize="376,433" sap2010:WorkflowViewState.IdRef="Sequence_97">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelAppendRange DataTable="[io_dtDogInformationPass]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_13" SheetName="Passed" />
                              <ui:ExcelAppendRange DataTable="[io_dtDogInformationSoftFail]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_14" SheetName="Soft Fail" />
                              <ui:ExcelAppendRange DataTable="[io_dtDogInformationHardFail]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_15" SheetName="Hard Fail" />
                            </Sequence>
                          </ActivityAction>
                        </ui:ExcelApplicationScope.Body>
                      </ui:ExcelApplicationScope>
                    </If.Else>
                  </If>
                </Sequence>
                <usal:UploadFile AttachmentsAction="{x:Null}" PropertiesToAdd="{x:Null}" RelativeUrlHintText="{x:Null}" AllowOperationsOnASPXFiles="False" AllowOverwrite="True" CheckInFileAfterCreation="False" CheckOutFileBeforeOverwrite="False" ChooseFile="True" DisplayName="Upload file" sap:VirtualizedContainerService.HintSize="955,104" sap2010:WorkflowViewState.IdRef="UploadFile_1" LocalPath="[in_strFolderPath+io_Config(&quot;DDI Backup Log Path&quot;).ToString]" LocalPathHintText="The current local path of the file" RelativeUrl="[strDDIBackupLogSharepointFilepath]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="True" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
              </Sequence>
            </ActivityAction>
          </usa:SharepointApplicationScope.Body>
        </usa:SharepointApplicationScope>
        <su:Check_In_Sharepoint_File DisplayName="Check In Sharepoint File" sap:VirtualizedContainerService.HintSize="1031,22" sap2010:WorkflowViewState.IdRef="Check_In_Sharepoint_File_3" in_strAssetName="Backup Logs Checked Out" in_strSharepointFilePath="[strDDIBackupLogSharepointFilepath]" in_strSharepointLockFilePath="[in_strSharepointLockFilePath]" in_strSharepointURL="[io_Config(&quot;Sharepoint URL&quot;).ToString]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <su:Check_In_Sharepoint_File.in_credADCredentials>
            <InArgument x:TypeArguments="sn:NetworkCredential" />
          </su:Check_In_Sharepoint_File.in_credADCredentials>
        </su:Check_In_Sharepoint_File>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,347.5</av:Point>
              <av:Size x:Key="ShapeSize">200,68</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Check out Main Index" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_94">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InterruptibleDoWhile Condition="[exeException isNot Nothing]" DisplayName="Check Out Master Index - Do While" sap:VirtualizedContainerService.HintSize="1031,1155" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_2">
              <ui:InterruptibleDoWhile.Body>
                <Sequence DisplayName="Check Out Master Log or Present User Assistance Form" sap:VirtualizedContainerService.HintSize="480,988" sap2010:WorkflowViewState.IdRef="Sequence_93">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Reset Exception" sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="Assign_157">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Exception">[exeException]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign  Sharepoint Filepath" sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="Assign_164">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strDDILogSharepointFilepath]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[io_Config("Log Sharepoint Filepath").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <TryCatch DisplayName="Try Check Out Master Log" sap:VirtualizedContainerService.HintSize="438,696" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                    <TryCatch.Try>
                      <Sequence DisplayName="Handle Stopwatch &amp; Check Out File" sap:VirtualizedContainerService.HintSize="280.5,464" sap2010:WorkflowViewState.IdRef="Sequence_90">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <InvokeMethod DisplayName="Stop Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_13" MethodName="Stop">
                          <InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                          </InvokeMethod.TargetObject>
                        </InvokeMethod>
                        <su:Check_Out_Sharepoint_File DisplayName="Check Out Sharepoint File" sap:VirtualizedContainerService.HintSize="238.5,22" sap2010:WorkflowViewState.IdRef="Check_Out_Sharepoint_File_4" in_intNumRetries="12" in_strAssetName="Logs Checked Out" in_strSharepointFilePath="[strDDILogSharepointFilepath]" in_strSharepointLockFilePath="[in_strSharepointLockFilePath]" in_strSharepointURL="[io_Config(&quot;Sharepoint URL&quot;).ToString]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <su:Check_Out_Sharepoint_File.in_credADCredentials>
                            <InArgument x:TypeArguments="sn:NetworkCredential" />
                          </su:Check_Out_Sharepoint_File.in_credADCredentials>
                        </su:Check_Out_Sharepoint_File>
                        <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_14" MethodName="Start">
                          <InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                          </InvokeMethod.TargetObject>
                        </InvokeMethod>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Capture Exception" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_91">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Assign Exception" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_158">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:Exception">[exeException]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                    <TryCatch.Finally>
                      <If Condition="[exeException isNot Nothing]" DisplayName="Encountered Exception?" sap:VirtualizedContainerService.HintSize="484,481" sap2010:WorkflowViewState.IdRef="If_24">
                        <If.Then>
                          <TryCatch DisplayName="Request User Intervention" sap:VirtualizedContainerService.HintSize="438,292" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                            <TryCatch.Try>
                              <p:Generic_PopUp OUT_ProcessType="{x:Null}" OUT_strButtonSelected="{x:Null}" DisplayName="User Assistance Form" sap:VirtualizedContainerService.HintSize="200,22" IN_CSS_filepath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\InitialisationException.css&quot;]" IN_ErrorMessage="File checkout loop aborted by user" IN_PopupMessage="[&quot;&lt;h1&gt;User assistance required&lt;/h1&gt;&lt;P&gt; I've encountered a problem checking out the file: '&quot;+strDDILogSharepointFilepath+&quot;'&lt;/P&gt;&lt;P&gt; Exception message: &quot;+exeException.Message+&quot;&lt;/P&gt;&lt;P&gt;Please attempt to manually rectify the issue and click Continue for the robot to retry.&lt;/P&gt;&lt;BR&gt;&quot;]" IN_PopupTitle="Department for Environment, Food and Rural Affairs" IN_WidthHeight="[{500,500}]" sap2010:WorkflowViewState.IdRef="Generic_PopUp_7" />
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Assign ShouldStop &amp; Rethrow" sap:VirtualizedContainerService.HintSize="304,213" sap2010:WorkflowViewState.IdRef="Sequence_92">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign DisplayName="Assign ShouldStop" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_159">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Object">[io_Config("ShouldStop")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Object">[True]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Rethrow sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </If.Then>
                      </If>
                    </TryCatch.Finally>
                  </TryCatch>
                </Sequence>
              </ui:InterruptibleDoWhile.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InterruptibleDoWhile>
            <usa:SharepointApplicationScope AzureApplicationID="{x:Null}" ClientContext="{x:Null}" ClientId="{x:Null}" ClientSecret="{x:Null}" LoginTimeout="{x:Null}" Password="{x:Null}" SecurePassword="{x:Null}" UserName="{x:Null}" AzureAppPermissions="None" DisplayName="Sharepoint application scope" sap:VirtualizedContainerService.HintSize="1031,1820" sap2010:WorkflowViewState.IdRef="SharepointApplicationScope_2" PlatformType="Online" QueryGrouping="False" ResetCredentials="False" SharePointInstanceType="WebLogin" URL="[io_Config(&quot;Sharepoint URL&quot;).ToString]">
              <usa:SharepointApplicationScope.Body>
                <ActivityAction x:TypeArguments="us:SharePointContextInfo">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="us:SharePointContextInfo" Name="SharePointContextInfoTag" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="997,1678" sap2010:WorkflowViewState.IdRef="Sequence_159">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <usal:GetFile AttachmentsAction="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Get Master Log" sap:VirtualizedContainerService.HintSize="955,104" sap2010:WorkflowViewState.IdRef="GetFile_2" LocalPath="[in_strFolderPath+io_Config(&quot;DDI Log Path&quot;).ToString]" LocalPathHintText="Local path where the file will be saved" RelativeUrl="[strDDILogSharepointFilepath]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="True" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                    <Sequence DisplayName="Populate Index" sap:VirtualizedContainerService.HintSize="955,1298" sap2010:WorkflowViewState.IdRef="Sequence_89">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[CBool(io_Config(&quot;boolPausePoint2&quot;))]" DisplayName="Pause Point 2 Enabled?" sap:VirtualizedContainerService.HintSize="913,1206" sap2010:WorkflowViewState.IdRef="If_23">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Populate Master Log - Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,1046" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_5" InstanceCachePeriod="3000" WorkbookPath="[in_strFolderPath+io_Config(&quot;DDI Log Path&quot;).ToString]">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Populate Master Log" sap:VirtualizedContainerService.HintSize="376,937" sap2010:WorkflowViewState.IdRef="Sequence_87">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelAppendRange DataTable="[io_dtDogInformationPass]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_16" SheetName="Passed" />
                                  <ui:ExcelAppendRange DataTable="[io_dtDogInformationSoftFail]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_17" SheetName="Soft Fail" />
                                  <ui:ExcelAppendRange DataTable="[io_dtDogInformationHardFail]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_18" SheetName="Hard Fail" />
                                  <Sequence DisplayName="Present Pause Point" sap:VirtualizedContainerService.HintSize="334,464" sap2010:WorkflowViewState.IdRef="Sequence_86">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <InvokeMethod DisplayName="Stop Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_11" MethodName="Stop">
                                      <InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                                      </InvokeMethod.TargetObject>
                                    </InvokeMethod>
                                    <p:Generic_PopUp OUT_ProcessType="{x:Null}" OUT_strButtonSelected="{x:Null}" DisplayName="Pause Point 2" sap:VirtualizedContainerService.HintSize="238.5,22" IN_CSS_filepath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\YesNo.css&quot;]" IN_ErrorMessage="The stop button was pressed" IN_PopupMessage="&lt;h1&gt;Please Check Index Data&lt;/h1&gt;&lt;br&gt;Please check the data in the excel log to make sure it is all correct.&lt;br&gt;&lt;br&gt;" IN_PopupTitle="Pause Point 2" IN_WidthHeight="[{600,400}]" sap2010:WorkflowViewState.IdRef="Generic_PopUp_6" />
                                    <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_12" MethodName="Start">
                                      <InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                                      </InvokeMethod.TargetObject>
                                    </InvokeMethod>
                                  </Sequence>
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                          </ui:ExcelApplicationScope>
                        </If.Then>
                        <If.Else>
                          <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Populate Master Log - Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,542" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_6" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[in_strFolderPath+io_Config(&quot;DDI Log Path&quot;).ToString]">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Populate Master Log" sap:VirtualizedContainerService.HintSize="376,433" sap2010:WorkflowViewState.IdRef="Sequence_88">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelAppendRange DataTable="[io_dtDogInformationPass]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_19" SheetName="Passed" />
                                  <ui:ExcelAppendRange DataTable="[io_dtDogInformationSoftFail]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_20" SheetName="Soft Fail" />
                                  <ui:ExcelAppendRange DataTable="[io_dtDogInformationHardFail]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_21" SheetName="Hard Fail" />
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                          </ui:ExcelApplicationScope>
                        </If.Else>
                      </If>
                    </Sequence>
                    <usal:UploadFile AttachmentsAction="{x:Null}" PropertiesToAdd="{x:Null}" RelativeUrlHintText="{x:Null}" AllowOperationsOnASPXFiles="False" AllowOverwrite="True" CheckInFileAfterCreation="False" CheckOutFileBeforeOverwrite="False" ChooseFile="True" DisplayName="Upload file" sap:VirtualizedContainerService.HintSize="955,104" sap2010:WorkflowViewState.IdRef="UploadFile_2" LocalPath="[in_strFolderPath+io_Config(&quot;DDI Log Path&quot;).ToString]" LocalPathHintText="The current local path of the file" RelativeUrl="[strDDILogSharepointFilepath]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="True" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                  </Sequence>
                </ActivityAction>
              </usa:SharepointApplicationScope.Body>
            </usa:SharepointApplicationScope>
            <su:Check_In_Sharepoint_File DisplayName="Check In Sharepoint File" sap:VirtualizedContainerService.HintSize="1031,22" sap2010:WorkflowViewState.IdRef="Check_In_Sharepoint_File_2" in_strAssetName="Logs Checked Out" in_strSharepointFilePath="[strDDILogSharepointFilepath]" in_strSharepointLockFilePath="[in_strSharepointLockFilePath]" in_strSharepointURL="[io_Config(&quot;Sharepoint URL&quot;).ToString]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <su:Check_In_Sharepoint_File.in_credADCredentials>
                <InArgument x:TypeArguments="sn:NetworkCredential" />
              </su:Check_In_Sharepoint_File.in_credADCredentials>
            </su:Check_In_Sharepoint_File>
          </Sequence>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <FlowStep x:Name="__ReferenceID2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,127.5</av:Point>
          <av:Size x:Key="ShapeSize">200,52</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,179.5 300,229.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each Email" sap:VirtualizedContainerService.HintSize="726,6547" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[in_TransactionData]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="snm:MailMessage">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="item" />
            </ActivityAction.Argument>
            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="690,6422" sap2010:WorkflowViewState.IdRef="TryCatch_15">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <Sequence DisplayName="Get Text from Email" sap:VirtualizedContainerService.HintSize="652,6190" sap2010:WorkflowViewState.IdRef="Sequence_143">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="strEmailBody" />
                    <Variable x:TypeArguments="x:String" Name="strDog2MicroChipped" />
                    <Variable x:TypeArguments="x:String" Name="strDog1MicroChipped" />
                    <Variable x:TypeArguments="x:String" Name="strDog3MicroChipped" />
                    <Variable x:TypeArguments="x:String" Name="strDog1MicroChipNumber" />
                    <Variable x:TypeArguments="x:String" Name="strDog2MicroChipNumber" />
                    <Variable x:TypeArguments="x:String" Name="strEmailID" />
                    <Variable x:TypeArguments="x:String" Name="strFirstName" />
                    <Variable x:TypeArguments="x:String" Name="strLastName" />
                    <Variable x:TypeArguments="x:String" Name="strAddressLine1" />
                    <Variable x:TypeArguments="x:String" Name="strAddressLine2" />
                    <Variable x:TypeArguments="x:String" Name="strPostCode" />
                    <Variable x:TypeArguments="x:String" Name="strCounty" />
                    <Variable x:TypeArguments="x:String" Name="strTown" />
                    <Variable x:TypeArguments="x:String" Name="strOwnerDoB" />
                    <Variable x:TypeArguments="x:String" Name="strOwnerPhoneNumber" />
                    <Variable x:TypeArguments="x:String" Name="strOwnerEmailAddress" />
                    <Variable x:TypeArguments="x:String" Name="strDog1Name" />
                    <Variable x:TypeArguments="x:String" Name="strDog1DoB" />
                    <Variable x:TypeArguments="x:String" Name="strDog1Colour" />
                    <Variable x:TypeArguments="x:String" Name="strDog1Gender" />
                    <Variable x:TypeArguments="x:String" Name="strDog1Neutered" />
                    <Variable x:TypeArguments="x:String" Name="strDog2Name" />
                    <Variable x:TypeArguments="x:String" Name="strDog2DoB" />
                    <Variable x:TypeArguments="x:String" Name="strDog2Colour" />
                    <Variable x:TypeArguments="x:String" Name="strDog2Gender" />
                    <Variable x:TypeArguments="x:String" Name="strDog2Neutered" />
                    <Variable x:TypeArguments="x:String" Name="strDog3MicroChipNumber" />
                    <Variable x:TypeArguments="x:String" Name="strDog3Name" />
                    <Variable x:TypeArguments="x:String" Name="strDog3DoB" />
                    <Variable x:TypeArguments="x:String" Name="strDog3Colour" />
                    <Variable x:TypeArguments="x:String" Name="strDog3Gender" />
                    <Variable x:TypeArguments="x:String" Name="strDog3Neutered" />
                    <Variable x:TypeArguments="x:Int32" Name="intEmailID" />
                    <Variable x:TypeArguments="x:String" Name="strDataAsTable" />
                    <Variable x:TypeArguments="x:String" Name="strButtonSelected" />
                    <Variable x:TypeArguments="sd1:DataTable" Name="dtCurrentEmail" />
                    <Variable x:TypeArguments="x:String" Name="EmailText" />
                    <Variable x:TypeArguments="x:String" Name="strDog1InsuranceStartDate" />
                    <Variable x:TypeArguments="x:String" Name="strOwnerCountry" />
                    <Variable x:TypeArguments="x:String" Name="strDog1PaymentRef" />
                    <Variable x:TypeArguments="x:String" Name="strFollowUpNeeded" />
                    <Variable x:TypeArguments="x:String" Name="strFollowUpReason" />
                    <Variable x:TypeArguments="x:String" Name="strDog2PaymentRef" />
                    <Variable x:TypeArguments="x:String" Name="strDog2InsuranceStartDate" />
                    <Variable x:TypeArguments="x:String" Name="strDog3InsuranceStartDate" />
                    <Variable x:TypeArguments="x:String" Name="strDog3PaymentRef" />
                    <Variable x:TypeArguments="x:String" Name="strCertNeeded" />
                    <Variable x:TypeArguments="x:String" Name="strCertSent" />
                    <Variable x:TypeArguments="x:String" Name="strApplicationStatus" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Start Process Timer" sap:VirtualizedContainerService.HintSize="610,68" sap2010:WorkflowViewState.IdRef="Sequence_152">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign swProcessingTimer" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_256">
                      <Assign.To>
                        <OutArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="sd:Stopwatch">[New Stopwatch()]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="262,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_26" MethodName="Start">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                      </InvokeMethod.TargetObject>
                    </InvokeMethod>
                  </Sequence>
                  <Assign DisplayName="Assign Item to strEmailBody" sap:VirtualizedContainerService.HintSize="610,60" sap2010:WorkflowViewState.IdRef="Assign_170">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strEmailBody]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[item.Body]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="610,60" sap2010:WorkflowViewState.IdRef="Assign_266">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strEmailBody]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strEmailBody.Replace(Environment.NewLine, String.Empty)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="610,60" sap2010:WorkflowViewState.IdRef="Assign_267">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strEmailBody]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strEmailBody.Replace("________________________________"," ")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:MoveOutlookMessage Account="[io_Config(&quot;AccountName&quot;).ToString]" DisplayName="Move Email to &quot;In Progress&quot;" sap:VirtualizedContainerService.HintSize="610,87" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_4" MailFolder="[io_Config(&quot;InProgress&quot;).ToString]" MailMessage="[item]" />
                  <If Condition="[CBool(io_Config(&quot;boolPausePoint1&quot;))]" sap:VirtualizedContainerService.HintSize="610,250" sap2010:WorkflowViewState.IdRef="If_28">
                    <If.Then>
                      <ui:BuildDataTable DataTable="[dtCurrentEmail]" DisplayName="Build Dangerous Dog Data Table" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_7" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;EmailRef&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;FirstName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;LastName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;AddressLine1&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;_x0020_AddressLine2&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;TownOrCity&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;County&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;PostCode&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Country&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DateOfBirth&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;PhoneNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;EmailAddress&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DogsName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DogDOB&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DogColour&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DogGender&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;InsuranceStartDate&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;PaymentRefNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Neutered&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Microchipped&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;MicrochipNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;FollowUpNeeded&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;FollowUpRequired&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;IndexNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;CertNeeded&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;CertSent&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;strIndexNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;strCertNeeded&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;strCertSent&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                    </If.Then>
                  </If>
                  <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Email ID" DisplayName="Get Email ID Asset" sap:VirtualizedContainerService.HintSize="610,139" sap2010:WorkflowViewState.IdRef="GetRobotAsset_3">
                    <ui:GetRobotAsset.Value>
                      <OutArgument x:TypeArguments="x:String">[strEmailID]</OutArgument>
                    </ui:GetRobotAsset.Value>
                  </ui:GetRobotAsset>
                  <Assign sap:VirtualizedContainerService.HintSize="610,60" sap2010:WorkflowViewState.IdRef="Assign_291">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">No</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="610,60" sap2010:WorkflowViewState.IdRef="Assign_292">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">N/A</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="610,60" sap2010:WorkflowViewState.IdRef="Assign_304">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="610,60" sap2010:WorkflowViewState.IdRef="Assign_303">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="610,60" sap2010:WorkflowViewState.IdRef="Assign_383">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Passed</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Sequence DisplayName="Get Owner Information" sap:VirtualizedContainerService.HintSize="610,68" sap2010:WorkflowViewState.IdRef="Sequence_115">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Get Name" sap:VirtualizedContainerService.HintSize="568,68" sap2010:WorkflowViewState.IdRef="Sequence_109">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieLastName" />
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieFirstName" />
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerTitle" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="First name:\s*([A-Za-z]+)" DisplayName="Get Owners First Name" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_60" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;First name:\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="First name:\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieFirstName]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_173">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strFirstName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieFirstName(0).Value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_174">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strFirstName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strFirstName.Replace("First name: ","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:Matches BuilderPattern="Last name:\s*([A-Za-z]+)" DisplayName="Get Owners Last Name" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_61" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Last name:\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Last name:\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieLastName]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_175">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strLastName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieLastName(0).Value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_176">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strLastName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strLastName.Replace("Last name: ","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Get Owner Address" sap:VirtualizedContainerService.HintSize="568,68" sap2010:WorkflowViewState.IdRef="Sequence_111">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerPostCode" />
                        <Variable x:TypeArguments="x:String" Name="strOwnerAdress" />
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerAddress" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="What’s your address\?.*?What’s your address\?(.*?)(?=\sWhat’s your date of birth)" sap:VirtualizedContainerService.HintSize="436,59" sap2010:WorkflowViewState.IdRef="Matches_62" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;What’s your address\\?.*?What’s your address\\?(.*?)(?=\\sWhat’s your date of birth)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s your address\?.*?What’s your address\?(.*?)(?=\sWhat’s your date of birth)" RegexOption="IgnoreCase, Multiline, Compiled" Result="[ieOwnerAddress]" />
                      <ui:ForEach x:TypeArguments="str:Match" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="436,377" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[ieOwnerAddress]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="str:Match">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="str:Match" Name="item" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_172">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_269">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strOwnerAdress]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[item.Groups(1).ToString.Trim]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_270">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strPostCode]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[Regex.Match(strOwnerAdress, "\b[A-Z]{1,2}\d{1,2}[A-Z]?\s\d[A-Z]{2}\b").Value]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                      </ui:ForEach>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,230" sap2010:WorkflowViewState.IdRef="CommentOut_7">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_173">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_177">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strOwnerAdress]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[ieOwnerAddress(1).Value]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                      <ui:Matches BuilderPattern="[A-Z]{1,2}[0-9R][0-9A-Z]? [0-9][ABD-HJLNP-UW-Z]{2}" sap:VirtualizedContainerService.HintSize="436,59" sap2010:WorkflowViewState.IdRef="Matches_63" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;[A-Z]{1,2}[0-9R][0-9A-Z]? [0-9][ABD-HJLNP-UW-Z]{2}&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="[A-Z]{1,2}[0-9R][0-9A-Z]? [0-9][ABD-HJLNP-UW-Z]{2}" RegexOption="IgnoreCase, Compiled" Result="[ieOwnerPostCode]" />
                      <Assign sap:VirtualizedContainerService.HintSize="436,60" sap2010:WorkflowViewState.IdRef="Assign_178">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strPostCode]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieOwnerPostCode(0).Value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="436,60" sap2010:WorkflowViewState.IdRef="Assign_179">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strOwnerAdress]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strOwnerAdress.Replace(strPostCode,"")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Sequence sap:VirtualizedContainerService.HintSize="436,452" sap2010:WorkflowViewState.IdRef="Sequence_110">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_180">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strAddressLine1]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strOwnerAdress.Split(","c)(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_181">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strTown]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strOwnerAdress.Split(","c)(1)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_182">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strCounty]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strOwnerAdress.Split(","c)(2)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_183">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strAddressLine2]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </Sequence>
                    <Sequence DisplayName="Get Owner Country" sap:VirtualizedContainerService.HintSize="568,68" sap2010:WorkflowViewState.IdRef="Sequence_178">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerCountry" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="Do you live in England or Wales\?(England|Wales)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_93" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Do you live in England or Wales\\?(England|Wales)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Do you live in England or Wales\?(England|Wales)" RegexOption="IgnoreCase, Compiled" Result="[ieOwnerCountry]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_280">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strOwnerCountry]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieOwnerCountry(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_281">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strOwnerCountry]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strOwnerCountry.Replace("Do you live in England or Wales?","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Get Owner DoB" sap:VirtualizedContainerService.HintSize="568,1295" sap2010:WorkflowViewState.IdRef="Sequence_112">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerDoB" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="\b(?:0[1-9]|[12][0-9]|3[01])[\/\-](0[1-9]|1[0-2])[\/\-]\d{4}\b" sap:VirtualizedContainerService.HintSize="526,59" sap2010:WorkflowViewState.IdRef="Matches_64" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;\\b(?:0[1-9]|[12][0-9]|3[01])[\\\/\\-](0[1-9]|1[0-2])[\\\/\\-]\\d{4}\\b&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="\b(?:0[1-9]|[12][0-9]|3[01])[\/\-](0[1-9]|1[0-2])[\/\-]\d{4}\b" RegexOption="IgnoreCase, Compiled" Result="[ieOwnerDoB]" />
                      <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_184">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strOwnerDoB]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieOwnerDoB(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Sequence DisplayName="Check Whether Own is Over 16" sap:VirtualizedContainerService.HintSize="526,1004" sap2010:WorkflowViewState.IdRef="Sequence_160">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="s:DateTime" Name="currentDate" />
                          <Variable x:TypeArguments="s:DateTime" Name="dateOfBirth" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign Date of Birth to DateTime" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_259">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:DateTime">[dateOfBirth]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(strOwnerDoB, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_258">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:DateTime">[currentDate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:DateTime">[datetime.Now]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[(currentDate - dateOfBirth).TotalDays / 365 &gt;= 16]" DisplayName="Check whether the Owner is over the age of 16" sap:VirtualizedContainerService.HintSize="484,712" sap2010:WorkflowViewState.IdRef="If_38">
                          <If.Else>
                            <Sequence DisplayName="Owner Under 16" sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_179">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="str" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_285">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_287">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Owner is under the age of 16</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_305">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">No</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_306">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">No</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_384">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </Sequence>
                    <Sequence DisplayName="Get Owner Phone Number" sap:VirtualizedContainerService.HintSize="568,68" sap2010:WorkflowViewState.IdRef="Sequence_113">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerPhoneNumber" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="\b(?:(?:\+44|0)[1-9]\d{1,4}|\(?(?:(?:0\d{10})|(?:\d{5}\s\d{4})|(?:0\d{3}\s\d{3})|(?:0\d{2}\s\d{4}\s\d{4})|(?:0\d{4}\s\d{2}\s\d{4}))\)?)[\s\d]*\d{5,9}\b" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_65" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;\\b(?:(?:\\+44|0)[1-9]\\d{1,4}|\\(?(?:(?:0\\d{10})|(?:\\d{5}\\s\\d{4})|(?:0\\d{3}\\s\\d{3})|(?:0\\d{2}\\s\\d{4}\\s\\d{4})|(?:0\\d{4}\\s\\d{2}\\s\\d{4}))\\)?)[\\s\\d]*\\d{5,9}\\b&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="\b(?:(?:\+44|0)[1-9]\d{1,4}|\(?(?:(?:0\d{10})|(?:\d{5}\s\d{4})|(?:0\d{3}\s\d{3})|(?:0\d{2}\s\d{4}\s\d{4})|(?:0\d{4}\s\d{2}\s\d{4}))\)?)[\s\d]*\d{5,9}\b" RegexOption="IgnoreCase, Compiled" Result="[ieOwnerPhoneNumber]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_185">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strOwnerPhoneNumber]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieOwnerPhoneNumber(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Get Owner Email Address" sap:VirtualizedContainerService.HintSize="568,68" sap2010:WorkflowViewState.IdRef="Sequence_114">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieOwnerEmailAddress" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_268">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strOwnerEmailAddress]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strEmailBody, "What’s your email address\?(.*?)(?=\s+What’s your)").Groups(1).Value.Trim()]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </Sequence>
                  <Sequence DisplayName="Get Dog 1 information" sap:VirtualizedContainerService.HintSize="610,3528" sap2010:WorkflowViewState.IdRef="Sequence_123">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Get Dog Name" sap:VirtualizedContainerService.HintSize="568,68" sap2010:WorkflowViewState.IdRef="Sequence_116">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1Name" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="What’s your dog’s name\?\s*([A-Za-z]+)" DisplayName="Get Dog Name" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_67" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s your dog’s name\\?\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s your dog’s name\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog1Name]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_187">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1Name]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog1Name(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_188">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1Name]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog1Name.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_189">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1Name]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog1Name.Replace("What’s your dog’s name?","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Get Dog DoB" sap:VirtualizedContainerService.HintSize="568,1525" sap2010:WorkflowViewState.IdRef="Sequence_117">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1DoB" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="What’s your dog’s date of birth\?\s*(\d{2}/\d{2}/\d{4})" sap:VirtualizedContainerService.HintSize="526,59" sap2010:WorkflowViewState.IdRef="Matches_68" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s your dog’s date of birth\\?\\s*(\\d{2}\/\\d{2}\/\\d{4})&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s your dog’s date of birth\?\s*(\d{2}/\d{2}/\d{4})" RegexOption="IgnoreCase, Compiled" Result="[ieDog1DoB]" />
                      <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_190">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1DoB]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog1DoB(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_191">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1DoB]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog1DoB.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_192">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1DoB]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog1DoB.Replace("What’s your dog’s date of birth?","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Sequence DisplayName="Check Dogs DoB is not in the future" sap:VirtualizedContainerService.HintSize="526,1034" sap2010:WorkflowViewState.IdRef="Sequence_163">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="s:DateTime" Name="currentDate" />
                          <Variable x:TypeArguments="s:DateTime" Name="dateOfBirth" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_260">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:DateTime">[currentDate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:DateTime">[DateTime.Now]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_261">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:DateTime">[dateOfBirth]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(strDog1DoB, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[dateOfBirth &gt; currentDate]" sap:VirtualizedContainerService.HintSize="484,742" sap2010:WorkflowViewState.IdRef="If_39">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_195">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_335">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_336">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Dogs Date of Birth is in the Future</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_337">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">No</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_338">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">No</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_385">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                    </Sequence>
                    <Sequence DisplayName="Get Dog Colour" sap:VirtualizedContainerService.HintSize="568,68" sap2010:WorkflowViewState.IdRef="Sequence_118">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1Colour" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="What colour is your dog\?\s*([A-Za-z\s/]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_69" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What colour is your dog\\?\\s*([A-Za-z\\s\/]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What colour is your dog\?\s*([A-Za-z\s/]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog1Colour]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_193">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1Colour]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog1Colour(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_194">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1Colour]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog1Colour.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_195">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1Colour]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog1Colour.Replace("What colour is your dog?","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_271">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1Colour]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog1Colour.Replace(" What sex is your dog","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Get Dog Gender" sap:VirtualizedContainerService.HintSize="568,68" sap2010:WorkflowViewState.IdRef="Sequence_119">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1Gender" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="What sex is your dog\?\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_70" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What sex is your dog\\?\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What sex is your dog\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog1Gender]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_196">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1Gender]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog1Gender(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_197">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1Gender]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog1Gender.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_198">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1Gender]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog1Gender.Replace("What sex is your dog?","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Get whether Dog is Neutered" sap:VirtualizedContainerService.HintSize="568,68" sap2010:WorkflowViewState.IdRef="Sequence_120">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1Neutered" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="Is your dog neutered\?\s*(Yes|No|I'm not sure)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_71" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Is your dog neutered\\?\\s*(Yes|No|I'm not sure)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Is your dog neutered\?\s*(Yes|No|I'm not sure)" RegexOption="IgnoreCase, Compiled" Result="[ieDog1Neutered]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_199">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1Neutered]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog1Neutered(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_200">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1Neutered]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog1Neutered.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_201">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1Neutered]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog1Neutered.Replace("Is your dog neutered?","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Get the Date that the insurance started" sap:VirtualizedContainerService.HintSize="568,68" sap2010:WorkflowViewState.IdRef="Sequence_174">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieInsuranceStartDate" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="When does your insurance policy start\?(\d{2}/\d{2}/\d{4})" sap:VirtualizedContainerService.HintSize="526,59" sap2010:WorkflowViewState.IdRef="Matches_90" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;When does your insurance policy start\\?(\\d{2}\/\\d{2}\/\\d{4})&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="When does your insurance policy start\?(\d{2}/\d{2}/\d{4})" RegexOption="IgnoreCase, Compiled" Result="[ieInsuranceStartDate]" />
                      <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_272">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1InsuranceStartDate]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieInsuranceStartDate(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_273">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1InsuranceStartDate]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog1InsuranceStartDate.replace("When does your insurance policy start?","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Sequence DisplayName="Check when the insurance starts" sap:VirtualizedContainerService.HintSize="526,1004" sap2010:WorkflowViewState.IdRef="Sequence_187">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="s:DateTime" Name="dateInsuranceStartDate" />
                          <Variable x:TypeArguments="s:DateTime" Name="dateComparisonDate" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_317">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:DateTime">[dateInsuranceStartDate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(strDog1InsuranceStartDate, "dd/MM/yyyy", CultureInfo.InvariantCulture)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_318">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:DateTime">[dateComparisonDate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:DateTime">[new DateTime(2024, 2, 1)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[(dateInsuranceStartDate &lt; dateComparisonDate)]" DisplayName="If the insurance date is after the 1st Feb" sap:VirtualizedContainerService.HintSize="484,712" sap2010:WorkflowViewState.IdRef="If_42">
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_190">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_319">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_320">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Insurance date after the 1st Feb 2024</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_321">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">No</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_322">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">No</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_386">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </Sequence>
                    <TryCatch DisplayName="Try getting Payment Ref for Dog 1" sap:VirtualizedContainerService.HintSize="568,52" sap2010:WorkflowViewState.IdRef="TryCatch_16">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch.Try>
                        <Sequence DisplayName="Get Payment Ref" sap:VirtualizedContainerService.HintSize="917,1764" sap2010:WorkflowViewState.IdRef="Sequence_177">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1PaymentRef" />
                            <Variable x:TypeArguments="x:String" Name="strResponse" />
                            <Variable x:TypeArguments="x:Int32" Name="intStatusCode" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches BuilderPattern="What’s your payment reference number\?(\d+)" sap:VirtualizedContainerService.HintSize="875,59" sap2010:WorkflowViewState.IdRef="Matches_94" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s your payment reference number\\?(\\d+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s your payment reference number\?(\d+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog1PaymentRef]" />
                          <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_282">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog1PaymentRef]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[ieDog1PaymentRef(0).value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_283">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog1PaymentRef]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog1PaymentRef.Replace("What’s your payment reference number?","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" AuthenticationType="None" BodyFormat="application/xml" DisplayName="HTTP Request" EnableSSLVerification="True" EndPoint="https://publicapi.payments.service.gov.uk/v1/payments" sap:VirtualizedContainerService.HintSize="875,70" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="GET" Result="[strResponse]" StatusCode="[intStatusCode]" TimeoutMS="6000">
                            <ui:HttpClient.Attachments>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                            </ui:HttpClient.Attachments>
                            <ui:HttpClient.Cookies>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                            </ui:HttpClient.Cookies>
                            <ui:HttpClient.Headers>
                              <InArgument x:TypeArguments="x:String" x:Key="Authorization">Bearer api_test_25k5e66206d9ltqo2l8ll7sqan4fjbl5k8na3i7oj65mq9kb2qi1ljv0vl</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                            </ui:HttpClient.Headers>
                            <ui:HttpClient.Parameters>
                              <InArgument x:TypeArguments="x:String" x:Key="reference">[strDog1PaymentRef]</InArgument>
                            </ui:HttpClient.Parameters>
                            <ui:HttpClient.UrlSegments>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                            </ui:HttpClient.UrlSegments>
                          </ui:HttpClient>
                          <If Condition="[intStatusCode = 200]" sap:VirtualizedContainerService.HintSize="875,1263" sap2010:WorkflowViewState.IdRef="If_49">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="526,1103" sap2010:WorkflowViewState.IdRef="Sequence_215">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="njl:JArray" Name="arrResponse" />
                                  <Variable x:TypeArguments="njl:JObject" Name="jsonObject" />
                                  <Variable x:TypeArguments="x:String" Name="totalValue" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[jsonObject]" JsonString="[strResponse]" />
                                <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_403">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[totalValue]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[jsonObject("total").ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If Condition="[CInt(totalValue) = 1]" sap:VirtualizedContainerService.HintSize="484,812" sap2010:WorkflowViewState.IdRef="If_48">
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_214">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_404">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strDog1PaymentRef]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_405">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_406">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">["Amount of Payment records found on Gov pay = " + totalValue +"."]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_407">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">No</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_408">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">No</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_409">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_216">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_410">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strDog1PaymentRef]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_411">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_412">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Payment Reference Doesnt Exist on Gov Pay</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_413">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">No</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_414">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">No</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_415">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="921,22" sap2010:WorkflowViewState.IdRef="Catch`1_16">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="Nothing" />
                            </ActivityAction.Argument>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_182">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_290">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strDog1PaymentRef]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_288">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_289">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Payment Reference Doesnt Exist</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_307">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">No</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_308">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">No</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_387">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                    <Sequence DisplayName="Get Whether Dog Is Microchipped" sap:VirtualizedContainerService.HintSize="568,68" sap2010:WorkflowViewState.IdRef="Sequence_121">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1MicroChipped" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="Is your dog microchipped\?\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_72" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Is your dog microchipped\\?\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Is your dog microchipped\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog1MicroChipped]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_202">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1MicroChipped]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[ieDog1MicroChipped(0).value]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_203">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1MicroChipped]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog1MicroChipped.Replace(Environment.NewLine, String.Empty)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_204">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strDog1MicroChipped]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDog1MicroChipped.Replace("Is your dog microchipped?","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <If Condition="[strDog1MicroChipped.ToLower.Contains(&quot;yes&quot;)]" sap:VirtualizedContainerService.HintSize="568,52" sap2010:WorkflowViewState.IdRef="If_29">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Get Dog 1 Microchip Number" sap:VirtualizedContainerService.HintSize="695,1203" sap2010:WorkflowViewState.IdRef="Sequence_122">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1MicrochipNumber" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches BuilderPattern="What’s the microchip number\?\s*(\d+)" sap:VirtualizedContainerService.HintSize="653,59" sap2010:WorkflowViewState.IdRef="Matches_73" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s the microchip number\\?\\s*(\\d+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s the microchip number\?\s*(\d+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog1MicrochipNumber]" />
                          <Assign sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_205">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog1MicroChipNumber]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[ieDog1MicrochipNumber(0).value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_206">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog1MicroChipNumber]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog1MicroChipNumber.Replace(Environment.NewLine, String.Empty)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_207">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog1MicroChipNumber]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog1MicroChipNumber.Replace("What’s the microchip number?","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <If Condition="[strDog1MicroChipNumber.Length = 15]" sap:VirtualizedContainerService.HintSize="653,712" sap2010:WorkflowViewState.IdRef="If_45">
                            <If.Then>
                              <Sequence DisplayName="Microchip number provided" sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_206">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_379">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">No</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_380">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_381">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_382">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_400">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Passed</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Flag that Microchip not provided" sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_201">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_359">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_360">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">["Microchip lengh is: " + strDog1MicroChipNumber.Length.ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_361">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_362">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_388">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Soft Fail</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Flag that Microchip not provided" sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_196">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_339">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Yes</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_340">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Microchip Number no provided</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_341">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Yes</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_342">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Yes</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_389">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Soft Fail</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                    <Switch x:TypeArguments="x:String" DisplayName="Check where we should add the Details" Expression="[strApplicationStatus]" sap:VirtualizedContainerService.HintSize="568,621" sap2010:WorkflowViewState.IdRef="Switch`1_4">
                      <Sequence x:Key="Soft Fail" sap:VirtualizedContainerService.HintSize="376,616" sap2010:WorkflowViewState.IdRef="Sequence_210">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strOwnerCountry,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog1Name,strDog1DoB,strDog1Colour,strDog1Gender,strDog1InsuranceStartDate,strDog1PaymentRef,strDog1Neutered,strDog1MicroChipped,strDog1MicroChipNumber,strFollowUpNeeded,strFollowUpReason,strCertNeeded,strCertSent}]" DataTable="[io_dtDogInformationPass]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_37" />
                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strOwnerCountry,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog1Name,strDog1DoB,strDog1Colour,strDog1Gender,strDog1InsuranceStartDate,strDog1PaymentRef,strDog1Neutered,strDog1MicroChipped,strDog1MicroChipNumber,strFollowUpNeeded,strFollowUpReason,strCertNeeded,strCertSent}]" DataTable="[io_dtDogInformationSoftFail]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_38" />
                        <Sequence DisplayName="Draft Certificate" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Sequence_227">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:CopyFile ContinueOnError="{x:Null}" Destination="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="775,160" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully.docx" />
                          <Sequence sap:VirtualizedContainerService.HintSize="775,2352" sap2010:WorkflowViewState.IdRef="Sequence_226">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_1" Replace="Richard Jones" Search="Name of owner" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_2" Replace="90 Heol Yr Odyn" Search="Address line 1" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_3" Replace="Cardiff" Search="Address line 2" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_4" Search="Address line 3">
                              <p1:DocumentReplaceText.Replace>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </p1:DocumentReplaceText.Replace>
                            </p1:DocumentReplaceText>
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_5" Replace="CF5 5QX" Search="Postcode" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_6" Replace="1000001" Search="Index registration number" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_7" Replace="123456789101112" Search="Microchip Number" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_8" Replace="Name of dog" Search="Johnny" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_9" Replace="XL Bully" Search="Type of dog" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_10" Replace="Male" Search="Sex of dog" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_11" Replace="27/10/2020" Search="Date of birth of dog" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_12" Replace="White" Search="Main colour of dog" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_13" Replace="[Today.ToString(&quot;dd MMMM yyyy&quot;)]" Search="Enter date" />
                            <p1:WordApplicationScope DisplayName="Word Application Scope" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,544" sap2010:WorkflowViewState.IdRef="WordApplicationScope_1">
                              <p1:WordApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WordDocument">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="478,435" sap2010:WorkflowViewState.IdRef="Sequence_225">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:String" Name="strButtonSelected" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,192" sap2010:WorkflowViewState.IdRef="CommentOut_8">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_224">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <p:Generic_PopUp OUT_ProcessType="{x:Null}" DisplayName="Generic PopUp" sap:VirtualizedContainerService.HintSize="200,22" IN_CSS_filepath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\YesNo.css&quot;]" IN_ErrorMessage="Please check the form has been drafted correctly" IN_PopupMessage="&lt;h1&gt;A WSF01 Form complete&lt;/h1&gt;&lt;P&gt;The A WSF01 form has now been drafted. Please check that everything have populated correctly. Once you are happy please click ok to continue.&lt;/P&gt;&lt;BR&gt;" IN_PopupTitle="Department for Environment, Food and Rural Affairs" IN_WidthHeight="[{800,450}]" sap2010:WorkflowViewState.IdRef="Generic_PopUp_12" OUT_strButtonSelected="[strButtonSelected]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </p:Generic_PopUp>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                    </ui:CommentOut>
                                    <p1:WordExportToPdf DisplayName="Save Document as PDF" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully" sap:VirtualizedContainerService.HintSize="436,111" sap2010:WorkflowViewState.IdRef="WordExportToPdf_1" />
                                  </Sequence>
                                </ActivityAction>
                              </p1:WordApplicationScope.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </p1:WordApplicationScope>
                          </Sequence>
                        </Sequence>
                      </Sequence>
                      <ui:AddDataRow DataRow="{x:Null}" x:Key="Hard Fail" ArrayRow="[{strEmailID,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strOwnerCountry,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog1Name,strDog1DoB,strDog1Colour,strDog1Gender,strDog1InsuranceStartDate,strDog1PaymentRef,strDog1Neutered,strDog1MicroChipped,strDog1MicroChipNumber,strFollowUpNeeded,strFollowUpReason,strCertNeeded,strCertSent}]" DataTable="[io_dtDogInformationHardFail]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_39" />
                      <Sequence x:Key="Passed" sap:VirtualizedContainerService.HintSize="376,388" sap2010:WorkflowViewState.IdRef="Sequence_232">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strOwnerCountry,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog1Name,strDog1DoB,strDog1Colour,strDog1Gender,strDog1InsuranceStartDate,strDog1PaymentRef,strDog1Neutered,strDog1MicroChipped,strDog1MicroChipNumber,strFollowUpNeeded,strFollowUpReason,strCertNeeded,strCertSent}]" DataTable="[io_dtDogInformationPass]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_45" />
                        <Sequence DisplayName="Draft Certificate" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Sequence_231">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:CopyFile ContinueOnError="{x:Null}" Destination="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="775,160" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="True" Path="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully.docx" />
                          <Sequence sap:VirtualizedContainerService.HintSize="775,2352" sap2010:WorkflowViewState.IdRef="Sequence_230">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_14" Replace="Richard Jones" Search="Name of owner" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_15" Replace="90 Heol Yr Odyn" Search="Address line 1" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_16" Replace="Cardiff" Search="Address line 2" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_17" Search="Address line 3">
                              <p1:DocumentReplaceText.Replace>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </p1:DocumentReplaceText.Replace>
                            </p1:DocumentReplaceText>
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_18" Replace="CF5 5QX" Search="Postcode" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_19" Replace="1000001" Search="Index registration number" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_20" Replace="123456789101112" Search="Microchip Number" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_21" Replace="Name of dog" Search="Johnny" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_22" Replace="XL Bully" Search="Type of dog" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_23" Replace="Male" Search="Sex of dog" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_24" Replace="27/10/2020" Search="Date of birth of dog" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_25" Replace="White" Search="Main colour of dog" />
                            <p1:DocumentReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,92" sap2010:WorkflowViewState.IdRef="DocumentReplaceText_26" Replace="[Today.ToString(&quot;dd MMMM yyyy&quot;)]" Search="Enter date" />
                            <p1:WordApplicationScope DisplayName="Word Application Scope" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully Draft.docx" sap:VirtualizedContainerService.HintSize="733,544" sap2010:WorkflowViewState.IdRef="WordApplicationScope_2">
                              <p1:WordApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WordDocument">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="478,435" sap2010:WorkflowViewState.IdRef="Sequence_229">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:String" Name="strButtonSelected" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,192" sap2010:WorkflowViewState.IdRef="CommentOut_9">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_228">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <p:Generic_PopUp OUT_ProcessType="{x:Null}" DisplayName="Generic PopUp" sap:VirtualizedContainerService.HintSize="200,22" IN_CSS_filepath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\YesNo.css&quot;]" IN_ErrorMessage="Please check the form has been drafted correctly" IN_PopupMessage="&lt;h1&gt;A WSF01 Form complete&lt;/h1&gt;&lt;P&gt;The A WSF01 form has now been drafted. Please check that everything have populated correctly. Once you are happy please click ok to continue.&lt;/P&gt;&lt;BR&gt;" IN_PopupTitle="Department for Environment, Food and Rural Affairs" IN_WidthHeight="[{800,450}]" sap2010:WorkflowViewState.IdRef="Generic_PopUp_13" OUT_strButtonSelected="[strButtonSelected]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </p:Generic_PopUp>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                    </ui:CommentOut>
                                    <p1:WordExportToPdf DisplayName="Save Document as PDF" FilePath="C:\Users\m1011226\OneDrive - Defra\Desktop\DEFRA-Dangerous-Dogs-Index\Certificate of Exemption XL Bully" sap:VirtualizedContainerService.HintSize="436,111" sap2010:WorkflowViewState.IdRef="WordExportToPdf_2" />
                                  </Sequence>
                                </ActivityAction>
                              </p1:WordApplicationScope.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </p1:WordApplicationScope>
                          </Sequence>
                        </Sequence>
                      </Sequence>
                    </Switch>
                    <If Condition="[CBool(io_Config(&quot;boolPausePoint1&quot;))]" sap:VirtualizedContainerService.HintSize="568,378" sap2010:WorkflowViewState.IdRef="If_30">
                      <If.Then>
                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strOwnerCountry,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog1Name,strDog1DoB,strDog1Colour,strDog1Gender,strDog1InsuranceStartDate,strDog1PaymentRef,strDog1Neutered,strDog1MicroChipped,strDog1MicroChipNumber,strFollowUpNeeded,strFollowUpReason,strCertNeeded,strCertSent}]" DataTable="[dtCurrentEmail]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_21" />
                      </If.Then>
                    </If>
                  </Sequence>
                  <If Condition="[strEmailBody.ToLower.Contains(&quot;second dog&quot;)]" DisplayName="If the Owner has a second dog" sap:VirtualizedContainerService.HintSize="610,52" sap2010:WorkflowViewState.IdRef="If_33">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Get Dog 2 information" sap:VirtualizedContainerService.HintSize="1086,8442" sap2010:WorkflowViewState.IdRef="Sequence_131">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Get Dog 2 Name" sap:VirtualizedContainerService.HintSize="1044,68" sap2010:WorkflowViewState.IdRef="Sequence_124">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2Name" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches BuilderPattern="What’s the name of your second dog\?\s*([A-Za-z]+)" DisplayName="Get Dog Name" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_74" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s the name of your second dog\\?\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s the name of your second dog\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog2Name]" />
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_209">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2Name]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[ieDog2Name(0).value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_210">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2Name]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog2Name.Replace(Environment.NewLine, String.Empty)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_211">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2Name]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog2Name.Replace("What’s the name of your second dog?","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                        <Sequence DisplayName="Get Dog DoB" sap:VirtualizedContainerService.HintSize="1044,1525" sap2010:WorkflowViewState.IdRef="Sequence_125">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2DoB" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches BuilderPattern="What’s the date of birth for your second dog\?\s*(\d{2}/\d{2}/\d{4})" sap:VirtualizedContainerService.HintSize="526,59" sap2010:WorkflowViewState.IdRef="Matches_75" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s the date of birth for your second dog\\?\\s*(\\d{2}\/\\d{2}\/\\d{4})&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s the date of birth for your second dog\?\s*(\d{2}/\d{2}/\d{4})" RegexOption="IgnoreCase, Compiled" Result="[ieDog2DoB]" />
                          <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_212">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2DoB]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[ieDog2DoB(0).value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_213">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2DoB]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog2DoB.Replace(Environment.NewLine, String.Empty)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_214">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2DoB]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog2DoB.Replace("What’s the date of birth for your second dog?","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Sequence DisplayName="Check Dogs DoB is not in the future" sap:VirtualizedContainerService.HintSize="526,1034" sap2010:WorkflowViewState.IdRef="Sequence_164">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="s:DateTime" Name="currentDate" />
                              <Variable x:TypeArguments="s:DateTime" Name="dateOfBirth" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_262">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:DateTime">[currentDate]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:DateTime">[DateTime.Now]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_263">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:DateTime">[dateOfBirth]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(strDog2DoB, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[dateOfBirth &gt; currentDate]" sap:VirtualizedContainerService.HintSize="484,742" sap2010:WorkflowViewState.IdRef="If_40">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_197">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_343">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_344">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Dogs Date of Birth is in the Future</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_345">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_346">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_390">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                            </If>
                          </Sequence>
                        </Sequence>
                        <Sequence DisplayName="Get Dog Colour" sap:VirtualizedContainerService.HintSize="1044,68" sap2010:WorkflowViewState.IdRef="Sequence_126">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2Colour" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches BuilderPattern="What colour is your second dog\?\s*([A-Za-z\s/]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_76" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What colour is your second dog\\?\\s*([A-Za-z\\s\/]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What colour is your second dog\?\s*([A-Za-z\s/]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog2Colour]" />
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_215">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2Colour]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[ieDog2Colour(0).value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_216">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2Colour]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog2Colour.Replace(Environment.NewLine, String.Empty)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_217">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2Colour]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog2Colour.Replace("What colour is your second dog?","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_278">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2Colour]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog2Colour.Replace("What sex is your second dog","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                        <Sequence DisplayName="Get Dog Gender" sap:VirtualizedContainerService.HintSize="1044,68" sap2010:WorkflowViewState.IdRef="Sequence_127">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2Gender" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches BuilderPattern="What sex is your second dog\?\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_77" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What sex is your second dog\\?\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What sex is your second dog\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog2Gender]" />
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_218">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2Gender]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[ieDog2Gender(0).value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_219">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2Gender]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog2Gender.Replace(Environment.NewLine, String.Empty)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_220">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2Gender]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog2Gender.Replace("What sex is your second dog?","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                        <Sequence DisplayName="Get whether Dog is Neutered" sap:VirtualizedContainerService.HintSize="1044,451" sap2010:WorkflowViewState.IdRef="Sequence_128">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2Neutered" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches BuilderPattern="Is your second dog neutered\?\s*(Yes|No|I'm not sure)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_78" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Is your second dog neutered\\?\\s*(Yes|No|I'm not sure)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Is your second dog neutered\?\s*(Yes|No|I'm not sure)" RegexOption="IgnoreCase, Compiled" Result="[ieDog2Neutered]" />
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_221">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2Neutered]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[ieDog2Neutered(0).value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_222">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2Neutered]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog2Neutered.Replace(Environment.NewLine, String.Empty)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_223">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2Neutered]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog2Neutered.Replace("Is your second dog neutered?","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                        <Sequence DisplayName="Get the Date that the insurance started" sap:VirtualizedContainerService.HintSize="1044,1395" sap2010:WorkflowViewState.IdRef="Sequence_175">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieInsuranceStartDate" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches BuilderPattern="When does your insurance policy start for the second dog\?(\d{2}/\d{2}/\d{4})" sap:VirtualizedContainerService.HintSize="526,59" sap2010:WorkflowViewState.IdRef="Matches_91" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;When does your insurance policy start for the second dog\\?(\\d{2}\/\\d{2}\/\\d{4})&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="When does your insurance policy start for the second dog\?(\d{2}/\d{2}/\d{4})" RegexOption="IgnoreCase, Compiled" Result="[ieInsuranceStartDate]" />
                          <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_274">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2InsuranceStartDate]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[ieInsuranceStartDate(0).value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_275">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2InsuranceStartDate]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog2InsuranceStartDate.replace("When does your insurance policy start for the second dog?","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Sequence DisplayName="Check when the insurance starts" sap:VirtualizedContainerService.HintSize="526,1004" sap2010:WorkflowViewState.IdRef="Sequence_192">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="s:DateTime" Name="dateInsuranceStartDate" />
                              <Variable x:TypeArguments="s:DateTime" Name="dateComparisonDate" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_323">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:DateTime">[dateInsuranceStartDate]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(strDog2InsuranceStartDate, "dd/MM/yyyy", CultureInfo.InvariantCulture)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_324">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:DateTime">[dateComparisonDate]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:DateTime">[new DateTime(2024, 2, 1)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[(dateInsuranceStartDate &lt; dateComparisonDate)]" DisplayName="If the insurance date is after the 1st Feb" sap:VirtualizedContainerService.HintSize="484,712" sap2010:WorkflowViewState.IdRef="If_43">
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_191">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_325">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_326">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Insurance date after the 1st Feb 2024</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_327">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_328">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_391">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </Sequence>
                        <TryCatch DisplayName="Try getting Payment Ref for Dog 2" sap:VirtualizedContainerService.HintSize="1044,1996" sap2010:WorkflowViewState.IdRef="TryCatch_17">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <Sequence DisplayName="Get Payment Ref" sap:VirtualizedContainerService.HintSize="917,1764" sap2010:WorkflowViewState.IdRef="Sequence_183">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog1PaymentRef" />
                                <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2PaymentRef" />
                                <Variable x:TypeArguments="x:String" Name="strResponse" />
                                <Variable x:TypeArguments="x:Int32" Name="intStatusCode" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Matches BuilderPattern="What’s your payment reference number\?(\d+)" sap:VirtualizedContainerService.HintSize="875,59" sap2010:WorkflowViewState.IdRef="Matches_95" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s your payment reference number\\?(\\d+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s your payment reference number\?(\d+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog2PaymentRef]" />
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_293">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strDog2PaymentRef]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[ieDog2PaymentRef(0).value]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_294">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strDog2PaymentRef]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[strDog2PaymentRef.Replace("What’s your payment reference number?","")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" AuthenticationType="None" BodyFormat="application/xml" DisplayName="HTTP Request" EnableSSLVerification="True" EndPoint="https://publicapi.payments.service.gov.uk/v1/payments" sap:VirtualizedContainerService.HintSize="875,70" sap2010:WorkflowViewState.IdRef="HttpClient_2" Method="GET" Result="[strResponse]" StatusCode="[intStatusCode]" TimeoutMS="6000">
                                <ui:HttpClient.Attachments>
                                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                </ui:HttpClient.Attachments>
                                <ui:HttpClient.Cookies>
                                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                </ui:HttpClient.Cookies>
                                <ui:HttpClient.Headers>
                                  <InArgument x:TypeArguments="x:String" x:Key="Authorization">Bearer api_test_25k5e66206d9ltqo2l8ll7sqan4fjbl5k8na3i7oj65mq9kb2qi1ljv0vl</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                                </ui:HttpClient.Headers>
                                <ui:HttpClient.Parameters>
                                  <InArgument x:TypeArguments="x:String" x:Key="reference">[strDog2PaymentRef]</InArgument>
                                </ui:HttpClient.Parameters>
                                <ui:HttpClient.UrlSegments>
                                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                </ui:HttpClient.UrlSegments>
                              </ui:HttpClient>
                              <If Condition="[intStatusCode = 200]" sap:VirtualizedContainerService.HintSize="875,1263" sap2010:WorkflowViewState.IdRef="If_51">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="526,1103" sap2010:WorkflowViewState.IdRef="Sequence_218">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="njl:JArray" Name="arrResponse" />
                                      <Variable x:TypeArguments="njl:JObject" Name="jsonObject" />
                                      <Variable x:TypeArguments="x:String" Name="totalValue" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[jsonObject]" JsonString="[strResponse]" />
                                    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_416">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[totalValue]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[jsonObject("total").ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <If Condition="[CInt(totalValue) = 1]" sap:VirtualizedContainerService.HintSize="484,812" sap2010:WorkflowViewState.IdRef="If_50">
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_217">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_417">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strDog1PaymentRef]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_418">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_419">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">["Amount of Payment records found on Gov pay = " + totalValue +"."]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_420">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">No</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_421">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">No</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_422">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_219">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_423">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strDog1PaymentRef]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_424">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_425">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Payment Reference Doesnt Exist on Gov Pay</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_426">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">No</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_427">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">No</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_428">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="921,22" sap2010:WorkflowViewState.IdRef="Catch`1_17">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="Nothing" />
                                </ActivityAction.Argument>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_184">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_295">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strDog2PaymentRef]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_296">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_297">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Payment Reference Doesnt Exist</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_313">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_314">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_392">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                        <Sequence DisplayName="Get Whether Dog Is Microchipped" sap:VirtualizedContainerService.HintSize="1044,451" sap2010:WorkflowViewState.IdRef="Sequence_129">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2MicroChipped" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches BuilderPattern="Is your second dog microchipped\?\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_79" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Is your second dog microchipped\\?\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Is your second dog microchipped\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog2MicroChipped]" />
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_224">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2MicroChipped]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[ieDog2MicroChipped(0).value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_225">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2MicroChipped]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog2MicroChipped.Replace(Environment.NewLine, String.Empty)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_226">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog2MicroChipped]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog2MicroChipped.Replace("Is your second dog microchipped?","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                        <If Condition="[strDog2MicroChipped.ToLower.Contains(&quot;yes&quot;)]" DisplayName="If the Dog is Microchiped" sap:VirtualizedContainerService.HintSize="1044,1363" sap2010:WorkflowViewState.IdRef="If_31">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Get Dog 2 Microchip Number" sap:VirtualizedContainerService.HintSize="695,1203" sap2010:WorkflowViewState.IdRef="Sequence_130">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog2MicrochipNumber" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Matches BuilderPattern="What’s the microchip number for the second dog\?\s*(\d+)" sap:VirtualizedContainerService.HintSize="653,59" sap2010:WorkflowViewState.IdRef="Matches_80" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s the microchip number for the second dog\\?\\s*(\\d+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s the microchip number for the second dog\?\s*(\d+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog2MicrochipNumber]" />
                              <Assign sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_227">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strDog2MicroChipNumber]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[ieDog2MicrochipNumber(0).value]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_228">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strDog2MicroChipNumber]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[strDog2MicroChipNumber.Replace(Environment.NewLine, String.Empty)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_229">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strDog2MicroChipNumber]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[strDog2MicroChipNumber.Replace("What’s the microchip number for the second dog?","")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[strDog2MicroChipNumber.Length = 15]" sap:VirtualizedContainerService.HintSize="653,712" sap2010:WorkflowViewState.IdRef="If_46">
                                <If.Then>
                                  <Sequence DisplayName="Microchip number provided" sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_204">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_371">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">No</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_372">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_373">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_374">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_401">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Passed</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Flag that Microchip not provided" sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_202">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_363">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_364">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">["Microchip lengh is: " + strDog2MicroChipNumber.Length.ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_365">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_366">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_393">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Soft Fail</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Flag that Microchip not provided" sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_198">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_347">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_348">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Microchip Number no provided</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_349">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_350">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_394">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Soft Fail</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Else>
                        </If>
                        <Switch x:TypeArguments="x:String" DisplayName="Check where we should add the Details" Expression="[strApplicationStatus]" sap:VirtualizedContainerService.HintSize="1044,187" sap2010:WorkflowViewState.IdRef="Switch`1_6">
                          <Sequence x:Key="Soft Fail" sap:VirtualizedContainerService.HintSize="376,508" sap2010:WorkflowViewState.IdRef="Sequence_212">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strOwnerCountry,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog1Name,strDog1DoB,strDog1Colour,strDog1Gender,strDog1InsuranceStartDate,strDog1PaymentRef,strDog1Neutered,strDog1MicroChipped,strDog1MicroChipNumber,strFollowUpNeeded,strFollowUpReason,strCertNeeded,strCertSent}]" DataTable="[io_dtDogInformationPass]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_46" />
                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strOwnerCountry,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog1Name,strDog1DoB,strDog1Colour,strDog1Gender,strDog1InsuranceStartDate,strDog1PaymentRef,strDog1Neutered,strDog1MicroChipped,strDog1MicroChipNumber,strFollowUpNeeded,strFollowUpReason,strCertNeeded,strCertSent}]" DataTable="[io_dtDogInformationSoftFail]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_47" />
                          </Sequence>
                          <ui:AddDataRow DataRow="{x:Null}" x:Key="Hard Fail" ArrayRow="[{strEmailID,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strOwnerCountry,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog1Name,strDog1DoB,strDog1Colour,strDog1Gender,strDog1InsuranceStartDate,strDog1PaymentRef,strDog1Neutered,strDog1MicroChipped,strDog1MicroChipNumber,strFollowUpNeeded,strFollowUpReason,strCertNeeded,strCertSent}]" DataTable="[io_dtDogInformationHardFail]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_48" />
                          <ui:AddDataRow DataRow="{x:Null}" x:Key="Passed" ArrayRow="[{strEmailID,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strOwnerCountry,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog1Name,strDog1DoB,strDog1Colour,strDog1Gender,strDog1InsuranceStartDate,strDog1PaymentRef,strDog1Neutered,strDog1MicroChipped,strDog1MicroChipNumber,strFollowUpNeeded,strFollowUpReason,strCertNeeded,strCertSent}]" DataTable="[io_dtDogInformationPass]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_49" />
                        </Switch>
                        <If Condition="[CBool(io_Config(&quot;boolPausePoint1&quot;))]" sap:VirtualizedContainerService.HintSize="1044,378" sap2010:WorkflowViewState.IdRef="If_32">
                          <If.Then>
                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strOwnerCountry,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog2Name,strDog2DoB,strDog2Colour,strDog2Gender,strDog2InsuranceStartDate,strDog2PaymentRef,strDog2Neutered,strDog2MicroChipped,strDog2MicroChipNumber,strFollowUpNeeded,strFollowUpReason,strCertNeeded,strCertSent}]" DataTable="[dtCurrentEmail]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_23" />
                          </If.Then>
                        </If>
                      </Sequence>
                    </If.Then>
                  </If>
                  <If Condition="[strEmailBody.ToLower.Contains(&quot;third dog&quot;)]" DisplayName="If the Owner has a third" sap:VirtualizedContainerService.HintSize="610,52" sap2010:WorkflowViewState.IdRef="If_36">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Get Dog 3 information" sap:VirtualizedContainerService.HintSize="1086,7676" sap2010:WorkflowViewState.IdRef="Sequence_139">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Get Dog Name" sap:VirtualizedContainerService.HintSize="1044,68" sap2010:WorkflowViewState.IdRef="Sequence_132">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3Name" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches BuilderPattern="What’s your dog’s name\?\s*\([Dd]og 3\)\s*([A-Za-z]+)" DisplayName="Get Dog Name" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_81" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s your dog’s name\\?\\s*\\([Dd]og 3\\)\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s the name of your third dog\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog3Name]" />
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_231">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3Name]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[ieDog3Name(0).value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_232">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3Name]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog3Name.Replace(Environment.NewLine, String.Empty)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_233">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3Name]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog3Name.Replace("What’s the name of your third dog?","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                        <Sequence DisplayName="Get Dog DoB" sap:VirtualizedContainerService.HintSize="1044,1525" sap2010:WorkflowViewState.IdRef="Sequence_133">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3DoB" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches BuilderPattern="What’s the date of birth of your third dog\?(\d{2}/\d{2}/\d{4})" sap:VirtualizedContainerService.HintSize="526,59" sap2010:WorkflowViewState.IdRef="Matches_82" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;What’s the date of birth of your third dog\\?(\\d{2}\/\\d{2}\/\\d{4})&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s the date of birth of your third dog\?(\d{2}/\d{2}/\d{4})" RegexOption="IgnoreCase, Compiled" Result="[ieDog3DoB]" />
                          <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_234">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3DoB]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[ieDog3DoB(0).value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_235">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3DoB]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog3DoB.Replace(Environment.NewLine, String.Empty)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_236">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3DoB]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog3DoB.Replace("What’s the date of birth of your third dog?","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Sequence DisplayName="Check Dogs DoB is not in the future" sap:VirtualizedContainerService.HintSize="526,1034" sap2010:WorkflowViewState.IdRef="Sequence_165">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="s:DateTime" Name="currentDate" />
                              <Variable x:TypeArguments="s:DateTime" Name="dateOfBirth" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_264">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:DateTime">[currentDate]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:DateTime">[DateTime.Now]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_265">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:DateTime">[dateOfBirth]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(strDog3DoB, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[dateOfBirth &gt; currentDate]" sap:VirtualizedContainerService.HintSize="484,742" sap2010:WorkflowViewState.IdRef="If_41">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_199">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_351">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_352">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Dogs Date of Birth is in the Future</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_353">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_354">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_395">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                            </If>
                          </Sequence>
                        </Sequence>
                        <Sequence DisplayName="Get Dog Colour" sap:VirtualizedContainerService.HintSize="1044,68" sap2010:WorkflowViewState.IdRef="Sequence_134">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3Colour" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches BuilderPattern="What colour is your third dog\?\s*([A-Za-z\s/]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_89" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What colour is your third dog\\?\\s*([A-Za-z\\s\/]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What colour is your third dog\?\s*([A-Za-z\s/]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog3Colour]" />
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_237">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3Colour]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[ieDog3Colour(0).value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_238">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3Colour]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog3Colour.Replace(Environment.NewLine, String.Empty)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_239">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3Colour]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog3Colour.Replace("What colour is your third dog?","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_279">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3Colour]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog3Colour.Replace("What sex is your third dog","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                        <Sequence DisplayName="Get Dog Gender" sap:VirtualizedContainerService.HintSize="1044,68" sap2010:WorkflowViewState.IdRef="Sequence_135">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3Gender" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches BuilderPattern="What gender is your dog\?\s*\([Dd]og 3\)\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_84" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What gender is your dog\\?\\s*\\([Dd]og 3\\)\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What sex is your third dog\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog3Gender]" />
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_240">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3Gender]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[ieDog3Gender(0).value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_241">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3Gender]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog3Gender.Replace(Environment.NewLine, String.Empty)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_242">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3Gender]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog3Gender.Replace("What sex is your third dog?","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                        <Sequence DisplayName="Get the Date that the insurance started" sap:VirtualizedContainerService.HintSize="1044,1395" sap2010:WorkflowViewState.IdRef="Sequence_176">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieInsuranceStartDate" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches BuilderPattern="When does your insurance policy start for the third dog\?(\d{2}/\d{2}/\d{4})" sap:VirtualizedContainerService.HintSize="526,59" sap2010:WorkflowViewState.IdRef="Matches_92" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;When does your insurance policy start for the third dog\\?(\\d{2}\/\\d{2}\/\\d{4})&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="When does your insurance policy start for the third dog\?(\d{2}/\d{2}/\d{4})" RegexOption="IgnoreCase, Compiled" Result="[ieInsuranceStartDate]" />
                          <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_276">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3InsuranceStartDate]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[ieInsuranceStartDate(0).value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_277">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3InsuranceStartDate]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog3InsuranceStartDate.replace("When does your insurance policy start for the third dog?","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Sequence DisplayName="Check when the insurance starts" sap:VirtualizedContainerService.HintSize="526,1004" sap2010:WorkflowViewState.IdRef="Sequence_194">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="s:DateTime" Name="dateInsuranceStartDate" />
                              <Variable x:TypeArguments="s:DateTime" Name="dateComparisonDate" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_329">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:DateTime">[dateInsuranceStartDate]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(strDog3InsuranceStartDate, "dd/MM/yyyy", CultureInfo.InvariantCulture)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_330">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:DateTime">[dateComparisonDate]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:DateTime">[new DateTime(2024, 2, 1)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[(dateInsuranceStartDate &lt; dateComparisonDate)]" DisplayName="If the insurance date is after the 1st Feb" sap:VirtualizedContainerService.HintSize="484,712" sap2010:WorkflowViewState.IdRef="If_44">
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_193">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_331">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_332">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Insurance date after the 1st Feb 2024</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_333">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_334">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_396">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </Sequence>
                        <TryCatch DisplayName="Try getting Payment Ref for Dog 14" sap:VirtualizedContainerService.HintSize="1044,1996" sap2010:WorkflowViewState.IdRef="TryCatch_18">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <Sequence DisplayName="Get Payment Ref" sap:VirtualizedContainerService.HintSize="917,1764" sap2010:WorkflowViewState.IdRef="Sequence_185">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3PaymentRef" />
                                <Variable x:TypeArguments="x:String" Name="strResponse" />
                                <Variable x:TypeArguments="x:Int32" Name="intStatusCode" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Matches BuilderPattern="What’s your payment reference number\?(\d+)" sap:VirtualizedContainerService.HintSize="875,59" sap2010:WorkflowViewState.IdRef="Matches_96" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s your payment reference number\\?(\\d+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s your payment reference number\?(\d+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog3PaymentRef]" />
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_298">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strDog3PaymentRef]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[ieDog3PaymentRef(0).value]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_299">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strDog3PaymentRef]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[strDog3PaymentRef.Replace("What’s your payment reference number?","")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" AuthenticationType="None" BodyFormat="application/xml" DisplayName="HTTP Request" EnableSSLVerification="True" EndPoint="https://publicapi.payments.service.gov.uk/v1/payments" sap:VirtualizedContainerService.HintSize="875,70" sap2010:WorkflowViewState.IdRef="HttpClient_3" Method="GET" Result="[strResponse]" StatusCode="[intStatusCode]" TimeoutMS="6000">
                                <ui:HttpClient.Attachments>
                                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                </ui:HttpClient.Attachments>
                                <ui:HttpClient.Cookies>
                                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                </ui:HttpClient.Cookies>
                                <ui:HttpClient.Headers>
                                  <InArgument x:TypeArguments="x:String" x:Key="Authorization">Bearer api_test_25k5e66206d9ltqo2l8ll7sqan4fjbl5k8na3i7oj65mq9kb2qi1ljv0vl</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                                </ui:HttpClient.Headers>
                                <ui:HttpClient.Parameters>
                                  <InArgument x:TypeArguments="x:String" x:Key="reference">[strDog3PaymentRef]</InArgument>
                                </ui:HttpClient.Parameters>
                                <ui:HttpClient.UrlSegments>
                                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                </ui:HttpClient.UrlSegments>
                              </ui:HttpClient>
                              <If Condition="[intStatusCode = 200]" sap:VirtualizedContainerService.HintSize="875,1263" sap2010:WorkflowViewState.IdRef="If_53">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="526,1103" sap2010:WorkflowViewState.IdRef="Sequence_221">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="njl:JArray" Name="arrResponse" />
                                      <Variable x:TypeArguments="njl:JObject" Name="jsonObject" />
                                      <Variable x:TypeArguments="x:String" Name="totalValue" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_3" JsonObject="[jsonObject]" JsonString="[strResponse]" />
                                    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_429">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[totalValue]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[jsonObject("total").ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <If Condition="[CInt(totalValue) = 1]" sap:VirtualizedContainerService.HintSize="484,812" sap2010:WorkflowViewState.IdRef="If_52">
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_220">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_430">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strDog1PaymentRef]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_431">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_432">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">["Amount of Payment records found on Gov pay = " + totalValue +"."]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_433">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">No</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_434">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">No</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_435">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_222">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_436">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strDog1PaymentRef]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_437">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_438">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Payment Reference Doesnt Exist on Gov Pay</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_439">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">No</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_440">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">No</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_441">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="921,22" sap2010:WorkflowViewState.IdRef="Catch`1_18">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="Nothing" />
                                </ActivityAction.Argument>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,652" sap2010:WorkflowViewState.IdRef="Sequence_186">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_300">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strDog3PaymentRef]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_301">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_302">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Payment Reference Doesnt Exist</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_315">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,58" sap2010:WorkflowViewState.IdRef="Assign_316">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_397">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Hard Fail</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                        <Sequence DisplayName="Get whether Dog is Neutered" sap:VirtualizedContainerService.HintSize="1044,68" sap2010:WorkflowViewState.IdRef="Sequence_136">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3Neutered" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches BuilderPattern="Is your dog neutered\?\s*\([Dd]og 3\)\s*(Yes|No|I'm not sure)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_85" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Is your dog neutered\\?\\s*\\([Dd]og 3\\)\\s*(Yes|No|I'm not sure)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Is your third dog neutered\?\s*(Yes|No|I'm not sure)" RegexOption="IgnoreCase, Compiled" Result="[ieDog3Neutered]" />
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_243">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3Neutered]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[ieDog3Neutered(0).value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_244">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3Neutered]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog3Neutered.Replace(Environment.NewLine, String.Empty)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_245">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3Neutered]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog3Neutered.Replace("Is your third dog neutered?","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                        <Sequence DisplayName="Get Whether Dog Is Microchipped" sap:VirtualizedContainerService.HintSize="1044,68" sap2010:WorkflowViewState.IdRef="Sequence_137">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3MicroChipped" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches BuilderPattern="Is your third dog microchipped\?\s*([A-Za-z]+)" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_86" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Is your third dog microchipped\\?\\s*([A-Za-z]+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Is your third dog microchipped\?\s*([A-Za-z]+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog3MicroChipped]" />
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_246">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3MicroChipped]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[ieDog3MicroChipped(0).value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_247">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3MicroChipped]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog3MicroChipped.Replace(Environment.NewLine, String.Empty)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_248">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strDog3MicroChipped]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strDog3MicroChipped.Replace("Is your third dog microchipped?","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                        <If Condition="[strDog3MicroChipped.ToLower.Contains(&quot;yes&quot;)]" sap:VirtualizedContainerService.HintSize="1044,1363" sap2010:WorkflowViewState.IdRef="If_34">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Get Dog 3 Microchip number" sap:VirtualizedContainerService.HintSize="695,1203" sap2010:WorkflowViewState.IdRef="Sequence_138">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ieDog3MicrochipNumber" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Matches BuilderPattern="What’s the microchip number for your third dog\?\s*(\d+)" sap:VirtualizedContainerService.HintSize="653,59" sap2010:WorkflowViewState.IdRef="Matches_87" Input="[strEmailBody]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;What’s the microchip number for your third dog\\?\\s*(\\d+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="What’s the microchip number for your third dog\?\s*(\d+)" RegexOption="IgnoreCase, Compiled" Result="[ieDog3MicrochipNumber]" />
                              <Assign sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_249">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strDog3MicroChipNumber]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[ieDog3MicrochipNumber(0).value]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_250">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strDog3MicroChipNumber]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[strDog3MicroChipNumber.Replace(Environment.NewLine, String.Empty)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_251">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strDog3MicroChipNumber]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[strDog3MicroChipNumber.Replace("What’s the microchip number for your third dog?","")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[strDog3MicroChipNumber.Length = 15]" sap:VirtualizedContainerService.HintSize="653,712" sap2010:WorkflowViewState.IdRef="If_47">
                                <If.Then>
                                  <Sequence DisplayName="Microchip number provided" sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_205">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_375">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">No</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_376">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_377">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_378">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_402">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Passed</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Flag that Microchip not provided" sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_203">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_367">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_368">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">["Microchip lengh is: " + strDog3MicroChipNumber.Length.ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_369">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_370">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_398">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Soft Fail</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Flag that Microchip not provided" sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_200">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_355">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strFollowUpNeeded]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_356">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strFollowUpReason]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Microchip Number no provided</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_357">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strCertNeeded]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_358">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strCertSent]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Yes</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_399">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strApplicationStatus]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Soft Fail</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Else>
                        </If>
                        <Switch x:TypeArguments="x:String" DisplayName="Check where we should add the Details" Expression="[strApplicationStatus]" sap:VirtualizedContainerService.HintSize="1044,187" sap2010:WorkflowViewState.IdRef="Switch`1_7">
                          <Sequence x:Key="Soft Fail" sap:VirtualizedContainerService.HintSize="376,468" sap2010:WorkflowViewState.IdRef="Sequence_213">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strOwnerCountry,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog1Name,strDog1DoB,strDog1Colour,strDog1Gender,strDog1InsuranceStartDate,strDog1PaymentRef,strDog1Neutered,strDog1MicroChipped,strDog1MicroChipNumber,strFollowUpNeeded,strFollowUpReason,strCertNeeded,strCertSent}]" DataTable="[io_dtDogInformationPass]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_50" />
                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strOwnerCountry,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog1Name,strDog1DoB,strDog1Colour,strDog1Gender,strDog1InsuranceStartDate,strDog1PaymentRef,strDog1Neutered,strDog1MicroChipped,strDog1MicroChipNumber,strFollowUpNeeded,strFollowUpReason,strCertNeeded,strCertSent}]" DataTable="[io_dtDogInformationSoftFail]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_51" />
                          </Sequence>
                          <ui:AddDataRow DataRow="{x:Null}" x:Key="Hard Fail" ArrayRow="[{strEmailID,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strOwnerCountry,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog1Name,strDog1DoB,strDog1Colour,strDog1Gender,strDog1InsuranceStartDate,strDog1PaymentRef,strDog1Neutered,strDog1MicroChipped,strDog1MicroChipNumber,strFollowUpNeeded,strFollowUpReason,strCertNeeded,strCertSent}]" DataTable="[io_dtDogInformationHardFail]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_52" />
                          <ui:AddDataRow DataRow="{x:Null}" x:Key="Passed" ArrayRow="[{strEmailID,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strOwnerCountry,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog1Name,strDog1DoB,strDog1Colour,strDog1Gender,strDog1InsuranceStartDate,strDog1PaymentRef,strDog1Neutered,strDog1MicroChipped,strDog1MicroChipNumber,strFollowUpNeeded,strFollowUpReason,strCertNeeded,strCertSent}]" DataTable="[io_dtDogInformationPass]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_53" />
                        </Switch>
                        <If Condition="[CBool(io_Config(&quot;boolPausePoint1&quot;))]" sap:VirtualizedContainerService.HintSize="1044,378" sap2010:WorkflowViewState.IdRef="If_35">
                          <If.Then>
                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strEmailID,strFirstName,strLastName,strAddressLine1,strAddressLine2,strTown,strCounty,strOwnerCountry,strPostCode,strOwnerDoB,strOwnerPhoneNumber,strOwnerEmailAddress,strDog3Name,strDog3DoB,strDog3Colour,strDog3Gender,strDog3InsuranceStartDate,strDog3PaymentRef,strDog3Neutered,strDog3MicroChipped,strDog3MicroChipNumber,strFollowUpNeeded,strFollowUpReason,strCertNeeded,strCertSent}]" DataTable="[dtCurrentEmail]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_25" />
                          </If.Then>
                        </If>
                      </Sequence>
                    </If.Then>
                  </If>
                  <If Condition="[CBool(io_Config(&quot;boolPausePoint1&quot;))]" sap:VirtualizedContainerService.HintSize="610,52" sap2010:WorkflowViewState.IdRef="If_37">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Build_HTML_Table_Test" sap:VirtualizedContainerService.HintSize="549,2045" sap2010:WorkflowViewState.IdRef="Sequence_141">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="sd1:DataTable" Name="dtTableResults" />
                          <Variable x:TypeArguments="x:String" Name="HTMLHeader" />
                          <Variable x:TypeArguments="x:String" Name="HTMLFooter" />
                          <Variable x:TypeArguments="x:String" Name="MiddleHTML" />
                          <Variable x:TypeArguments="x:String" Name="HTMLContent" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="507,162" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_48">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[HTMLHeader]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;style&gt;table, th, td {  border:1px solid black;}&lt;/style&gt;&lt;body&gt;&lt;table style=""width:100%""&gt;  &lt;tr&gt;    &lt;th&gt;Email ID&lt;/th&gt;    &lt;th&gt;First Name&lt;/th&gt;    &lt;th&gt;Last Name&lt;/th&gt;    &lt;th&gt;Address Line 1&lt;/th&gt;    &lt;th&gt;Address Line 2&lt;/th&gt;    &lt;th&gt;Town Or City&lt;/th&gt;    &lt;th&gt;County&lt;/th&gt;    &lt;th&gt;PostCode&lt;/th&gt;    &lt;th&gt;Country&lt;/th&gt;    &lt;th&gt;Date Of Birth&lt;/th&gt;    &lt;th&gt;Phone Number&lt;/th&gt;    &lt;th&gt;Email Address&lt;/th&gt;    &lt;th&gt;Dogs Name&lt;/th&gt;    &lt;th&gt;Dog DOB&lt;/th&gt;    &lt;th&gt;Dog Colour&lt;/th&gt;    &lt;th&gt;Dog Gender&lt;/th&gt;    &lt;th&gt;Insurance Start Date&lt;/th&gt;    &lt;th&gt;Payment Ref&lt;/th&gt;    &lt;th&gt;Neutered&lt;/th&gt;    &lt;th&gt;Microchipped&lt;/th&gt;    &lt;th&gt;MicrochipNumber&lt;/th&gt;    &lt;th&gt;Follow up Needed&lt;/th&gt;    &lt;th&gt;Follow Up Reason&lt;/th&gt;    &lt;th&gt;Cert Needed&lt;/th&gt;    &lt;th&gt;Cert Sent&lt;/th&gt;"]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_49">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[HTMLFooter]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_50">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[MiddleHTML]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                        </ui:MultipleAssign>
                        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtCurrentEmail]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="507,1119" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                          <ui:ForEachRow.Body>
                            <ActivityAction x:TypeArguments="sd1:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd1:DataRow" Name="CurrentRow" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="473,998" sap2010:WorkflowViewState.IdRef="Sequence_140">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="RowVal1" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal2" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal3" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal4" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal5" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal6" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal7" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal8" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal9" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal10" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal11" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal12" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal13" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal14" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal15" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal16" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal17" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal18" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal19" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal20" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal21" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal22" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal23" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal24" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal25" />
                                  <Variable x:TypeArguments="x:String" Name="RowVal26" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="431,906" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                                  <ui:MultipleAssign.AssignOperations>
                                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="32">
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_51">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal1]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(0).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_52">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal2]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(1).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_53">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal3]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(2).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_54">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal4]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(3).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_55">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal5]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(4).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_56">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal6]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(5).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_57">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal7]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(6).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_58">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal8]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(7).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_59">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal9]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(8).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_60">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal10]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(9).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_61">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal11]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(10).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_62">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal12]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(11).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_63">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal13]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(12).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_64">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal14]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(13).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_65">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal15]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(14).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_66">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal16]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(15).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_67">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal17]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(16).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_68">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal18]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(17).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_69">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal19]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(18).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_71">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal20]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(19).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_72">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal21]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(20).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_73">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal22]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(21).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_74">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal23]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(22).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_75">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal24]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(23).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_76">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal25]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(24).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_77">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[RowVal26]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow(25).ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_70">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[MiddleHTML]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String" xml:space="preserve">["  &lt;tr&gt;&lt;td&gt;"+RowVal1+"&lt;/td&gt;&lt;td&gt;"+RowVal2+"&lt;/td&gt;&lt;td&gt;"+RowVal3+"&lt;/td&gt;&lt;td&gt;"+Rowval4+"&lt;/td&gt;&lt;td&gt;"+RowVal5+"&lt;/td&gt;&lt;td&gt;"+RowVal6+"&lt;/td&gt;&lt;td&gt;"+RowVal7+"&lt;/td&gt;&lt;td&gt;"+RowVal8+"&lt;/td&gt;&lt;td&gt;"+RowVal9+"&lt;/td&gt;&lt;td&gt;"+RowVal10+"&lt;/td&gt;&lt;td&gt;"+RowVal11+"&lt;/td&gt;&lt;td&gt;"+RowVal12+"&lt;/td&gt;&lt;td&gt;"+RowVal13+"&lt;/td&gt;&lt;td&gt;"+RowVal14+"&lt;/td&gt;&lt;td&gt;"+RowVal15+"&lt;/td&gt;&lt;td&gt;"+RowVal16+"&lt;/td&gt;&lt;td&gt;"+RowVal17+"&lt;/td&gt;&lt;td&gt;"+RowVal18+"&lt;/td&gt;&lt;td&gt;"+RowVal19+"&lt;/td&gt;&lt;td&gt;"+RowVal20+"&lt;/td&gt;&lt;td&gt;"+RowVal21+"&lt;/td&gt;&lt;td&gt;"+RowVal22+"&lt;/td&gt;&lt;td&gt;"+RowVal23+"&lt;/td&gt;&lt;td&gt;"+RowVal24+"&lt;/td&gt;&lt;td&gt;"+RowVal25+"&lt;/td&gt;&lt;td&gt;"+RowVal26+"&lt;/td&gt; &lt;/tr&gt;" +MiddleHTML]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                    </scg:List>
                                  </ui:MultipleAssign.AssignOperations>
                                </ui:MultipleAssign>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEachRow.Body>
                        </ui:ForEachRow>
                        <Assign sap:VirtualizedContainerService.HintSize="507,60" sap2010:WorkflowViewState.IdRef="Assign_253">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strDataAsTable]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[HTMLHeader+MiddleHTML+HTMLFooter]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="507,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_20" MethodName="Stop">
                          <InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                          </InvokeMethod.TargetObject>
                        </InvokeMethod>
                        <p:Generic_PopUp OUT_ProcessType="{x:Null}" DisplayName="Generic PopUp" sap:VirtualizedContainerService.HintSize="507,22" IN_CSS_filepath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\YesNo.css&quot;]" IN_ErrorMessage="Please check the information has been pulled correctly" IN_PopupMessage="[&quot;&lt;h1&gt;Please Check Data&lt;/h1&gt;Below is the data which was pulled from the email. Please check that it is all correct.&quot; + strDataAsTable]" IN_PopupTitle="Department for Environment, Food and Rural Affairs" IN_WidthHeight="[{1200,550}]" sap2010:WorkflowViewState.IdRef="Generic_PopUp_11" OUT_strButtonSelected="[strButtonSelected]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </p:Generic_PopUp>
                        <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="507,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_21" MethodName="Start">
                          <InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                          </InvokeMethod.TargetObject>
                        </InvokeMethod>
                        <ui:ClearDataTable DataTable="[dtCurrentEmail]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="507,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_3" />
                      </Sequence>
                    </If.Then>
                  </If>
                  <ui:CommentOut DisplayName="Add back in before live testing" sap:VirtualizedContainerService.HintSize="610,52" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,343" sap2010:WorkflowViewState.IdRef="Sequence_155">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="334,64" sap2010:WorkflowViewState.IdRef="Assign_257">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[EmailText]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">&lt;p&gt;&lt;strong&gt;PLEASE DO NOT REPLY TO THIS EMAIL. This response has been automatically generated, and the inbox is not monitored.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Thank you for your application, which will be processed shortly. If your application is successful, you will receive a certificate to your provided email address confirming your registration.&lt;/p&gt;
&lt;p&gt;Your registration certificate is not a certificate of exemption and will expire on 31 December 2024. To be eligible to receive your certificate of exemption, you must have met all conditions (with supporting evidence) listed with your registration certificate.&lt;/p&gt;
&lt;p&gt;Please note, you can provide all necessary evidence at any time before 31 December 2024.&lt;/p&gt;
&lt;p&gt;If you have any queries regarding your application, please contact &lt;a href='mailto:dogsindex@defra.gov.uk'&gt;dogsindex@defra.gov.uk&lt;/a&gt; quoting the following information:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Owner’s name&lt;/li&gt;
  &lt;li&gt;Name of the dog(s)&lt;/li&gt;
  &lt;li&gt;Microchip number(s) if applicable&lt;/li&gt;
&lt;/ul&gt;</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:SendOutlookMail Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Account="[io_Config(&quot;AccountName&quot;).ToString]" Body="[EmailText]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,147" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" IsBodyHtml="True" IsDraft="False" Subject="Apply to add an XL Bully to the Index of Exempted Dogs" To="[strOwnerEmailAddress]">
                          <ui:SendOutlookMail.Files>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                          </ui:SendOutlookMail.Files>
                        </ui:SendOutlookMail>
                      </Sequence>
                    </ui:CommentOut.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:CommentOut>
                  <Assign sap:VirtualizedContainerService.HintSize="610,60" sap2010:WorkflowViewState.IdRef="Assign_254">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intEmailID]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[CInt(strEmailID)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="610,60" sap2010:WorkflowViewState.IdRef="Assign_255">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intEmailID]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[intEmailID + 1]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:SetAsset TimeoutMS="{x:Null}" AssetName="Email ID" DisplayName="Set Asset" sap:VirtualizedContainerService.HintSize="610,134" sap2010:WorkflowViewState.IdRef="SetAsset_3" Value="[intEmailID.ToString]" />
                  <Sequence sap2010:Annotation.AnnotationText="Includes custom log fields to the log message.&#xA;They are removed after logging to prevent duplicated status messages about a single transaction." DisplayName="Log Success with additional logging fields" sap:VirtualizedContainerService.HintSize="610,176" sap2010:WorkflowViewState.IdRef="Sequence_151">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="listMailMessages" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:AddLogFields DisplayName="Add transaction log fields (Success)" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="AddLogFields_2">
                      <ui:AddLogFields.Fields>
                        <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionStatus">Success</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionNumber">[in_TransactionNumber.ToString]</InArgument>
                      </ui:AddLogFields.Fields>
                    </ui:AddLogFields>
                    <ui:LogMessage DisplayName="Log Message (Success)" sap:VirtualizedContainerService.HintSize="434,93" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Transaction Successful&quot;]" />
                    <ui:RemoveLogFields DisplayName="Remove transaction log fields (Success)" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="RemoveLogFields_2">
                      <ui:RemoveLogFields.Fields>
                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="8">
                          <InArgument x:TypeArguments="x:String">logF_TransactionStatus</InArgument>
                          <InArgument x:TypeArguments="x:String">logF_TransactionNumber</InArgument>
                          <InArgument x:TypeArguments="x:String">logF_TransactionID</InArgument>
                          <InArgument x:TypeArguments="x:String">logF_TransactionField1</InArgument>
                          <InArgument x:TypeArguments="x:String">logF_TransactionField2</InArgument>
                        </scg:List>
                      </ui:RemoveLogFields.Fields>
                    </ui:RemoveLogFields>
                    <Sequence DisplayName="Populate Work Log" sap:VirtualizedContainerService.HintSize="434,351" sap2010:WorkflowViewState.IdRef="Sequence_150">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <InvokeMethod DisplayName="Stop Stopwatch" sap:VirtualizedContainerService.HintSize="238.5,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_25" MethodName="Stop">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                        </InvokeMethod.TargetObject>
                      </InvokeMethod>
                      <l:Log_Case DisplayName="Log Case - Local File" sap:VirtualizedContainerService.HintSize="238.5,22" IN_dateCaseEndTime="[Now]" IN_dateCaseStartTime="[in_dateCaseStartTime]" IN_dateCaseTotalTime="[(Now - in_dateCaseStartTime).ToString]" IN_strCaseID="[String.Join(&quot;, &quot;, in_arrCaseID.Where(Function(s) not String.IsNullOrEmpty(s)))]" IN_strFilePath="[in_strWorkLogFilepath]" IN_strOutcome="Success" IN_strUser="[Environment.UserName]" IN_strWorkpackageName="[io_Config(&quot;logF_BusinessProcessName&quot;).ToString]" sap2010:WorkflowViewState.IdRef="Log_Case_4" in_dblCaseProcessingTime="[Math.Round(io_swProcessingTimer.Elapsed.TotalSeconds, 2)]">
                        <l:Log_Case.IN_strNotes>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </l:Log_Case.IN_strNotes>
                        <l:Log_Case.IN_strOutcomeMessage>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </l:Log_Case.IN_strOutcomeMessage>
                      </l:Log_Case>
                      <l:LogTransaction DisplayName="LogTransaction - SQL" sap:VirtualizedContainerService.HintSize="238.5,22" IN_dateEndDateTime="[Now]" IN_dateStartDateTime="[in_dateCaseStartTime]" IN_intExitPoint="-1" IN_strFileName="[in_strSQLFilePath]" IN_strOutcome="Success" IN_strTotalTime="[(Math.Round(io_swProcessingTimer.Elapsed.TotalSeconds, 2)).ToString]" IN_strTransactionID="[String.Join(&quot;, &quot;, in_arrCaseID.Where(Function(s) not String.IsNullOrEmpty(s)))]" IN_strUser="[Environment.UserName]" IN_strVersion="[io_Config(&quot;WorkPackageVersion&quot;).ToString]" IN_strWorkPackage="[io_Config(&quot;WorkPackageID&quot;).ToString]" sap2010:WorkflowViewState.IdRef="LogTransaction_4">
                        <l:LogTransaction.IN_strMiscNotes>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" DisplayName="Literal&lt;String&gt;" Value="" />
                          </InArgument>
                        </l:LogTransaction.IN_strMiscNotes>
                        <l:LogTransaction.IN_strOutcomeNotes>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" DisplayName="Literal&lt;String&gt;" Value="" />
                          </InArgument>
                        </l:LogTransaction.IN_strOutcomeNotes>
                      </l:LogTransaction>
                    </Sequence>
                    <ui:GetOutlookMailMessages Filter="{x:Null}" TimeoutMS="{x:Null}" Account="[io_Config(&quot;AccountName&quot;).ToString]" DisplayName="Get &quot;In Progress&quot; Email" GetAttachements="False" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_1" MailFolder="[io_Config(&quot;InProgress&quot;).ToString]" MarkAsRead="False" Messages="[listMailMessages]" OnlyUnreadMessages="False" Top="1" />
                    <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="434,304" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[listMailMessages]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="snm:MailMessage">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="item" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_156">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MoveOutlookMessage Account="[io_Config(&quot;AccountName&quot;).ToString]" DisplayName="Move Email to &quot;Completed&quot;" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_8" MailFolder="[io_Config(&quot;Completed&quot;).ToString]" MailMessage="[item]" />
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                    </ui:ForEach>
                  </Sequence>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="656,22" sap2010:WorkflowViewState.IdRef="Catch`1_15">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="Nothing" />
                    </ActivityAction.Argument>
                    <Sequence sap2010:Annotation.AnnotationText="If a system exception occurs during the process, the transaction item's status is updated as Failed (Exception Type: Application)." DisplayName="System Exception" sap:VirtualizedContainerService.HintSize="518,925" sap2010:WorkflowViewState.IdRef="Sequence_149">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Boolean" Name="QueueRetry" />
                        <Variable x:TypeArguments="x:String" Name="strLogNote" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Populate Work Log" sap:VirtualizedContainerService.HintSize="476,757" sap2010:WorkflowViewState.IdRef="Sequence_147">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="listMailMessages" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <InvokeMethod DisplayName="Stop Stopwatch" sap:VirtualizedContainerService.HintSize="434,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_23" MethodName="Stop">
                          <InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                          </InvokeMethod.TargetObject>
                        </InvokeMethod>
                        <l:Log_Case DisplayName="Log Case - Local File" sap:VirtualizedContainerService.HintSize="434,22" IN_dateCaseEndTime="[Now]" IN_dateCaseStartTime="[in_dateCaseStartTime]" IN_dateCaseTotalTime="[(Now - in_dateCaseStartTime).ToString]" IN_strCaseID="[String.Join(&quot;, &quot;, in_arrCaseID.Where(Function(s) not String.IsNullOrEmpty(s)))]" IN_strFilePath="[in_strWorkLogFilepath]" IN_strOutcome="System Exception" IN_strUser="[Environment.UserName]" IN_strWorkpackageName="[io_Config(&quot;logF_BusinessProcessName&quot;).ToString]" sap2010:WorkflowViewState.IdRef="Log_Case_3" in_dblCaseProcessingTime="[Math.Round(io_swProcessingTimer.Elapsed.TotalSeconds, 2)]">
                          <l:Log_Case.IN_strNotes>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </l:Log_Case.IN_strNotes>
                          <l:Log_Case.IN_strOutcomeMessage>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </l:Log_Case.IN_strOutcomeMessage>
                        </l:Log_Case>
                        <l:LogTransaction DisplayName="LogTransaction - SQL" sap:VirtualizedContainerService.HintSize="434,22" IN_dateEndDateTime="[Now]" IN_dateStartDateTime="[in_dateCaseStartTime]" IN_intExitPoint="-1" IN_strFileName="[in_strSQLFilePath]" IN_strOutcome="System Exception" IN_strTotalTime="[(Math.Round(io_swProcessingTimer.Elapsed.TotalSeconds, 2)).ToString]" IN_strTransactionID="[String.Join(&quot;, &quot;, in_arrCaseID.Where(Function(s) not String.IsNullOrEmpty(s)))]" IN_strUser="[Environment.UserName]" IN_strVersion="[io_Config(&quot;WorkPackageVersion&quot;).ToString]" IN_strWorkPackage="[io_Config(&quot;WorkPackageID&quot;).ToString]" sap2010:WorkflowViewState.IdRef="LogTransaction_3">
                          <l:LogTransaction.IN_strMiscNotes>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" DisplayName="Literal&lt;String&gt;" Value="" />
                            </InArgument>
                          </l:LogTransaction.IN_strMiscNotes>
                          <l:LogTransaction.IN_strOutcomeNotes>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" DisplayName="Literal&lt;String&gt;" Value="" />
                            </InArgument>
                          </l:LogTransaction.IN_strOutcomeNotes>
                        </l:LogTransaction>
                        <ui:GetOutlookMailMessages Filter="{x:Null}" TimeoutMS="{x:Null}" Account="[io_Config(&quot;AccountName&quot;).ToString]" DisplayName="Get &quot;In Progress&quot; Email" GetAttachements="False" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_2" MailFolder="[io_Config(&quot;InProgress&quot;).ToString]" MarkAsRead="False" Messages="[listMailMessages]" OnlyUnreadMessages="False" Top="1" />
                        <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="434,304" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[listMailMessages]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="snm:MailMessage">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="item" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_157">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:MoveOutlookMessage Account="[io_Config(&quot;AccountName&quot;).ToString]" DisplayName="Move Email to &quot;Review&quot;" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_7" MailFolder="[io_Config(&quot;Review&quot;).ToString]" MailMessage="[item]" />
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                        </ui:ForEach>
                      </Sequence>
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <FlowStep.Next>
        <x:Reference>__ReferenceID1</x:Reference>
      </FlowStep.Next>
    </FlowStep>
  </Flowchart>
</Activity>